{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../packages/common/esm5/src/location/location.js","../../../packages/common/esm5/src/location/hash_location_strategy.js","../../../packages/common/esm5/src/location/path_location_strategy.js","../../../packages/common/esm5/src/i18n/locale_en.js","../../../packages/common/esm5/src/i18n/locale_data.js","../../../packages/common/esm5/src/i18n/currencies.js","../../../packages/common/esm5/src/i18n/locale_data_api.js","../../../packages/common/esm5/src/i18n/format_date.js","../../../packages/common/esm5/src/i18n/format_number.js","../../../packages/common/esm5/src/i18n/localization.js","../../../packages/common/esm5/src/directives/ng_class.js","../../../packages/common/esm5/src/directives/ng_component_outlet.js","../../../packages/common/esm5/src/directives/ng_for_of.js","../../../packages/common/esm5/src/directives/ng_if.js","../../../packages/common/esm5/src/directives/ng_switch.js","../../../packages/common/esm5/src/directives/ng_plural.js","../../../packages/common/esm5/src/directives/ng_style.js","../../../packages/common/esm5/src/directives/ng_template_outlet.js","../../../packages/common/esm5/src/directives/index.js","../../../packages/common/esm5/src/pipes/deprecated/intl.js","../../../packages/common/esm5/src/pipes/deprecated/date_pipe.js","../../../packages/common/esm5/src/pipes/deprecated/number_pipe.js","../../../packages/common/esm5/src/pipes/async_pipe.js","../../../packages/common/esm5/src/pipes/case_conversion_pipes.js","../../../packages/common/esm5/src/pipes/date_pipe.js","../../../packages/common/esm5/src/pipes/i18n_plural_pipe.js","../../../packages/common/esm5/src/pipes/i18n_select_pipe.js","../../../packages/common/esm5/src/pipes/json_pipe.js","../../../packages/common/esm5/src/pipes/keyvalue_pipe.js","../../../packages/common/esm5/src/pipes/number_pipe.js","../../../packages/common/esm5/src/pipes/slice_pipe.js","../../../packages/common/esm5/src/pipes/index.js","../../../packages/common/esm5/src/common_module.js","../../../packages/common/esm5/src/viewport_scroller.js","../../../packages/common/esm5/src/cookie.js"],"names":["exports","module","factory","require","extendStatics","d","b","__proto__","Array","p","hasOwnProperty","__","this","constructor","Object","create","prototype","assign","t","s","i","n","arguments","length","call","Location","platformStrategy","_this","_subject","_angular_core","EventEmitter","_platformStrategy","getBaseHref","stripTrailingSlash","_stripIndexHtml","browserBaseHref","onPopState","ev","emit","url","path","pop","start","end","slashes","endsWith","startsWith","substring","match","pathEndIdx","index","droppedSlashIdx","decorators","type","Injectable","_super","HashLocationStrategy","_platformLocation","_baseHref","onHashChange","fn","includeHash","state","title","queryParams","prepareExternalUrl","normalizeQueryParams","replaceState","back","ctorParameters","PathLocationStrategy","href","getBaseHrefFromDOM","pathname","externalUrl","u","undefined","Math","floor","abs","v","toString","replace","registerLocaleData","data","localeId","extraData","toLowerCase","CURRENCIES_EN","ADP","AFN","ALL","AMD","AOA","ARS","AUD","BAM","BBD","BDT","BHD","BIF","BMD","BND","BOB","BRL","BSD","BWP","BYN","BYR","BZD","CAD","CHF","CLF","CLP","CNY","COP","CRC","CUC","CUP","CZK","DJF","DKK","DOP","EGP","ESP","EUR","FJD","FKP","GBP","GEL","GIP","GNF","GTQ","GYD","HKD","HNL","HRK","HUF","IDR","ILS","INR","IQD","IRR","ISK","ITL","JMD","JOD","JPY","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LTL","LUF","LVL","LYD","MGA","MGF","MMK","MNT","MRO","MUR","MXN","MYR","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PHP","PKR","PLN","PYG","RON","RSD","RUB","RUR","RWF","SBD","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","STN","SYP","THB","TMM","TND","TOP","TRL","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYI","UYU","UZS","VEF","VND","VUV","XAF","XCD","XOF","XPF","YER","NumberFormatStyle","Decimal","Percent","Currency","Scientific","Plural","Zero","One","Two","Few","Many","Other","FormStyle","Standalone","Format","TranslationWidth","Narrow","Abbreviated","Wide","Short","FormatWidth","Medium","Long","Full","NumberSymbol","Group","List","PercentSign","PlusSign","MinusSign","Exponential","SuperscriptingExponent","PerMille","Infinity","NaN","TimeSeparator","CurrencyDecimal","CurrencyGroup","WeekDay","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","findLocaleData","locale","getLocaleEraNames","width","getLocaleDateTimeFormat","getLocaleNumberSymbol","symbol","res","getLocaleExtraDayPeriodRules","map","rule","getLocaleExtraDayPeriods","formStyle","getLastDefinedValue","normalizedLocale","LOCALE_DATA","parentLocale","split","getCurrencySymbol","code","format","currency","getLocaleCurrencies","symbolNarrow","getNumberOfCurrencyDigits","digits","NAMED_FORMATS","DATE_FORMATS_SPLIT","ZoneWidth","ShortGMT","Extended","DateType","FullYear","Month","Date","Hours","Minutes","Seconds","FractionalSeconds","Day","TranslationType","DayPeriods","Days","Months","Eras","formatDate","value","timezone","date","isDate","trim","parsedNb","parseFloat","isNaN","test","_a","val","y","m","ISO8601_DATE_REGEX","isoStringToDate","toDate","getNamedFormat","formatValue","getLocaleDateFormat","getLocaleTimeFormat","shortTime","shortDate","mediumTime","mediumDate","longTime","fullTime","fullDate","formatDateTime","parts","exec","push","part","concat","slice","dateTimezoneOffset","timezoneToOffset","reverseValue","reverse","dateFormatter","DATE_FORMATS","formatter","dateStrGetter","dateGetter","weekGetter","timeZoneGetter","getDateFormatter","text","str","opt_values","key","padNumber","num","minusSign","negWrap","neg","strNum","String","offset","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","getDatePart","name","size","form","extended","getLocaleMonthNames","getLocaleDayNames","getDay","currentHours_1","currentMinutes_1","rules","hoursFrom","hours","minutesFrom","minutes","_b","hoursTo","minutesTo","result_1","dayPeriods_1","getLocaleDayPeriods","zone","ceil","Error","THURSDAY","monthBased","result","nbDaysBefore1stDayOfMonth","today","firstThurs","diff","getTime","fallback","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","tzHour","Number","tzMin","formatNumberToLocaleString","pattern","groupSymbol","decimalSymbol","digitsInfo","isPercent","formattedText","isFinite","parsedNumber","j","numStr","DECIMAL_SEP","search","integerLen","charAt","ZERO_CHAR","zeros","MAX_DIGITS","splice","parseNumber","fractionLen","exponent","toPercent","minInt","minFraction","minFrac","maxFrac","NUMBER_FORMAT_REGEXP","minIntPart","minFractionPart","maxFractionPart","parseIntAutoRadix","maxFraction","fractionSize","min","max","roundAt","digit","k","unshift","dropTrailingZeros","minLen","reduceRight","carry","decimals","groups","lgSize","join","gSize","isZero","negPre","negSuf","formatCurrency","currencyCode","parseNumberFormat","getLocaleNumberFormat","formatNumber","posPre","posSuf","positive","patternParts","indexOf","lastIndexOf","fraction","positiveParts","integer","substr","DIGIT_CHAR","ch","GROUP_SEP","negative","trunkLen","pos","parseInt","DEPRECATED_PLURAL_FN","InjectionToken","getPluralCategory","cases","ngLocalization","NgLocaleLocalization","deprecatedPluralFn","nLike","f","nDecimal","NgClass","_iterableDiffers","_keyValueDiffers","_ngEl","_renderer","defineProperty","_removeClasses","_initialClasses","_applyClasses","_rawClass","isListLikeIterable","_keyValueDiffer","ÉµisListLikeIterable","_iterableDiffer","find","configurable","iterableChanges","_applyIterableChanges","keyValueChanges","_applyKeyValueChanges","changes","forEachAddedItem","record","_toggleClass","currentValue","forEachChangedItem","forEachRemovedItem","item","rawClassVal","isArray","Set","forEach","klass","enabled","addClass","nativeElement","removeClass","KeyValueDiffers","selector","IterableDiffers","Input","Renderer2","propDecorators","ngOnChanges","_viewContainerRef","clear","NgModuleRef","_moduleRef","destroy","ngComponentOutletNgModuleFactory","parentModule","elInjector","get","injector","ComponentFactoryResolver","componentFactoryResolver","ngOnDestroy","ViewContainerRef","Directive","args","ngComponentOutlet","ngComponentOutletInjector","NgForOfContext","$implicit","ngForOf","count","even","NgForOf","_viewContainer","_template","_differs","_ngForOf","_ngForOfDirty","_trackByFn","isDevMode","console","warn","JSON","stringify","ngDoCheck","_differ","ngForTrackBy","e","_applyChanges","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","view","createEmbeddedView","tuple","RecordViewTuple","remove","move","insertTuples","_perViewChange","ilen","viewRef","context","forEachIdentityChange","dir","ctx","TemplateRef","NgIf","templateRef","_context","NgIfContext","_thenTemplateRef","_elseTemplateRef","_thenViewRef","condition","ngIf","_updateView","assertTemplate","_elseViewRef","expr","property","_created","_templateRef","enforceState","created","NgSwitch","_defaultUsed","_caseCount","newValue","_ngSwitch","_updateDefaultCases","_addDefault","_matchCase","matched","_lastCasesMatched","_lastCaseCheckIndex","_defaultViews","useDefault","_view","SwitchView","viewContainer","ngSwitch","ngSwitchCase","NgSwitchCase","Host","NgSwitchDefault","NgPlural","_localization","_switchValue","addCase","_clearViews","_activateView","_caseViews","_activeView","NgLocalization","NgPluralCase","template","ngPlural","isANumber","Attribute","NgStyle","values","_ngStyle","_setStyle","nameAndUnit","unit","setStyle","removeStyle","ElementRef","_shouldRecreateView","_viewRef","ngTemplateOutlet","ngTemplateOutletContext","ctxChange","keys","previousValue","currCtxKeys","_i","currCtxKeys_1","propName","prevCtxKeys","_updateExistingContext","NgTemplateOutlet","COMMON_DIRECTIVES","NgComponentOutlet","style","opts","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","currencyAsSymbol","options","currencyDisplay","NumberFormat","NumberFormatter","datePartGetterFactory","combine","digitCondition","nameCondition","yMMMMEEEEd","yMMMMd","jm","DATE_FORMATS$1","yyyy","yy","MMMM","MMM","MM","M","LLLL","L","dd","HH","digitModifier","hourExtractor","hour12Modify","H","hh","h","jj","ss","sss","EEEE","EEE","EE","Z","timeZoneGetter$1","w","inner","hour","hour12","timeZoneName","prop","len","cacheKey","_format","DATE_FORMATS_SPLIT$1","DATE_FORMATTER_CACHE","set","reduce","DeprecatedDatePipe","transform","isDate$1","DateFormatter$1","_locale","_ALIASES","medium","short","longDate","Pipe","pure","invalidPipeArgumentError","pipe","DeprecatedDecimalPipe","DeprecatedPercentPipe","symbolDisplay","ObservableStrategy","createSubscription","subscription","unsubscribe","onDestroy","PromiseStrategy","AsyncPipe","_ref","_latestValue","_strategy","obj","_obj","_dispose","_latestReturnedValue","_subscribe","ÉµisPromise","_promiseStrategy","dispose","_updateLatestValue","async","markForCheck","LowerCasePipe","TitleCasePipe","unicodeWordMatch","txt","toUpperCase","UpperCasePipe","error","DatePipe","message","pluralMap","I18nPluralPipe","mapping","I18nSelectPipe","JsonPipe","input","compareFn","Map","differ","differs","differChanges","keyValues","forEachItem","r","a","keyValueA","keyValueB","isEmpty","strToNumber","DecimalPipe","formatPercent","PercentPipe","display","CurrencyPipe","SlicePipe","supports","COMMON_PIPES","NgModule","declarations","providers","provide","useClass","COMMON_DEPRECATED_I18N_PIPES","ViewportScroller","getScrollPosition","supportScrollRestoration","window","scrollX","scrollY","BrowserViewportScroller","scrollToPosition","scrollToAnchor","elSelectedById","scrollToElement","elSelectedByName","document","querySelector","anchor","setHistoryScrollRestoration","history_1","history","left","rect","pageXOffset","scrollTo","NullViewportScroller","setOffset","cookieStr","encodeURIComponent","cookie","eqIndex","cookieValue"],"mappings":"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","file":"/mnt/c/Users/Sarun/dev/angular/dist/packages-dist/common/bundles/common.umd.min.js.map","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { LocationStrategy } from './location_strategy';\n/**\n * \\@publicApi\n * @record\n */\nexport function PopStateEvent() { }\n/** @type {?|undefined} */\nPopStateEvent.prototype.pop;\n/** @type {?|undefined} */\nPopStateEvent.prototype.state;\n/** @type {?|undefined} */\nPopStateEvent.prototype.type;\n/** @type {?|undefined} */\nPopStateEvent.prototype.url;\n/**\n * \\@description\n *\n * A service that applications can use to interact with a browser's URL.\n *\n * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n *\n * \\@usageNotes\n *\n * It's better to use {\\@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n *\n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n *\n * ### Example\n *\n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * \\@publicApi\n */\nvar Location = /** @class */ (function () {\n    function Location(platformStrategy) {\n        var _this = this;\n        /**\n         * \\@internal\n         */\n        this._subject = new EventEmitter();\n        this._platformStrategy = platformStrategy;\n        /** @type {?} */\n        var browserBaseHref = this._platformStrategy.getBaseHref();\n        this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n        this._platformStrategy.onPopState(function (ev) {\n            _this._subject.emit({\n                'url': _this.path(true),\n                'pop': true,\n                'state': ev.state,\n                'type': ev.type,\n            });\n        });\n    }\n    /**\n     * Returns the normalized URL path.\n     */\n    // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n    // removed.\n    /**\n     * Returns the normalized URL path.\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    Location.prototype.path = /**\n     * Returns the normalized URL path.\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        return this.normalize(this._platformStrategy.path(includeHash));\n    };\n    /**\n     * Normalizes the given path and compares to the current normalized path.\n     */\n    /**\n     * Normalizes the given path and compares to the current normalized path.\n     * @param {?} path\n     * @param {?=} query\n     * @return {?}\n     */\n    Location.prototype.isCurrentPathEqualTo = /**\n     * Normalizes the given path and compares to the current normalized path.\n     * @param {?} path\n     * @param {?=} query\n     * @return {?}\n     */\n    function (path, query) {\n        if (query === void 0) { query = ''; }\n        return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n    };\n    /**\n     * Given a string representing a URL, returns the normalized URL path without leading or\n     * trailing slashes.\n     */\n    /**\n     * Given a string representing a URL, returns the normalized URL path without leading or\n     * trailing slashes.\n     * @param {?} url\n     * @return {?}\n     */\n    Location.prototype.normalize = /**\n     * Given a string representing a URL, returns the normalized URL path without leading or\n     * trailing slashes.\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n    };\n    /**\n     * Given a string representing a URL, returns the platform-specific external URL path.\n     * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n     * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n     * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n     */\n    /**\n     * Given a string representing a URL, returns the platform-specific external URL path.\n     * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n     * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n     * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n     * @param {?} url\n     * @return {?}\n     */\n    Location.prototype.prepareExternalUrl = /**\n     * Given a string representing a URL, returns the platform-specific external URL path.\n     * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n     * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n     * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        if (url && url[0] !== '/') {\n            url = '/' + url;\n        }\n        return this._platformStrategy.prepareExternalUrl(url);\n    };\n    // TODO: rename this method to pushState\n    /**\n     * Changes the browsers URL to the normalized version of the given URL, and pushes a\n     * new item onto the platform's history.\n     */\n    /**\n     * Changes the browsers URL to the normalized version of the given URL, and pushes a\n     * new item onto the platform's history.\n     * @param {?} path\n     * @param {?=} query\n     * @param {?=} state\n     * @return {?}\n     */\n    Location.prototype.go = /**\n     * Changes the browsers URL to the normalized version of the given URL, and pushes a\n     * new item onto the platform's history.\n     * @param {?} path\n     * @param {?=} query\n     * @param {?=} state\n     * @return {?}\n     */\n    function (path, query, state) {\n        if (query === void 0) { query = ''; }\n        if (state === void 0) { state = null; }\n        this._platformStrategy.pushState(state, '', path, query);\n    };\n    /**\n     * Changes the browsers URL to the normalized version of the given URL, and replaces\n     * the top item on the platform's history stack.\n     */\n    /**\n     * Changes the browsers URL to the normalized version of the given URL, and replaces\n     * the top item on the platform's history stack.\n     * @param {?} path\n     * @param {?=} query\n     * @param {?=} state\n     * @return {?}\n     */\n    Location.prototype.replaceState = /**\n     * Changes the browsers URL to the normalized version of the given URL, and replaces\n     * the top item on the platform's history stack.\n     * @param {?} path\n     * @param {?=} query\n     * @param {?=} state\n     * @return {?}\n     */\n    function (path, query, state) {\n        if (query === void 0) { query = ''; }\n        if (state === void 0) { state = null; }\n        this._platformStrategy.replaceState(state, '', path, query);\n    };\n    /**\n     * Navigates forward in the platform's history.\n     */\n    /**\n     * Navigates forward in the platform's history.\n     * @return {?}\n     */\n    Location.prototype.forward = /**\n     * Navigates forward in the platform's history.\n     * @return {?}\n     */\n    function () { this._platformStrategy.forward(); };\n    /**\n     * Navigates back in the platform's history.\n     */\n    /**\n     * Navigates back in the platform's history.\n     * @return {?}\n     */\n    Location.prototype.back = /**\n     * Navigates back in the platform's history.\n     * @return {?}\n     */\n    function () { this._platformStrategy.back(); };\n    /**\n     * Subscribe to the platform's `popState` events.\n     */\n    /**\n     * Subscribe to the platform's `popState` events.\n     * @param {?} onNext\n     * @param {?=} onThrow\n     * @param {?=} onReturn\n     * @return {?}\n     */\n    Location.prototype.subscribe = /**\n     * Subscribe to the platform's `popState` events.\n     * @param {?} onNext\n     * @param {?=} onThrow\n     * @param {?=} onReturn\n     * @return {?}\n     */\n    function (onNext, onThrow, onReturn) {\n        return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n    };\n    /**\n     * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n     * is.\n     * @param {?} params\n     * @return {?}\n     */\n    Location.normalizeQueryParams = /**\n     * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n     * is.\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        return params && params[0] !== '?' ? '?' + params : params;\n    };\n    /**\n     * Given 2 parts of a url, join them with a slash if needed.\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    Location.joinWithSlash = /**\n     * Given 2 parts of a url, join them with a slash if needed.\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start.length == 0) {\n            return end;\n        }\n        if (end.length == 0) {\n            return start;\n        }\n        /** @type {?} */\n        var slashes = 0;\n        if (start.endsWith('/')) {\n            slashes++;\n        }\n        if (end.startsWith('/')) {\n            slashes++;\n        }\n        if (slashes == 2) {\n            return start + end.substring(1);\n        }\n        if (slashes == 1) {\n            return start + end;\n        }\n        return start + '/' + end;\n    };\n    /**\n     * If url has a trailing slash, remove it, otherwise return url as is. This\n     * method looks for the first occurrence of either #, ?, or the end of the\n     * line as `/` characters after any of these should not be replaced.\n     * @param {?} url\n     * @return {?}\n     */\n    Location.stripTrailingSlash = /**\n     * If url has a trailing slash, remove it, otherwise return url as is. This\n     * method looks for the first occurrence of either #, ?, or the end of the\n     * line as `/` characters after any of these should not be replaced.\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        /** @type {?} */\n        var match = url.match(/#|\\?|$/);\n        /** @type {?} */\n        var pathEndIdx = match && match.index || url.length;\n        /** @type {?} */\n        var droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n        return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n    };\n    Location.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Location.ctorParameters = function () { return [\n        { type: LocationStrategy }\n    ]; };\n    return Location;\n}());\nexport { Location };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Location.prototype._subject;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Location.prototype._baseHref;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Location.prototype._platformStrategy;\n}\n/**\n * @param {?} baseHref\n * @param {?} url\n * @return {?}\n */\nfunction _stripBaseHref(baseHref, url) {\n    return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction _stripIndexHtml(url) {\n    return url.replace(/\\/index.html$/, '');\n}\n//# sourceMappingURL=location.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { Location } from './location';\nimport { APP_BASE_HREF, LocationStrategy } from './location_strategy';\nimport { PlatformLocation } from './platform_location';\n/**\n * \\@description\n * A {\\@link LocationStrategy} used to configure the {\\@link Location} service to\n * represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n *\n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n *\n * \\@publicApi\n */\nvar HashLocationStrategy = /** @class */ (function (_super) {\n    tslib_1.__extends(HashLocationStrategy, _super);\n    function HashLocationStrategy(_platformLocation, _baseHref) {\n        var _this = _super.call(this) || this;\n        _this._platformLocation = _platformLocation;\n        _this._baseHref = '';\n        if (_baseHref != null) {\n            _this._baseHref = _baseHref;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.onPopState = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    };\n    /**\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.getBaseHref = /**\n     * @return {?}\n     */\n    function () { return this._baseHref; };\n    /**\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.path = /**\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        /** @type {?} */\n        var path = this._platformLocation.hash;\n        if (path == null)\n            path = '#';\n        return path.length > 0 ? path.substring(1) : path;\n    };\n    /**\n     * @param {?} internal\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.prepareExternalUrl = /**\n     * @param {?} internal\n     * @return {?}\n     */\n    function (internal) {\n        /** @type {?} */\n        var url = Location.joinWithSlash(this._baseHref, internal);\n        return url.length > 0 ? ('#' + url) : url;\n    };\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} path\n     * @param {?} queryParams\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.pushState = /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} path\n     * @param {?} queryParams\n     * @return {?}\n     */\n    function (state, title, path, queryParams) {\n        /** @type {?} */\n        var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.pushState(state, title, url);\n    };\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} path\n     * @param {?} queryParams\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.replaceState = /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} path\n     * @param {?} queryParams\n     * @return {?}\n     */\n    function (state, title, path, queryParams) {\n        /** @type {?} */\n        var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.replaceState(state, title, url);\n    };\n    /**\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.forward = /**\n     * @return {?}\n     */\n    function () { this._platformLocation.forward(); };\n    /**\n     * @return {?}\n     */\n    HashLocationStrategy.prototype.back = /**\n     * @return {?}\n     */\n    function () { this._platformLocation.back(); };\n    HashLocationStrategy.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    HashLocationStrategy.ctorParameters = function () { return [\n        { type: PlatformLocation },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF,] }] }\n    ]; };\n    return HashLocationStrategy;\n}(LocationStrategy));\nexport { HashLocationStrategy };\nif (false) {\n    /** @type {?} */\n    HashLocationStrategy.prototype._baseHref;\n    /** @type {?} */\n    HashLocationStrategy.prototype._platformLocation;\n}\n//# sourceMappingURL=hash_location_strategy.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { Location } from './location';\nimport { APP_BASE_HREF, LocationStrategy } from './location_strategy';\nimport { PlatformLocation } from './platform_location';\n/**\n * \\@description\n * A {\\@link LocationStrategy} used to configure the {\\@link Location} service to\n * represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n *\n * If you're using `PathLocationStrategy`, you must provide a {\\@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n *\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * \\@publicApi\n */\nvar PathLocationStrategy = /** @class */ (function (_super) {\n    tslib_1.__extends(PathLocationStrategy, _super);\n    function PathLocationStrategy(_platformLocation, href) {\n        var _this = _super.call(this) || this;\n        _this._platformLocation = _platformLocation;\n        if (href == null) {\n            href = _this._platformLocation.getBaseHrefFromDOM();\n        }\n        if (href == null) {\n            throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n        }\n        _this._baseHref = href;\n        return _this;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.onPopState = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    };\n    /**\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.getBaseHref = /**\n     * @return {?}\n     */\n    function () { return this._baseHref; };\n    /**\n     * @param {?} internal\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.prepareExternalUrl = /**\n     * @param {?} internal\n     * @return {?}\n     */\n    function (internal) {\n        return Location.joinWithSlash(this._baseHref, internal);\n    };\n    /**\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.path = /**\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        /** @type {?} */\n        var pathname = this._platformLocation.pathname +\n            Location.normalizeQueryParams(this._platformLocation.search);\n        /** @type {?} */\n        var hash = this._platformLocation.hash;\n        return hash && includeHash ? \"\" + pathname + hash : pathname;\n    };\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @param {?} queryParams\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.pushState = /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @param {?} queryParams\n     * @return {?}\n     */\n    function (state, title, url, queryParams) {\n        /** @type {?} */\n        var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.pushState(state, title, externalUrl);\n    };\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @param {?} queryParams\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.replaceState = /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @param {?} queryParams\n     * @return {?}\n     */\n    function (state, title, url, queryParams) {\n        /** @type {?} */\n        var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.replaceState(state, title, externalUrl);\n    };\n    /**\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.forward = /**\n     * @return {?}\n     */\n    function () { this._platformLocation.forward(); };\n    /**\n     * @return {?}\n     */\n    PathLocationStrategy.prototype.back = /**\n     * @return {?}\n     */\n    function () { this._platformLocation.back(); };\n    PathLocationStrategy.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PathLocationStrategy.ctorParameters = function () { return [\n        { type: PlatformLocation },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF,] }] }\n    ]; };\n    return PathLocationStrategy;\n}(LocationStrategy));\nexport { PathLocationStrategy };\nif (false) {\n    /** @type {?} */\n    PathLocationStrategy.prototype._baseHref;\n    /** @type {?} */\n    PathLocationStrategy.prototype._platformLocation;\n}\n//# sourceMappingURL=path_location_strategy.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// THIS CODE IS GENERATED - DO NOT MODIFY\n// See angular/tools/gulp-tasks/cldr/extract.js\n/** @type {?} */\nvar u = undefined;\n/**\n * @param {?} n\n * @return {?}\n */\nfunction plural(n) {\n    /** @type {?} */\n    var i = Math.floor(Math.abs(n));\n    /** @type {?} */\n    var v = n.toString().replace(/^[^.]*\\.?/, '').length;\n    if (i === 1 && v === 0)\n        return 1;\n    return 5;\n}\nexport default [\n    'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n    [\n        ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n    ],\n    u,\n    [\n        ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ]\n    ],\n    u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n    ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n    ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n    ['.', ',', ';', '%', '+', '-', 'E', 'Ã', 'â°', 'â', 'NaN', ':'],\n    ['#,##0.###', '#,##0%', 'Â¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n];\n//# sourceMappingURL=locale_en.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * \\@publicApi\n  @type {?} */\nexport var LOCALE_DATA = {};\n/**\n * Register global data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n *\n * \\@publicApi\n * @param {?} data\n * @param {?=} localeId\n * @param {?=} extraData\n * @return {?}\n */\nexport function registerLocaleData(data, localeId, extraData) {\n    if (typeof localeId !== 'string') {\n        extraData = localeId;\n        localeId = data[0 /* LocaleId */];\n    }\n    localeId = localeId.toLowerCase().replace(/_/g, '-');\n    LOCALE_DATA[localeId] = data;\n    if (extraData) {\n        LOCALE_DATA[localeId][19 /* ExtraData */] = extraData;\n    }\n}\n/** @enum {number} */\nvar LocaleDataIndex = {\n    LocaleId: 0,\n    DayPeriodsFormat: 1,\n    DayPeriodsStandalone: 2,\n    DaysFormat: 3,\n    DaysStandalone: 4,\n    MonthsFormat: 5,\n    MonthsStandalone: 6,\n    Eras: 7,\n    FirstDayOfWeek: 8,\n    WeekendRange: 9,\n    DateFormat: 10,\n    TimeFormat: 11,\n    DateTimeFormat: 12,\n    NumberSymbols: 13,\n    NumberFormats: 14,\n    CurrencySymbol: 15,\n    CurrencyName: 16,\n    Currencies: 17,\n    PluralCase: 18,\n    ExtraData: 19,\n};\nexport { LocaleDataIndex };\n/** @enum {number} */\nvar ExtraLocaleDataIndex = {\n    ExtraDayPeriodFormats: 0,\n    ExtraDayPeriodStandalone: 1,\n    ExtraDayPeriodsRules: 2,\n};\nexport { ExtraLocaleDataIndex };\n/** @enum {number} */\nvar CurrencyIndex = {\n    Symbol: 0, SymbolNarrow: 1, NbOfDigits: 2,\n};\nexport { CurrencyIndex };\n//# sourceMappingURL=locale_data.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @typedef {?} */\nvar CurrenciesSymbols;\nexport { CurrenciesSymbols };\n/** *\n * \\@internal\n  @type {?} */\nexport var CURRENCIES_EN = {\n    'ADP': [undefined, undefined, 0],\n    'AFN': [undefined, undefined, 0],\n    'ALL': [undefined, undefined, 0],\n    'AMD': [undefined, undefined, 0],\n    'AOA': [undefined, 'Kz'],\n    'ARS': [undefined, '$'],\n    'AUD': ['A$', '$'],\n    'BAM': [undefined, 'KM'],\n    'BBD': [undefined, '$'],\n    'BDT': [undefined, 'à§³'],\n    'BHD': [undefined, undefined, 3],\n    'BIF': [undefined, undefined, 0],\n    'BMD': [undefined, '$'],\n    'BND': [undefined, '$'],\n    'BOB': [undefined, 'Bs'],\n    'BRL': ['R$'],\n    'BSD': [undefined, '$'],\n    'BWP': [undefined, 'P'],\n    'BYN': [undefined, 'Ñ.', 2],\n    'BYR': [undefined, undefined, 0],\n    'BZD': [undefined, '$'],\n    'CAD': ['CA$', '$', 2],\n    'CHF': [undefined, undefined, 2],\n    'CLF': [undefined, undefined, 4],\n    'CLP': [undefined, '$', 0],\n    'CNY': ['CNÂ¥', 'Â¥'],\n    'COP': [undefined, '$', 0],\n    'CRC': [undefined, 'â¡', 2],\n    'CUC': [undefined, '$'],\n    'CUP': [undefined, '$'],\n    'CZK': [undefined, 'KÄ', 2],\n    'DJF': [undefined, undefined, 0],\n    'DKK': [undefined, 'kr', 2],\n    'DOP': [undefined, '$'],\n    'EGP': [undefined, 'EÂ£'],\n    'ESP': [undefined, 'â§', 0],\n    'EUR': ['â¬'],\n    'FJD': [undefined, '$'],\n    'FKP': [undefined, 'Â£'],\n    'GBP': ['Â£'],\n    'GEL': [undefined, 'â¾'],\n    'GIP': [undefined, 'Â£'],\n    'GNF': [undefined, 'FG', 0],\n    'GTQ': [undefined, 'Q'],\n    'GYD': [undefined, '$', 0],\n    'HKD': ['HK$', '$'],\n    'HNL': [undefined, 'L'],\n    'HRK': [undefined, 'kn'],\n    'HUF': [undefined, 'Ft', 2],\n    'IDR': [undefined, 'Rp', 0],\n    'ILS': ['âª'],\n    'INR': ['â¹'],\n    'IQD': [undefined, undefined, 0],\n    'IRR': [undefined, undefined, 0],\n    'ISK': [undefined, 'kr', 0],\n    'ITL': [undefined, undefined, 0],\n    'JMD': [undefined, '$'],\n    'JOD': [undefined, undefined, 3],\n    'JPY': ['Â¥', undefined, 0],\n    'KHR': [undefined, 'á'],\n    'KMF': [undefined, 'CF', 0],\n    'KPW': [undefined, 'â©', 0],\n    'KRW': ['â©', undefined, 0],\n    'KWD': [undefined, undefined, 3],\n    'KYD': [undefined, '$'],\n    'KZT': [undefined, 'â¸'],\n    'LAK': [undefined, 'â­', 0],\n    'LBP': [undefined, 'LÂ£', 0],\n    'LKR': [undefined, 'Rs'],\n    'LRD': [undefined, '$'],\n    'LTL': [undefined, 'Lt'],\n    'LUF': [undefined, undefined, 0],\n    'LVL': [undefined, 'Ls'],\n    'LYD': [undefined, undefined, 3],\n    'MGA': [undefined, 'Ar', 0],\n    'MGF': [undefined, undefined, 0],\n    'MMK': [undefined, 'K', 0],\n    'MNT': [undefined, 'â®', 0],\n    'MRO': [undefined, undefined, 0],\n    'MUR': [undefined, 'Rs', 0],\n    'MXN': ['MX$', '$'],\n    'MYR': [undefined, 'RM'],\n    'NAD': [undefined, '$'],\n    'NGN': [undefined, 'â¦'],\n    'NIO': [undefined, 'C$'],\n    'NOK': [undefined, 'kr', 2],\n    'NPR': [undefined, 'Rs'],\n    'NZD': ['NZ$', '$'],\n    'OMR': [undefined, undefined, 3],\n    'PHP': [undefined, 'â±'],\n    'PKR': [undefined, 'Rs', 0],\n    'PLN': [undefined, 'zÅ'],\n    'PYG': [undefined, 'â²', 0],\n    'RON': [undefined, 'lei'],\n    'RSD': [undefined, undefined, 0],\n    'RUB': [undefined, 'â½'],\n    'RUR': [undefined, 'Ñ.'],\n    'RWF': [undefined, 'RF', 0],\n    'SBD': [undefined, '$'],\n    'SEK': [undefined, 'kr', 2],\n    'SGD': [undefined, '$'],\n    'SHP': [undefined, 'Â£'],\n    'SLL': [undefined, undefined, 0],\n    'SOS': [undefined, undefined, 0],\n    'SRD': [undefined, '$'],\n    'SSP': [undefined, 'Â£'],\n    'STD': [undefined, undefined, 0],\n    'STN': [undefined, 'Db'],\n    'SYP': [undefined, 'Â£', 0],\n    'THB': [undefined, 'à¸¿'],\n    'TMM': [undefined, undefined, 0],\n    'TND': [undefined, undefined, 3],\n    'TOP': [undefined, 'T$'],\n    'TRL': [undefined, undefined, 0],\n    'TRY': [undefined, 'âº'],\n    'TTD': [undefined, '$'],\n    'TWD': ['NT$', '$', 2],\n    'TZS': [undefined, undefined, 0],\n    'UAH': [undefined, 'â´'],\n    'UGX': [undefined, undefined, 0],\n    'USD': ['$'],\n    'UYI': [undefined, undefined, 0],\n    'UYU': [undefined, '$'],\n    'UZS': [undefined, undefined, 0],\n    'VEF': [undefined, 'Bs'],\n    'VND': ['â«', undefined, 0],\n    'VUV': [undefined, undefined, 0],\n    'XAF': ['FCFA', undefined, 0],\n    'XCD': ['EC$', '$'],\n    'XOF': ['CFA', undefined, 0],\n    'XPF': ['CFPF', undefined, 0],\n    'YER': [undefined, undefined, 0],\n    'ZAR': [undefined, 'R'],\n    'ZMK': [undefined, undefined, 0],\n    'ZMW': [undefined, 'ZK'],\n    'ZWD': [undefined, undefined, 0]\n};\n//# sourceMappingURL=currencies.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport localeEn from './locale_en';\nimport { LOCALE_DATA } from './locale_data';\nimport { CURRENCIES_EN } from './currencies';\n/** @enum {number} */\nvar NumberFormatStyle = {\n    Decimal: 0,\n    Percent: 1,\n    Currency: 2,\n    Scientific: 3,\n};\nexport { NumberFormatStyle };\nNumberFormatStyle[NumberFormatStyle.Decimal] = 'Decimal';\nNumberFormatStyle[NumberFormatStyle.Percent] = 'Percent';\nNumberFormatStyle[NumberFormatStyle.Currency] = 'Currency';\nNumberFormatStyle[NumberFormatStyle.Scientific] = 'Scientific';\n/** @enum {number} */\nvar Plural = {\n    Zero: 0,\n    One: 1,\n    Two: 2,\n    Few: 3,\n    Many: 4,\n    Other: 5,\n};\nexport { Plural };\nPlural[Plural.Zero] = 'Zero';\nPlural[Plural.One] = 'One';\nPlural[Plural.Two] = 'Two';\nPlural[Plural.Few] = 'Few';\nPlural[Plural.Many] = 'Many';\nPlural[Plural.Other] = 'Other';\n/** @enum {number} */\nvar FormStyle = {\n    Format: 0,\n    Standalone: 1,\n};\nexport { FormStyle };\nFormStyle[FormStyle.Format] = 'Format';\nFormStyle[FormStyle.Standalone] = 'Standalone';\n/** @enum {number} */\nvar TranslationWidth = {\n    Narrow: 0,\n    Abbreviated: 1,\n    Wide: 2,\n    Short: 3,\n};\nexport { TranslationWidth };\nTranslationWidth[TranslationWidth.Narrow] = 'Narrow';\nTranslationWidth[TranslationWidth.Abbreviated] = 'Abbreviated';\nTranslationWidth[TranslationWidth.Wide] = 'Wide';\nTranslationWidth[TranslationWidth.Short] = 'Short';\n/** @enum {number} */\nvar FormatWidth = {\n    Short: 0,\n    Medium: 1,\n    Long: 2,\n    Full: 3,\n};\nexport { FormatWidth };\nFormatWidth[FormatWidth.Short] = 'Short';\nFormatWidth[FormatWidth.Medium] = 'Medium';\nFormatWidth[FormatWidth.Long] = 'Long';\nFormatWidth[FormatWidth.Full] = 'Full';\n/** @enum {number} */\nvar NumberSymbol = {\n    Decimal: 0,\n    Group: 1,\n    List: 2,\n    PercentSign: 3,\n    PlusSign: 4,\n    MinusSign: 5,\n    Exponential: 6,\n    SuperscriptingExponent: 7,\n    PerMille: 8,\n    Infinity: 9,\n    NaN: 10,\n    TimeSeparator: 11,\n    CurrencyDecimal: 12,\n    CurrencyGroup: 13,\n};\nexport { NumberSymbol };\nNumberSymbol[NumberSymbol.Decimal] = 'Decimal';\nNumberSymbol[NumberSymbol.Group] = 'Group';\nNumberSymbol[NumberSymbol.List] = 'List';\nNumberSymbol[NumberSymbol.PercentSign] = 'PercentSign';\nNumberSymbol[NumberSymbol.PlusSign] = 'PlusSign';\nNumberSymbol[NumberSymbol.MinusSign] = 'MinusSign';\nNumberSymbol[NumberSymbol.Exponential] = 'Exponential';\nNumberSymbol[NumberSymbol.SuperscriptingExponent] = 'SuperscriptingExponent';\nNumberSymbol[NumberSymbol.PerMille] = 'PerMille';\nNumberSymbol[NumberSymbol.Infinity] = 'Infinity';\nNumberSymbol[NumberSymbol.NaN] = 'NaN';\nNumberSymbol[NumberSymbol.TimeSeparator] = 'TimeSeparator';\nNumberSymbol[NumberSymbol.CurrencyDecimal] = 'CurrencyDecimal';\nNumberSymbol[NumberSymbol.CurrencyGroup] = 'CurrencyGroup';\n/** @enum {number} */\nvar WeekDay = {\n    Sunday: 0,\n    Monday: 1,\n    Tuesday: 2,\n    Wednesday: 3,\n    Thursday: 4,\n    Friday: 5,\n    Saturday: 6,\n};\nexport { WeekDay };\nWeekDay[WeekDay.Sunday] = 'Sunday';\nWeekDay[WeekDay.Monday] = 'Monday';\nWeekDay[WeekDay.Tuesday] = 'Tuesday';\nWeekDay[WeekDay.Wednesday] = 'Wednesday';\nWeekDay[WeekDay.Thursday] = 'Thursday';\nWeekDay[WeekDay.Friday] = 'Friday';\nWeekDay[WeekDay.Saturday] = 'Saturday';\n/**\n * The locale id for the chosen locale (e.g `en-GB`).\n *\n * \\@publicApi\n * @param {?} locale\n * @return {?}\n */\nexport function getLocaleId(locale) {\n    return findLocaleData(locale)[0 /* LocaleId */];\n}\n/**\n * Periods of the day (e.g. `[AM, PM]` for en-US).\n *\n * \\@publicApi\n * @param {?} locale\n * @param {?} formStyle\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleDayPeriods(locale, formStyle, width) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    /** @type {?} */\n    var amPmData = /** @type {?} */ ([data[1 /* DayPeriodsFormat */], data[2 /* DayPeriodsStandalone */]]);\n    /** @type {?} */\n    var amPm = getLastDefinedValue(amPmData, formStyle);\n    return getLastDefinedValue(amPm, width);\n}\n/**\n * Days of the week for the Gregorian calendar (e.g. `[Sunday, Monday, ... Saturday]` for en-US).\n *\n * \\@publicApi\n * @param {?} locale\n * @param {?} formStyle\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleDayNames(locale, formStyle, width) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    /** @type {?} */\n    var daysData = /** @type {?} */ ([data[3 /* DaysFormat */], data[4 /* DaysStandalone */]]);\n    /** @type {?} */\n    var days = getLastDefinedValue(daysData, formStyle);\n    return getLastDefinedValue(days, width);\n}\n/**\n * Months of the year for the Gregorian calendar (e.g. `[January, February, ...]` for en-US).\n *\n * \\@publicApi\n * @param {?} locale\n * @param {?} formStyle\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleMonthNames(locale, formStyle, width) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    /** @type {?} */\n    var monthsData = /** @type {?} */ ([data[5 /* MonthsFormat */], data[6 /* MonthsStandalone */]]);\n    /** @type {?} */\n    var months = getLastDefinedValue(monthsData, formStyle);\n    return getLastDefinedValue(months, width);\n}\n/**\n * Eras for the Gregorian calendar (e.g. AD/BC).\n *\n * \\@publicApi\n * @param {?} locale\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleEraNames(locale, width) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    /** @type {?} */\n    var erasData = /** @type {?} */ (data[7 /* Eras */]);\n    return getLastDefinedValue(erasData, width);\n}\n/**\n * First day of the week for this locale, based on english days (Sunday = 0, Monday = 1, ...).\n * For example in french the value would be 1 because the first day of the week is Monday.\n *\n * \\@publicApi\n * @param {?} locale\n * @return {?}\n */\nexport function getLocaleFirstDayOfWeek(locale) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    return data[8 /* FirstDayOfWeek */];\n}\n/**\n * Range of days in the week that represent the week-end for this locale, based on english days\n * (Sunday = 0, Monday = 1, ...).\n * For example in english the value would be [6,0] for Saturday to Sunday.\n *\n * \\@publicApi\n * @param {?} locale\n * @return {?}\n */\nexport function getLocaleWeekEndRange(locale) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    return data[9 /* WeekendRange */];\n}\n/**\n * Date format that depends on the locale.\n *\n * There are four basic date formats:\n * - `full` should contain long-weekday (EEEE), year (y), long-month (MMMM), day (d).\n *\n *  For example, English uses `EEEE, MMMM d, y`, corresponding to a date like\n *  \"Tuesday, September 14, 1999\".\n *\n * - `long` should contain year, long-month, day.\n *\n *  For example, `MMMM d, y`, corresponding to a date like \"September 14, 1999\".\n *\n * - `medium` should contain year, abbreviated-month (MMM), day.\n *\n *  For example, `MMM d, y`, corresponding to a date like \"Sep 14, 1999\".\n *  For languages that do not use abbreviated months, use the numeric month (MM/M). For example,\n *  `y/MM/dd`, corresponding to a date like \"1999/09/14\".\n *\n * - `short` should contain year, numeric-month (MM/M), and day.\n *\n *  For example, `M/d/yy`, corresponding to a date like \"9/14/99\".\n *\n * \\@publicApi\n * @param {?} locale\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleDateFormat(locale, width) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    return getLastDefinedValue(data[10 /* DateFormat */], width);\n}\n/**\n * Time format that depends on the locale.\n *\n * The standard formats include four basic time formats:\n * - `full` should contain hour (h/H), minute (mm), second (ss), and zone (zzzz).\n * - `long` should contain hour, minute, second, and zone (z)\n * - `medium` should contain hour, minute, second.\n * - `short` should contain hour, minute.\n *\n * Note: The patterns depend on whether the main country using your language uses 12-hour time or\n * not:\n * - For 12-hour time, use a pattern like `hh:mm a` using h to mean a 12-hour clock cycle running\n * 1 through 12 (midnight plus 1 minute is 12:01), or using K to mean a 12-hour clock cycle\n * running 0 through 11 (midnight plus 1 minute is 0:01).\n * - For 24-hour time, use a pattern like `HH:mm` using H to mean a 24-hour clock cycle running 0\n * through 23 (midnight plus 1 minute is 0:01), or using k to mean a 24-hour clock cycle running\n * 1 through 24 (midnight plus 1 minute is 24:01).\n *\n * \\@publicApi\n * @param {?} locale\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleTimeFormat(locale, width) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    return getLastDefinedValue(data[11 /* TimeFormat */], width);\n}\n/**\n * Date-time format that depends on the locale.\n *\n * The date-time pattern shows how to combine separate patterns for date (represented by {1})\n * and time (represented by {0}) into a single pattern. It usually doesn't need to be changed.\n * What you want to pay attention to are:\n * - possibly removing a space for languages that don't use it, such as many East Asian languages\n * - possibly adding a comma, other punctuation, or a combining word\n *\n * For example:\n * - English uses `{1} 'at' {0}` or `{1}, {0}` (depending on date style), while Japanese uses\n *  `{1}{0}`.\n * - An English formatted date-time using the combining pattern `{1}, {0}` could be\n *  `Dec 10, 2010, 3:59:49 PM`. Notice the comma and space between the date portion and the time\n *  portion.\n *\n * There are four formats (`full`, `long`, `medium`, `short`); the determination of which to use\n * is normally based on the date style. For example, if the date has a full month and weekday\n * name, the full combining pattern will be used to combine that with a time. If the date has\n * numeric month, the short version of the combining pattern will be used to combine that with a\n * time. English uses `{1} 'at' {0}` for full and long styles, and `{1}, {0}` for medium and short\n * styles.\n *\n * \\@publicApi\n * @param {?} locale\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleDateTimeFormat(locale, width) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    /** @type {?} */\n    var dateTimeFormatData = /** @type {?} */ (data[12 /* DateTimeFormat */]);\n    return getLastDefinedValue(dateTimeFormatData, width);\n}\n/**\n * Number symbol that can be used to replace placeholders in number formats.\n * See {\\@link NumberSymbol} for more information.\n *\n * \\@publicApi\n * @param {?} locale\n * @param {?} symbol\n * @return {?}\n */\nexport function getLocaleNumberSymbol(locale, symbol) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    /** @type {?} */\n    var res = data[13 /* NumberSymbols */][symbol];\n    if (typeof res === 'undefined') {\n        if (symbol === NumberSymbol.CurrencyDecimal) {\n            return data[13 /* NumberSymbols */][NumberSymbol.Decimal];\n        }\n        else if (symbol === NumberSymbol.CurrencyGroup) {\n            return data[13 /* NumberSymbols */][NumberSymbol.Group];\n        }\n    }\n    return res;\n}\n/**\n * Number format that depends on the locale.\n *\n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\n * when used to format the number 12345.678 could result in \"12'345,67\". That would happen if the\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\n *\n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders;\n * they stand for the decimal separator, and so on, and are NOT real characters.\n * You must NOT \"translate\" the placeholders; for example, don't change `.` to `,` even though in\n * your language the decimal point is written with a comma. The symbols should be replaced by the\n * local equivalents, using the Number Symbols for your language.\n *\n * Here are the special characters used in number patterns:\n *\n * | Symbol | Meaning |\n * |--------|---------|\n * | . | Replaced automatically by the character used for the decimal point. |\n * | , | Replaced by the \"grouping\" (thousands) separator. |\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\n * | # | Replaced by a digit (or nothing if there aren't enough). |\n * | Â¤ | This will be replaced by a currency symbol, such as $ or USD. |\n * | % | This marks a percent format. The % symbol may change position, but must be retained. |\n * | E | This marks a scientific format. The E symbol may change position, but must be retained. |\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\n *\n * You can find more information\n * [on the CLDR website](http://cldr.unicode.org/translation/number-patterns)\n *\n * \\@publicApi\n * @param {?} locale\n * @param {?} type\n * @return {?}\n */\nexport function getLocaleNumberFormat(locale, type) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    return data[14 /* NumberFormats */][type];\n}\n/**\n * The symbol used to represent the currency for the main country using this locale (e.g. $ for\n * the locale en-US).\n * The symbol will be `null` if the main country cannot be determined.\n *\n * \\@publicApi\n * @param {?} locale\n * @return {?}\n */\nexport function getLocaleCurrencySymbol(locale) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    return data[15 /* CurrencySymbol */] || null;\n}\n/**\n * The name of the currency for the main country using this locale (e.g. USD for the locale\n * en-US).\n * The name will be `null` if the main country cannot be determined.\n *\n * \\@publicApi\n * @param {?} locale\n * @return {?}\n */\nexport function getLocaleCurrencyName(locale) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    return data[16 /* CurrencyName */] || null;\n}\n/**\n * Returns the currency values for the locale\n * @param {?} locale\n * @return {?}\n */\nfunction getLocaleCurrencies(locale) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    return data[17 /* Currencies */];\n}\n/**\n * The locale plural function used by ICU expressions to determine the plural case to use.\n * See {\\@link NgPlural} for more information.\n *\n * \\@publicApi\n * @param {?} locale\n * @return {?}\n */\nexport function getLocalePluralCase(locale) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    return data[18 /* PluralCase */];\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction checkFullData(data) {\n    if (!data[19 /* ExtraData */]) {\n        throw new Error(\"Missing extra locale data for the locale \\\"\" + data[0 /* LocaleId */] + \"\\\". Use \\\"registerLocaleData\\\" to load new data. See the \\\"I18n guide\\\" on angular.io to know more.\");\n    }\n}\n/**\n * Rules used to determine which day period to use (See `dayPeriods` below).\n * The rules can either be an array or a single value. If it's an array, consider it as \"from\"\n * and \"to\". If it's a single value then it means that the period is only valid at this exact\n * value.\n * There is always the same number of rules as the number of day periods, which means that the\n * first rule is applied to the first day period and so on.\n * You should fallback to AM/PM when there are no rules available.\n *\n * Note: this is only available if you load the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale\n * data.\n *\n * \\@publicApi\n * @param {?} locale\n * @return {?}\n */\nexport function getLocaleExtraDayPeriodRules(locale) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    checkFullData(data);\n    /** @type {?} */\n    var rules = data[19 /* ExtraData */][2 /* ExtraDayPeriodsRules */] || [];\n    return rules.map(function (rule) {\n        if (typeof rule === 'string') {\n            return extractTime(rule);\n        }\n        return [extractTime(rule[0]), extractTime(rule[1])];\n    });\n}\n/**\n * Day Periods indicate roughly how the day is broken up in different languages (e.g. morning,\n * noon, afternoon, midnight, ...).\n * You should use the function {\\@link getLocaleExtraDayPeriodRules} to determine which period to\n * use.\n * You should fallback to AM/PM when there are no day periods available.\n *\n * Note: this is only available if you load the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale\n * data.\n *\n * \\@publicApi\n * @param {?} locale\n * @param {?} formStyle\n * @param {?} width\n * @return {?}\n */\nexport function getLocaleExtraDayPeriods(locale, formStyle, width) {\n    /** @type {?} */\n    var data = findLocaleData(locale);\n    checkFullData(data);\n    /** @type {?} */\n    var dayPeriodsData = /** @type {?} */ ([\n        data[19 /* ExtraData */][0 /* ExtraDayPeriodFormats */],\n        data[19 /* ExtraData */][1 /* ExtraDayPeriodStandalone */]\n    ]);\n    /** @type {?} */\n    var dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\n    return getLastDefinedValue(dayPeriods, width) || [];\n}\n/**\n * Returns the first value that is defined in an array, going backwards.\n *\n * To avoid repeating the same data (e.g. when \"format\" and \"standalone\" are the same) we only\n * add the first one to the locale data arrays, the other ones are only defined when different.\n * We use this function to retrieve the first defined value.\n *\n * \\@publicApi\n * @template T\n * @param {?} data\n * @param {?} index\n * @return {?}\n */\nfunction getLastDefinedValue(data, index) {\n    for (var i = index; i > -1; i--) {\n        if (typeof data[i] !== 'undefined') {\n            return data[i];\n        }\n    }\n    throw new Error('Locale data API: locale data undefined');\n}\n/** @typedef {?} */\nvar Time;\nexport { Time };\n/**\n * Extract the hours and minutes from a string like \"15:45\"\n * @param {?} time\n * @return {?}\n */\nfunction extractTime(time) {\n    var _a = time.split(':'), h = _a[0], m = _a[1];\n    return { hours: +h, minutes: +m };\n}\n/**\n * Finds the locale data for a locale id\n *\n * \\@publicApi\n * @param {?} locale\n * @return {?}\n */\nexport function findLocaleData(locale) {\n    /** @type {?} */\n    var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n    /** @type {?} */\n    var match = LOCALE_DATA[normalizedLocale];\n    if (match) {\n        return match;\n    }\n    /** @type {?} */\n    var parentLocale = normalizedLocale.split('-')[0];\n    match = LOCALE_DATA[parentLocale];\n    if (match) {\n        return match;\n    }\n    if (parentLocale === 'en') {\n        return localeEn;\n    }\n    throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n}\n/**\n * Returns the currency symbol for a given currency code, or the code if no symbol available\n * (e.g.: format narrow = $, format wide = US$, code = USD)\n * If no locale is provided, it uses the locale \"en\" by default\n *\n * \\@publicApi\n * @param {?} code\n * @param {?} format\n * @param {?=} locale\n * @return {?}\n */\nexport function getCurrencySymbol(code, format, locale) {\n    if (locale === void 0) { locale = 'en'; }\n    /** @type {?} */\n    var currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];\n    /** @type {?} */\n    var symbolNarrow = currency[1 /* SymbolNarrow */];\n    if (format === 'narrow' && typeof symbolNarrow === 'string') {\n        return symbolNarrow;\n    }\n    return currency[0 /* Symbol */] || code;\n}\n/** @type {?} */\nvar DEFAULT_NB_OF_CURRENCY_DIGITS = 2;\n/**\n * Returns the number of decimal digits for the given currency.\n * Its value depends upon the presence of cents in that particular currency.\n *\n * \\@publicApi\n * @param {?} code\n * @return {?}\n */\nexport function getNumberOfCurrencyDigits(code) {\n    /** @type {?} */\n    var digits;\n    /** @type {?} */\n    var currency = CURRENCIES_EN[code];\n    if (currency) {\n        digits = currency[2 /* NbOfDigits */];\n    }\n    return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;\n}\n//# sourceMappingURL=locale_data_api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FormStyle, FormatWidth, NumberSymbol, TranslationWidth, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleDayNames, getLocaleDayPeriods, getLocaleEraNames, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocaleId, getLocaleMonthNames, getLocaleNumberSymbol, getLocaleTimeFormat } from './locale_data_api';\n/** @type {?} */\nexport var ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n/** @type {?} */\nvar NAMED_FORMATS = {};\n/** @type {?} */\nvar DATE_FORMATS_SPLIT = /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\\s\\S]*)/;\n/** @enum {number} */\nvar ZoneWidth = {\n    Short: 0,\n    ShortGMT: 1,\n    Long: 2,\n    Extended: 3,\n};\nZoneWidth[ZoneWidth.Short] = 'Short';\nZoneWidth[ZoneWidth.ShortGMT] = 'ShortGMT';\nZoneWidth[ZoneWidth.Long] = 'Long';\nZoneWidth[ZoneWidth.Extended] = 'Extended';\n/** @enum {number} */\nvar DateType = {\n    FullYear: 0,\n    Month: 1,\n    Date: 2,\n    Hours: 3,\n    Minutes: 4,\n    Seconds: 5,\n    FractionalSeconds: 6,\n    Day: 7,\n};\nDateType[DateType.FullYear] = 'FullYear';\nDateType[DateType.Month] = 'Month';\nDateType[DateType.Date] = 'Date';\nDateType[DateType.Hours] = 'Hours';\nDateType[DateType.Minutes] = 'Minutes';\nDateType[DateType.Seconds] = 'Seconds';\nDateType[DateType.FractionalSeconds] = 'FractionalSeconds';\nDateType[DateType.Day] = 'Day';\n/** @enum {number} */\nvar TranslationType = {\n    DayPeriods: 0,\n    Days: 1,\n    Months: 2,\n    Eras: 3,\n};\nTranslationType[TranslationType.DayPeriods] = 'DayPeriods';\nTranslationType[TranslationType.Days] = 'Days';\nTranslationType[TranslationType.Months] = 'Months';\nTranslationType[TranslationType.Eras] = 'Eras';\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a date according to locale rules.\n *\n * Where:\n * - `value` is a Date, a number (milliseconds since UTC epoch) or an ISO string\n *   (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. See {\\@link DatePipe} for more\n *   details.\n * - `locale` is a `string` defining the locale to use.\n * - `timezone` to be used for formatting. It understands UTC/GMT and the continental US time zone\n *   abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).\n *   If not specified, host system settings are used.\n *\n * See {\\@link DatePipe} for more details.\n *\n * \\@publicApi\n * @param {?} value\n * @param {?} format\n * @param {?} locale\n * @param {?=} timezone\n * @return {?}\n */\nexport function formatDate(value, format, locale, timezone) {\n    /** @type {?} */\n    var date = toDate(value);\n    /** @type {?} */\n    var namedFormat = getNamedFormat(locale, format);\n    format = namedFormat || format;\n    /** @type {?} */\n    var parts = [];\n    /** @type {?} */\n    var match;\n    while (format) {\n        match = DATE_FORMATS_SPLIT.exec(format);\n        if (match) {\n            parts = parts.concat(match.slice(1));\n            /** @type {?} */\n            var part = parts.pop();\n            if (!part) {\n                break;\n            }\n            format = part;\n        }\n        else {\n            parts.push(format);\n            break;\n        }\n    }\n    /** @type {?} */\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    if (timezone) {\n        dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n        date = convertTimezoneToLocal(date, timezone, true);\n    }\n    /** @type {?} */\n    var text = '';\n    parts.forEach(function (value) {\n        /** @type {?} */\n        var dateFormatter = getDateFormatter(value);\n        text += dateFormatter ?\n            dateFormatter(date, locale, dateTimezoneOffset) :\n            value === '\\'\\'' ? '\\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    });\n    return text;\n}\n/**\n * @param {?} locale\n * @param {?} format\n * @return {?}\n */\nfunction getNamedFormat(locale, format) {\n    /** @type {?} */\n    var localeId = getLocaleId(locale);\n    NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};\n    if (NAMED_FORMATS[localeId][format]) {\n        return NAMED_FORMATS[localeId][format];\n    }\n    /** @type {?} */\n    var formatValue = '';\n    switch (format) {\n        case 'shortDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Short);\n            break;\n        case 'mediumDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);\n            break;\n        case 'longDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Long);\n            break;\n        case 'fullDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Full);\n            break;\n        case 'shortTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);\n            break;\n        case 'mediumTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);\n            break;\n        case 'longTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);\n            break;\n        case 'fullTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);\n            break;\n        case 'short':\n            /** @type {?} */\n            var shortTime = getNamedFormat(locale, 'shortTime');\n            /** @type {?} */\n            var shortDate = getNamedFormat(locale, 'shortDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);\n            break;\n        case 'medium':\n            /** @type {?} */\n            var mediumTime = getNamedFormat(locale, 'mediumTime');\n            /** @type {?} */\n            var mediumDate = getNamedFormat(locale, 'mediumDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);\n            break;\n        case 'long':\n            /** @type {?} */\n            var longTime = getNamedFormat(locale, 'longTime');\n            /** @type {?} */\n            var longDate = getNamedFormat(locale, 'longDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);\n            break;\n        case 'full':\n            /** @type {?} */\n            var fullTime = getNamedFormat(locale, 'fullTime');\n            /** @type {?} */\n            var fullDate = getNamedFormat(locale, 'fullDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);\n            break;\n    }\n    if (formatValue) {\n        NAMED_FORMATS[localeId][format] = formatValue;\n    }\n    return formatValue;\n}\n/**\n * @param {?} str\n * @param {?} opt_values\n * @return {?}\n */\nfunction formatDateTime(str, opt_values) {\n    if (opt_values) {\n        str = str.replace(/\\{([^}]+)}/g, function (match, key) {\n            return (opt_values != null && key in opt_values) ? opt_values[key] : match;\n        });\n    }\n    return str;\n}\n/**\n * @param {?} num\n * @param {?} digits\n * @param {?=} minusSign\n * @param {?=} trim\n * @param {?=} negWrap\n * @return {?}\n */\nfunction padNumber(num, digits, minusSign, trim, negWrap) {\n    if (minusSign === void 0) { minusSign = '-'; }\n    /** @type {?} */\n    var neg = '';\n    if (num < 0 || (negWrap && num <= 0)) {\n        if (negWrap) {\n            num = -num + 1;\n        }\n        else {\n            num = -num;\n            neg = minusSign;\n        }\n    }\n    /** @type {?} */\n    var strNum = String(num);\n    while (strNum.length < digits) {\n        strNum = '0' + strNum;\n    }\n    if (trim) {\n        strNum = strNum.substr(strNum.length - digits);\n    }\n    return neg + strNum;\n}\n/**\n * @param {?} milliseconds\n * @param {?} digits\n * @return {?}\n */\nfunction formatFractionalSeconds(milliseconds, digits) {\n    /** @type {?} */\n    var strMs = padNumber(milliseconds, 3);\n    return strMs.substr(0, digits);\n}\n/**\n * Returns a date formatter that transforms a date into its locale digit representation\n * @param {?} name\n * @param {?} size\n * @param {?=} offset\n * @param {?=} trim\n * @param {?=} negWrap\n * @return {?}\n */\nfunction dateGetter(name, size, offset, trim, negWrap) {\n    if (offset === void 0) { offset = 0; }\n    if (trim === void 0) { trim = false; }\n    if (negWrap === void 0) { negWrap = false; }\n    return function (date, locale) {\n        /** @type {?} */\n        var part = getDatePart(name, date);\n        if (offset > 0 || part > -offset) {\n            part += offset;\n        }\n        if (name === DateType.Hours) {\n            if (part === 0 && offset === -12) {\n                part = 12;\n            }\n        }\n        else if (name === DateType.FractionalSeconds) {\n            return formatFractionalSeconds(part, size);\n        }\n        /** @type {?} */\n        var localeMinus = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n        return padNumber(part, size, localeMinus, trim, negWrap);\n    };\n}\n/**\n * @param {?} part\n * @param {?} date\n * @return {?}\n */\nfunction getDatePart(part, date) {\n    switch (part) {\n        case DateType.FullYear:\n            return date.getFullYear();\n        case DateType.Month:\n            return date.getMonth();\n        case DateType.Date:\n            return date.getDate();\n        case DateType.Hours:\n            return date.getHours();\n        case DateType.Minutes:\n            return date.getMinutes();\n        case DateType.Seconds:\n            return date.getSeconds();\n        case DateType.FractionalSeconds:\n            return date.getMilliseconds();\n        case DateType.Day:\n            return date.getDay();\n        default:\n            throw new Error(\"Unknown DateType value \\\"\" + part + \"\\\".\");\n    }\n}\n/**\n * Returns a date formatter that transforms a date into its locale string representation\n * @param {?} name\n * @param {?} width\n * @param {?=} form\n * @param {?=} extended\n * @return {?}\n */\nfunction dateStrGetter(name, width, form, extended) {\n    if (form === void 0) { form = FormStyle.Format; }\n    if (extended === void 0) { extended = false; }\n    return function (date, locale) {\n        return getDateTranslation(date, locale, name, width, form, extended);\n    };\n}\n/**\n * Returns the locale translation of a date for a given form, type and width\n * @param {?} date\n * @param {?} locale\n * @param {?} name\n * @param {?} width\n * @param {?} form\n * @param {?} extended\n * @return {?}\n */\nfunction getDateTranslation(date, locale, name, width, form, extended) {\n    switch (name) {\n        case TranslationType.Months:\n            return getLocaleMonthNames(locale, form, width)[date.getMonth()];\n        case TranslationType.Days:\n            return getLocaleDayNames(locale, form, width)[date.getDay()];\n        case TranslationType.DayPeriods:\n            /** @type {?} */\n            var currentHours_1 = date.getHours();\n            /** @type {?} */\n            var currentMinutes_1 = date.getMinutes();\n            if (extended) {\n                /** @type {?} */\n                var rules = getLocaleExtraDayPeriodRules(locale);\n                /** @type {?} */\n                var dayPeriods_1 = getLocaleExtraDayPeriods(locale, form, width);\n                /** @type {?} */\n                var result_1 = void 0;\n                rules.forEach(function (rule, index) {\n                    if (Array.isArray(rule)) {\n                        var _a = rule[0], hoursFrom = _a.hours, minutesFrom = _a.minutes;\n                        var _b = rule[1], hoursTo = _b.hours, minutesTo = _b.minutes;\n                        if (currentHours_1 >= hoursFrom && currentMinutes_1 >= minutesFrom &&\n                            (currentHours_1 < hoursTo ||\n                                (currentHours_1 === hoursTo && currentMinutes_1 < minutesTo))) {\n                            result_1 = dayPeriods_1[index];\n                        }\n                    }\n                    else { // noon or midnight\n                        var hours = rule.hours, minutes = rule.minutes;\n                        if (hours === currentHours_1 && minutes === currentMinutes_1) {\n                            result_1 = dayPeriods_1[index];\n                        }\n                    }\n                });\n                if (result_1) {\n                    return result_1;\n                }\n            }\n            // if no rules for the day periods, we use am/pm by default\n            return getLocaleDayPeriods(locale, form, /** @type {?} */ (width))[currentHours_1 < 12 ? 0 : 1];\n        case TranslationType.Eras:\n            return getLocaleEraNames(locale, /** @type {?} */ (width))[date.getFullYear() <= 0 ? 0 : 1];\n        default:\n            /** @type {?} */\n            var unexpected = name;\n            throw new Error(\"unexpected translation type \" + unexpected);\n    }\n}\n/**\n * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or\n * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,\n * extended = +04:30)\n * @param {?} width\n * @return {?}\n */\nfunction timeZoneGetter(width) {\n    return function (date, locale, offset) {\n        /** @type {?} */\n        var zone = -1 * offset;\n        /** @type {?} */\n        var minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n        /** @type {?} */\n        var hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);\n        switch (width) {\n            case ZoneWidth.Short:\n                return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.ShortGMT:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 1, minusSign);\n            case ZoneWidth.Long:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.Extended:\n                if (offset === 0) {\n                    return 'Z';\n                }\n                else {\n                    return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                        padNumber(Math.abs(zone % 60), 2, minusSign);\n                }\n            default:\n                throw new Error(\"Unknown zone width \\\"\" + width + \"\\\"\");\n        }\n    };\n}\n/** @type {?} */\nvar JANUARY = 0;\n/** @type {?} */\nvar THURSDAY = 4;\n/**\n * @param {?} year\n * @return {?}\n */\nfunction getFirstThursdayOfYear(year) {\n    /** @type {?} */\n    var firstDayOfYear = (new Date(year, JANUARY, 1)).getDay();\n    return new Date(year, 0, 1 + ((firstDayOfYear <= THURSDAY) ? THURSDAY : THURSDAY + 7) - firstDayOfYear);\n}\n/**\n * @param {?} datetime\n * @return {?}\n */\nfunction getThursdayThisWeek(datetime) {\n    return new Date(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + (THURSDAY - datetime.getDay()));\n}\n/**\n * @param {?} size\n * @param {?=} monthBased\n * @return {?}\n */\nfunction weekGetter(size, monthBased) {\n    if (monthBased === void 0) { monthBased = false; }\n    return function (date, locale) {\n        /** @type {?} */\n        var result;\n        if (monthBased) {\n            /** @type {?} */\n            var nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\n            /** @type {?} */\n            var today = date.getDate();\n            result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);\n        }\n        else {\n            /** @type {?} */\n            var firstThurs = getFirstThursdayOfYear(date.getFullYear());\n            /** @type {?} */\n            var thisThurs = getThursdayThisWeek(date);\n            /** @type {?} */\n            var diff = thisThurs.getTime() - firstThurs.getTime();\n            result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\n        }\n        return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    };\n}\n/** @typedef {?} */\nvar DateFormatter;\n/** @type {?} */\nvar DATE_FORMATS = {};\n/**\n * @param {?} format\n * @return {?}\n */\nfunction getDateFormatter(format) {\n    if (DATE_FORMATS[format]) {\n        return DATE_FORMATS[format];\n    }\n    /** @type {?} */\n    var formatter;\n    switch (format) {\n        // Era name (AD/BC)\n        case 'G':\n        case 'GG':\n        case 'GGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Abbreviated);\n            break;\n        case 'GGGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Wide);\n            break;\n        case 'GGGGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Narrow);\n            break;\n        // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)\n        case 'y':\n            formatter = dateGetter(DateType.FullYear, 1, 0, false, true);\n            break;\n        // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yy':\n            formatter = dateGetter(DateType.FullYear, 2, 0, true, true);\n            break;\n        // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yyy':\n            formatter = dateGetter(DateType.FullYear, 3, 0, false, true);\n            break;\n        // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)\n        case 'yyyy':\n            formatter = dateGetter(DateType.FullYear, 4, 0, false, true);\n            break;\n        // Month of the year (1-12), numeric\n        case 'M':\n        case 'L':\n            formatter = dateGetter(DateType.Month, 1, 1);\n            break;\n        case 'MM':\n        case 'LL':\n            formatter = dateGetter(DateType.Month, 2, 1);\n            break;\n        // Month of the year (January, ...), string, format\n        case 'MMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated);\n            break;\n        case 'MMMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide);\n            break;\n        case 'MMMMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow);\n            break;\n        // Month of the year (January, ...), string, standalone\n        case 'LLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated, FormStyle.Standalone);\n            break;\n        case 'LLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Wide, FormStyle.Standalone);\n            break;\n        case 'LLLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Narrow, FormStyle.Standalone);\n            break;\n        // Week of the year (1, ... 52)\n        case 'w':\n            formatter = weekGetter(1);\n            break;\n        case 'ww':\n            formatter = weekGetter(2);\n            break;\n        // Week of the month (1, ...)\n        case 'W':\n            formatter = weekGetter(1, true);\n            break;\n        // Day of the month (1-31)\n        case 'd':\n            formatter = dateGetter(DateType.Date, 1);\n            break;\n        case 'dd':\n            formatter = dateGetter(DateType.Date, 2);\n            break;\n        // Day of the Week\n        case 'E':\n        case 'EE':\n        case 'EEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated);\n            break;\n        case 'EEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide);\n            break;\n        case 'EEEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Narrow);\n            break;\n        case 'EEEEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short);\n            break;\n        // Generic period of the day (am-pm)\n        case 'a':\n        case 'aa':\n        case 'aaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated);\n            break;\n        case 'aaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide);\n            break;\n        case 'aaaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow);\n            break;\n        // Extended period of the day (midnight, at night, ...), standalone\n        case 'b':\n        case 'bb':\n        case 'bbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Standalone, true);\n            break;\n        case 'bbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Standalone, true);\n            break;\n        case 'bbbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Standalone, true);\n            break;\n        // Extended period of the day (midnight, night, ...), standalone\n        case 'B':\n        case 'BB':\n        case 'BBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Format, true);\n            break;\n        case 'BBBB':\n            formatter =\n                dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Format, true);\n            break;\n        case 'BBBBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Format, true);\n            break;\n        // Hour in AM/PM, (1-12)\n        case 'h':\n            formatter = dateGetter(DateType.Hours, 1, -12);\n            break;\n        case 'hh':\n            formatter = dateGetter(DateType.Hours, 2, -12);\n            break;\n        // Hour of the day (0-23)\n        case 'H':\n            formatter = dateGetter(DateType.Hours, 1);\n            break;\n        // Hour in day, padded (00-23)\n        case 'HH':\n            formatter = dateGetter(DateType.Hours, 2);\n            break;\n        // Minute of the hour (0-59)\n        case 'm':\n            formatter = dateGetter(DateType.Minutes, 1);\n            break;\n        case 'mm':\n            formatter = dateGetter(DateType.Minutes, 2);\n            break;\n        // Second of the minute (0-59)\n        case 's':\n            formatter = dateGetter(DateType.Seconds, 1);\n            break;\n        case 'ss':\n            formatter = dateGetter(DateType.Seconds, 2);\n            break;\n        // Fractional second\n        case 'S':\n            formatter = dateGetter(DateType.FractionalSeconds, 1);\n            break;\n        case 'SS':\n            formatter = dateGetter(DateType.FractionalSeconds, 2);\n            break;\n        case 'SSS':\n            formatter = dateGetter(DateType.FractionalSeconds, 3);\n            break;\n        // Timezone ISO8601 short format (-0430)\n        case 'Z':\n        case 'ZZ':\n        case 'ZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Short);\n            break;\n        // Timezone ISO8601 extended format (-04:30)\n        case 'ZZZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Extended);\n            break;\n        // Timezone GMT short format (GMT+4)\n        case 'O':\n        case 'OO':\n        case 'OOO':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'z':\n        case 'zz':\n        case 'zzz':\n            formatter = timeZoneGetter(ZoneWidth.ShortGMT);\n            break;\n        // Timezone GMT long format (GMT+0430)\n        case 'OOOO':\n        case 'ZZZZ':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'zzzz':\n            formatter = timeZoneGetter(ZoneWidth.Long);\n            break;\n        default:\n            return null;\n    }\n    DATE_FORMATS[format] = formatter;\n    return formatter;\n}\n/**\n * @param {?} timezone\n * @param {?} fallback\n * @return {?}\n */\nfunction timezoneToOffset(timezone, fallback) {\n    // Support: IE 9-11 only, Edge 13-15+\n    // IE/Edge do not \"understand\" colon (`:`) in timezone\n    timezone = timezone.replace(/:/g, '');\n    /** @type {?} */\n    var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n    return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\n/**\n * @param {?} date\n * @param {?} minutes\n * @return {?}\n */\nfunction addDateMinutes(date, minutes) {\n    date = new Date(date.getTime());\n    date.setMinutes(date.getMinutes() + minutes);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} timezone\n * @param {?} reverse\n * @return {?}\n */\nfunction convertTimezoneToLocal(date, timezone, reverse) {\n    /** @type {?} */\n    var reverseValue = reverse ? -1 : 1;\n    /** @type {?} */\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    /** @type {?} */\n    var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));\n}\n/**\n * Converts a value to date.\n *\n * Supported input formats:\n * - `Date`\n * - number: timestamp\n * - string: numeric (e.g. \"1234\"), ISO and date strings in a format supported by\n *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\n *   Note: ISO strings without time return a date without timeoffset.\n *\n * Throws if unable to convert to a date.\n * @param {?} value\n * @return {?}\n */\nexport function toDate(value) {\n    if (isDate(value)) {\n        return value;\n    }\n    if (typeof value === 'number' && !isNaN(value)) {\n        return new Date(value);\n    }\n    if (typeof value === 'string') {\n        value = value.trim();\n        /** @type {?} */\n        var parsedNb = parseFloat(value);\n        // any string that only contains numbers, like \"1234\" but not like \"1234hello\"\n        if (!isNaN(/** @type {?} */ (value) - parsedNb)) {\n            return new Date(parsedNb);\n        }\n        if (/^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            var _a = value.split('-').map(function (val) { return +val; }), y = _a[0], m = _a[1], d = _a[2];\n            return new Date(y, m - 1, d);\n        }\n        /** @type {?} */\n        var match = void 0;\n        if (match = value.match(ISO8601_DATE_REGEX)) {\n            return isoStringToDate(match);\n        }\n    }\n    /** @type {?} */\n    var date = new Date(/** @type {?} */ (value));\n    if (!isDate(date)) {\n        throw new Error(\"Unable to convert \\\"\" + value + \"\\\" into a date\");\n    }\n    return date;\n}\n/**\n * Converts a date in ISO8601 to a Date.\n * Used instead of `Date.parse` because of browser discrepancies.\n * @param {?} match\n * @return {?}\n */\nexport function isoStringToDate(match) {\n    /** @type {?} */\n    var date = new Date(0);\n    /** @type {?} */\n    var tzHour = 0;\n    /** @type {?} */\n    var tzMin = 0;\n    /** @type {?} */\n    var dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n    /** @type {?} */\n    var timeSetter = match[8] ? date.setUTCHours : date.setHours;\n    // if there is a timezone defined like \"+01:00\" or \"+0100\"\n    if (match[9]) {\n        tzHour = Number(match[9] + match[10]);\n        tzMin = Number(match[9] + match[11]);\n    }\n    dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));\n    /** @type {?} */\n    var h = Number(match[4] || 0) - tzHour;\n    /** @type {?} */\n    var m = Number(match[5] || 0) - tzMin;\n    /** @type {?} */\n    var s = Number(match[6] || 0);\n    /** @type {?} */\n    var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n    timeSetter.call(date, h, m, s, ms);\n    return date;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isDate(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n//# sourceMappingURL=format_date.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NumberFormatStyle, NumberSymbol, getLocaleNumberFormat, getLocaleNumberSymbol, getNumberOfCurrencyDigits } from './locale_data_api';\n/** @type {?} */\nexport var NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n/** @type {?} */\nvar MAX_DIGITS = 22;\n/** @type {?} */\nvar DECIMAL_SEP = '.';\n/** @type {?} */\nvar ZERO_CHAR = '0';\n/** @type {?} */\nvar PATTERN_SEP = ';';\n/** @type {?} */\nvar GROUP_SEP = ',';\n/** @type {?} */\nvar DIGIT_CHAR = '#';\n/** @type {?} */\nvar CURRENCY_CHAR = 'Â¤';\n/** @type {?} */\nvar PERCENT_CHAR = '%';\n/**\n * Transforms a number to a locale string based on a style and a format\n * @param {?} value\n * @param {?} pattern\n * @param {?} locale\n * @param {?} groupSymbol\n * @param {?} decimalSymbol\n * @param {?=} digitsInfo\n * @param {?=} isPercent\n * @return {?}\n */\nfunction formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo, isPercent) {\n    if (isPercent === void 0) { isPercent = false; }\n    /** @type {?} */\n    var formattedText = '';\n    /** @type {?} */\n    var isZero = false;\n    if (!isFinite(value)) {\n        formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);\n    }\n    else {\n        /** @type {?} */\n        var parsedNumber = parseNumber(value);\n        if (isPercent) {\n            parsedNumber = toPercent(parsedNumber);\n        }\n        /** @type {?} */\n        var minInt = pattern.minInt;\n        /** @type {?} */\n        var minFraction = pattern.minFrac;\n        /** @type {?} */\n        var maxFraction = pattern.maxFrac;\n        if (digitsInfo) {\n            /** @type {?} */\n            var parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(digitsInfo + \" is not a valid digit info\");\n            }\n            /** @type {?} */\n            var minIntPart = parts[1];\n            /** @type {?} */\n            var minFractionPart = parts[3];\n            /** @type {?} */\n            var maxFractionPart = parts[5];\n            if (minIntPart != null) {\n                minInt = parseIntAutoRadix(minIntPart);\n            }\n            if (minFractionPart != null) {\n                minFraction = parseIntAutoRadix(minFractionPart);\n            }\n            if (maxFractionPart != null) {\n                maxFraction = parseIntAutoRadix(maxFractionPart);\n            }\n            else if (minFractionPart != null && minFraction > maxFraction) {\n                maxFraction = minFraction;\n            }\n        }\n        roundNumber(parsedNumber, minFraction, maxFraction);\n        /** @type {?} */\n        var digits = parsedNumber.digits;\n        /** @type {?} */\n        var integerLen = parsedNumber.integerLen;\n        /** @type {?} */\n        var exponent = parsedNumber.exponent;\n        /** @type {?} */\n        var decimals = [];\n        isZero = digits.every(function (d) { return !d; });\n        // pad zeros for small numbers\n        for (; integerLen < minInt; integerLen++) {\n            digits.unshift(0);\n        }\n        // pad zeros for small numbers\n        for (; integerLen < 0; integerLen++) {\n            digits.unshift(0);\n        }\n        // extract decimals digits\n        if (integerLen > 0) {\n            decimals = digits.splice(integerLen, digits.length);\n        }\n        else {\n            decimals = digits;\n            digits = [0];\n        }\n        /** @type {?} */\n        var groups = [];\n        if (digits.length >= pattern.lgSize) {\n            groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\n        }\n        while (digits.length > pattern.gSize) {\n            groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\n        }\n        if (digits.length) {\n            groups.unshift(digits.join(''));\n        }\n        formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol));\n        // append the decimal digits\n        if (decimals.length) {\n            formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');\n        }\n        if (exponent) {\n            formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;\n        }\n    }\n    if (value < 0 && !isZero) {\n        formattedText = pattern.negPre + formattedText + pattern.negSuf;\n    }\n    else {\n        formattedText = pattern.posPre + formattedText + pattern.posSuf;\n    }\n    return formattedText;\n}\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a number as currency using locale rules.\n *\n * Use `currency` to format a number as currency.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `currency` is the string that represents the currency, it can be its symbol or its name.\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `digitInfo` See {\\@link DecimalPipe} for more details.\n *\n * \\@publicApi\n * @param {?} value\n * @param {?} locale\n * @param {?} currency\n * @param {?=} currencyCode\n * @param {?=} digitsInfo\n * @return {?}\n */\nexport function formatCurrency(value, locale, currency, currencyCode, digitsInfo) {\n    /** @type {?} */\n    var format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);\n    /** @type {?} */\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    pattern.minFrac = getNumberOfCurrencyDigits(/** @type {?} */ ((currencyCode)));\n    pattern.maxFrac = pattern.minFrac;\n    /** @type {?} */\n    var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);\n    return res\n        .replace(CURRENCY_CHAR, currency)\n        // if we have 2 time the currency character, the second one is ignored\n        .replace(CURRENCY_CHAR, '');\n}\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a number as a percentage according to locale rules.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `digitInfo` See {\\@link DecimalPipe} for more details.\n *\n * \\@publicApi\n * @param {?} value\n * @param {?} locale\n * @param {?=} digitsInfo\n * @return {?}\n */\nexport function formatPercent(value, locale, digitsInfo) {\n    /** @type {?} */\n    var format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);\n    /** @type {?} */\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    /** @type {?} */\n    var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);\n    return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));\n}\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the locale.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `digitInfo` See {\\@link DecimalPipe} for more details.\n *\n * \\@publicApi\n * @param {?} value\n * @param {?} locale\n * @param {?=} digitsInfo\n * @return {?}\n */\nexport function formatNumber(value, locale, digitsInfo) {\n    /** @type {?} */\n    var format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);\n    /** @type {?} */\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    return formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);\n}\n/**\n * @record\n */\nfunction ParsedNumberFormat() { }\n/** @type {?} */\nParsedNumberFormat.prototype.minInt;\n/** @type {?} */\nParsedNumberFormat.prototype.minFrac;\n/** @type {?} */\nParsedNumberFormat.prototype.maxFrac;\n/** @type {?} */\nParsedNumberFormat.prototype.posPre;\n/** @type {?} */\nParsedNumberFormat.prototype.posSuf;\n/** @type {?} */\nParsedNumberFormat.prototype.negPre;\n/** @type {?} */\nParsedNumberFormat.prototype.negSuf;\n/** @type {?} */\nParsedNumberFormat.prototype.gSize;\n/** @type {?} */\nParsedNumberFormat.prototype.lgSize;\n/**\n * @param {?} format\n * @param {?=} minusSign\n * @return {?}\n */\nfunction parseNumberFormat(format, minusSign) {\n    if (minusSign === void 0) { minusSign = '-'; }\n    /** @type {?} */\n    var p = {\n        minInt: 1,\n        minFrac: 0,\n        maxFrac: 0,\n        posPre: '',\n        posSuf: '',\n        negPre: '',\n        negSuf: '',\n        gSize: 0,\n        lgSize: 0\n    };\n    /** @type {?} */\n    var patternParts = format.split(PATTERN_SEP);\n    /** @type {?} */\n    var positive = patternParts[0];\n    /** @type {?} */\n    var negative = patternParts[1];\n    /** @type {?} */\n    var positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ?\n        positive.split(DECIMAL_SEP) :\n        [\n            positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1),\n            positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)\n        ];\n    /** @type {?} */\n    var integer = positiveParts[0];\n    /** @type {?} */\n    var fraction = positiveParts[1] || '';\n    p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));\n    for (var i = 0; i < fraction.length; i++) {\n        /** @type {?} */\n        var ch = fraction.charAt(i);\n        if (ch === ZERO_CHAR) {\n            p.minFrac = p.maxFrac = i + 1;\n        }\n        else if (ch === DIGIT_CHAR) {\n            p.maxFrac = i + 1;\n        }\n        else {\n            p.posSuf += ch;\n        }\n    }\n    /** @type {?} */\n    var groups = integer.split(GROUP_SEP);\n    p.gSize = groups[1] ? groups[1].length : 0;\n    p.lgSize = (groups[2] || groups[1]) ? (groups[2] || groups[1]).length : 0;\n    if (negative) {\n        /** @type {?} */\n        var trunkLen = positive.length - p.posPre.length - p.posSuf.length;\n        /** @type {?} */\n        var pos = negative.indexOf(DIGIT_CHAR);\n        p.negPre = negative.substr(0, pos).replace(/'/g, '');\n        p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');\n    }\n    else {\n        p.negPre = minusSign + p.posPre;\n        p.negSuf = p.posSuf;\n    }\n    return p;\n}\n/**\n * @record\n */\nfunction ParsedNumber() { }\n/** @type {?} */\nParsedNumber.prototype.digits;\n/** @type {?} */\nParsedNumber.prototype.exponent;\n/** @type {?} */\nParsedNumber.prototype.integerLen;\n/**\n * @param {?} parsedNumber\n * @return {?}\n */\nfunction toPercent(parsedNumber) {\n    // if the number is 0, don't do anything\n    if (parsedNumber.digits[0] === 0) {\n        return parsedNumber;\n    }\n    /** @type {?} */\n    var fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;\n    if (parsedNumber.exponent) {\n        parsedNumber.exponent += 2;\n    }\n    else {\n        if (fractionLen === 0) {\n            parsedNumber.digits.push(0, 0);\n        }\n        else if (fractionLen === 1) {\n            parsedNumber.digits.push(0);\n        }\n        parsedNumber.integerLen += 2;\n    }\n    return parsedNumber;\n}\n/**\n * Parses a number.\n * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/\n * @param {?} num\n * @return {?}\n */\nfunction parseNumber(num) {\n    /** @type {?} */\n    var numStr = Math.abs(num) + '';\n    /** @type {?} */\n    var exponent = 0;\n    /** @type {?} */\n    var digits;\n    /** @type {?} */\n    var integerLen;\n    /** @type {?} */\n    var i;\n    /** @type {?} */\n    var j;\n    /** @type {?} */\n    var zeros;\n    // Decimal point?\n    if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\n        numStr = numStr.replace(DECIMAL_SEP, '');\n    }\n    // Exponential form?\n    if ((i = numStr.search(/e/i)) > 0) {\n        // Work out the exponent.\n        if (integerLen < 0)\n            integerLen = i;\n        integerLen += +numStr.slice(i + 1);\n        numStr = numStr.substring(0, i);\n    }\n    else if (integerLen < 0) {\n        // There was no decimal point or exponent so it is an integer.\n        integerLen = numStr.length;\n    }\n    // Count the number of leading zeros.\n    for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) { /* empty */\n        /* empty */\n    }\n    if (i === (zeros = numStr.length)) {\n        // The digits are all zero.\n        digits = [0];\n        integerLen = 1;\n    }\n    else {\n        // Count the number of trailing zeros\n        zeros--;\n        while (numStr.charAt(zeros) === ZERO_CHAR)\n            zeros--;\n        // Trailing zeros are insignificant so ignore them\n        integerLen -= i;\n        digits = [];\n        // Convert string to array of digits without leading/trailing zeros.\n        for (j = 0; i <= zeros; i++, j++) {\n            digits[j] = Number(numStr.charAt(i));\n        }\n    }\n    // If the number overflows the maximum allowed digits then use an exponent.\n    if (integerLen > MAX_DIGITS) {\n        digits = digits.splice(0, MAX_DIGITS - 1);\n        exponent = integerLen - 1;\n        integerLen = 1;\n    }\n    return { digits: digits, exponent: exponent, integerLen: integerLen };\n}\n/**\n * Round the parsed number to the specified number of decimal places\n * This function changes the parsedNumber in-place\n * @param {?} parsedNumber\n * @param {?} minFrac\n * @param {?} maxFrac\n * @return {?}\n */\nfunction roundNumber(parsedNumber, minFrac, maxFrac) {\n    if (minFrac > maxFrac) {\n        throw new Error(\"The minimum number of digits after fraction (\" + minFrac + \") is higher than the maximum (\" + maxFrac + \").\");\n    }\n    /** @type {?} */\n    var digits = parsedNumber.digits;\n    /** @type {?} */\n    var fractionLen = digits.length - parsedNumber.integerLen;\n    /** @type {?} */\n    var fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac);\n    /** @type {?} */\n    var roundAt = fractionSize + parsedNumber.integerLen;\n    /** @type {?} */\n    var digit = digits[roundAt];\n    if (roundAt > 0) {\n        // Drop fractional digits beyond `roundAt`\n        digits.splice(Math.max(parsedNumber.integerLen, roundAt));\n        // Set non-fractional digits beyond `roundAt` to 0\n        for (var j = roundAt; j < digits.length; j++) {\n            digits[j] = 0;\n        }\n    }\n    else {\n        // We rounded to zero so reset the parsedNumber\n        fractionLen = Math.max(0, fractionLen);\n        parsedNumber.integerLen = 1;\n        digits.length = Math.max(1, roundAt = fractionSize + 1);\n        digits[0] = 0;\n        for (var i = 1; i < roundAt; i++)\n            digits[i] = 0;\n    }\n    if (digit >= 5) {\n        if (roundAt - 1 < 0) {\n            for (var k = 0; k > roundAt; k--) {\n                digits.unshift(0);\n                parsedNumber.integerLen++;\n            }\n            digits.unshift(1);\n            parsedNumber.integerLen++;\n        }\n        else {\n            digits[roundAt - 1]++;\n        }\n    }\n    // Pad out with zeros to get the required fraction length\n    for (; fractionLen < Math.max(0, fractionSize); fractionLen++)\n        digits.push(0);\n    /** @type {?} */\n    var dropTrailingZeros = fractionSize !== 0;\n    /** @type {?} */\n    var minLen = minFrac + parsedNumber.integerLen;\n    /** @type {?} */\n    var carry = digits.reduceRight(function (carry, d, i, digits) {\n        d = d + carry;\n        digits[i] = d < 10 ? d : d - 10; // d % 10\n        if (dropTrailingZeros) {\n            // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)\n            if (digits[i] === 0 && i >= minLen) {\n                digits.pop();\n            }\n            else {\n                dropTrailingZeros = false;\n            }\n        }\n        return d >= 10 ? 1 : 0; // Math.floor(d / 10);\n    }, 0);\n    if (carry) {\n        digits.unshift(carry);\n        parsedNumber.integerLen++;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nexport function parseIntAutoRadix(text) {\n    /** @type {?} */\n    var result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n//# sourceMappingURL=format_number.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Inject, Injectable, InjectionToken, LOCALE_ID, Optional } from '@angular/core';\nimport { Plural, getLocalePluralCase } from './locale_data_api';\n/** *\n * @deprecated from v5\n  @type {?} */\nexport var DEPRECATED_PLURAL_FN = new InjectionToken('UseV4Plurals');\n/**\n * \\@publicApi\n * @abstract\n */\nvar /**\n * \\@publicApi\n * @abstract\n */\nNgLocalization = /** @class */ (function () {\n    function NgLocalization() {\n    }\n    return NgLocalization;\n}());\n/**\n * \\@publicApi\n * @abstract\n */\nexport { NgLocalization };\nif (false) {\n    /**\n     * @abstract\n     * @param {?} value\n     * @param {?=} locale\n     * @return {?}\n     */\n    NgLocalization.prototype.getPluralCategory = function (value, locale) { };\n}\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n * @param {?} value\n * @param {?} cases\n * @param {?} ngLocalization\n * @param {?=} locale\n * @return {?}\n */\nexport function getPluralCategory(value, cases, ngLocalization, locale) {\n    /** @type {?} */\n    var key = \"=\" + value;\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    key = ngLocalization.getPluralCategory(value, locale);\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    if (cases.indexOf('other') > -1) {\n        return 'other';\n    }\n    throw new Error(\"No plural message found for value \\\"\" + value + \"\\\"\");\n}\n/**\n * Returns the plural case based on the locale\n *\n * \\@publicApi\n */\nvar NgLocaleLocalization = /** @class */ (function (_super) {\n    tslib_1.__extends(NgLocaleLocalization, _super);\n    function NgLocaleLocalization(locale, /** @deprecated from v5 */\n    deprecatedPluralFn) {\n        var _this = _super.call(this) || this;\n        _this.locale = locale;\n        _this.deprecatedPluralFn = deprecatedPluralFn;\n        return _this;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} locale\n     * @return {?}\n     */\n    NgLocaleLocalization.prototype.getPluralCategory = /**\n     * @param {?} value\n     * @param {?=} locale\n     * @return {?}\n     */\n    function (value, locale) {\n        /** @type {?} */\n        var plural = this.deprecatedPluralFn ? this.deprecatedPluralFn(locale || this.locale, value) :\n            getLocalePluralCase(locale || this.locale)(value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    };\n    NgLocaleLocalization.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgLocaleLocalization.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DEPRECATED_PLURAL_FN,] }] }\n    ]; };\n    return NgLocaleLocalization;\n}(NgLocalization));\nexport { NgLocaleLocalization };\nif (false) {\n    /** @type {?} */\n    NgLocaleLocalization.prototype.locale;\n    /**\n     * @deprecated from v5\n     * @type {?}\n     */\n    NgLocaleLocalization.prototype.deprecatedPluralFn;\n}\n/**\n * Returns the plural case based on the locale\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n * \\@publicApi\n * @param {?} locale\n * @param {?} nLike\n * @return {?}\n */\nexport function getPluralCase(locale, nLike) {\n    // TODO(vicb): lazy compute\n    if (typeof nLike === 'string') {\n        nLike = parseInt(/** @type {?} */ (nLike), 10);\n    }\n    /** @type {?} */\n    var n = /** @type {?} */ (nLike);\n    /** @type {?} */\n    var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n    /** @type {?} */\n    var i = Math.floor(Math.abs(n));\n    /** @type {?} */\n    var v = nDecimal.length;\n    /** @type {?} */\n    var f = parseInt(nDecimal, 10);\n    /** @type {?} */\n    var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n    /** @type {?} */\n    var lang = locale.split('-')[0].toLowerCase();\n    switch (lang) {\n        case 'af':\n        case 'asa':\n        case 'az':\n        case 'bem':\n        case 'bez':\n        case 'bg':\n        case 'brx':\n        case 'ce':\n        case 'cgg':\n        case 'chr':\n        case 'ckb':\n        case 'ee':\n        case 'el':\n        case 'eo':\n        case 'es':\n        case 'eu':\n        case 'fo':\n        case 'fur':\n        case 'gsw':\n        case 'ha':\n        case 'haw':\n        case 'hu':\n        case 'jgo':\n        case 'jmc':\n        case 'ka':\n        case 'kk':\n        case 'kkj':\n        case 'kl':\n        case 'ks':\n        case 'ksb':\n        case 'ky':\n        case 'lb':\n        case 'lg':\n        case 'mas':\n        case 'mgo':\n        case 'ml':\n        case 'mn':\n        case 'nb':\n        case 'nd':\n        case 'ne':\n        case 'nn':\n        case 'nnh':\n        case 'nyn':\n        case 'om':\n        case 'or':\n        case 'os':\n        case 'ps':\n        case 'rm':\n        case 'rof':\n        case 'rwk':\n        case 'saq':\n        case 'seh':\n        case 'sn':\n        case 'so':\n        case 'sq':\n        case 'ta':\n        case 'te':\n        case 'teo':\n        case 'tk':\n        case 'tr':\n        case 'ug':\n        case 'uz':\n        case 'vo':\n        case 'vun':\n        case 'wae':\n        case 'xog':\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ak':\n        case 'ln':\n        case 'mg':\n        case 'pa':\n        case 'ti':\n            if (n === Math.floor(n) && n >= 0 && n <= 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'am':\n        case 'as':\n        case 'bn':\n        case 'fa':\n        case 'gu':\n        case 'hi':\n        case 'kn':\n        case 'mr':\n        case 'zu':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ar':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                return Plural.Many;\n            return Plural.Other;\n        case 'ast':\n        case 'ca':\n        case 'de':\n        case 'en':\n        case 'et':\n        case 'fi':\n        case 'fy':\n        case 'gl':\n        case 'it':\n        case 'nl':\n        case 'sv':\n        case 'sw':\n        case 'ur':\n        case 'yi':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            return Plural.Other;\n        case 'be':\n            if (n % 10 === 1 && !(n % 100 === 11))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                !(n % 100 >= 12 && n % 100 <= 14))\n                return Plural.Few;\n            if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'br':\n            if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                return Plural.One;\n            if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                return Plural.Two;\n            if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                    n % 100 >= 90 && n % 100 <= 99))\n                return Plural.Few;\n            if (!(n === 0) && n % 1e6 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'bs':\n        case 'hr':\n        case 'sr':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14) ||\n                f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                    !(f % 100 >= 12 && f % 100 <= 14))\n                return Plural.Few;\n            return Plural.Other;\n        case 'cs':\n        case 'sk':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'cy':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === 3)\n                return Plural.Few;\n            if (n === 6)\n                return Plural.Many;\n            return Plural.Other;\n        case 'da':\n            if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                return Plural.One;\n            return Plural.Other;\n        case 'dsb':\n        case 'hsb':\n            if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ff':\n        case 'fr':\n        case 'hy':\n        case 'kab':\n            if (i === 0 || i === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'fil':\n            if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                return Plural.One;\n            return Plural.Other;\n        case 'ga':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === Math.floor(n) && n >= 3 && n <= 6)\n                return Plural.Few;\n            if (n === Math.floor(n) && n >= 7 && n <= 10)\n                return Plural.Many;\n            return Plural.Other;\n        case 'gd':\n            if (n === 1 || n === 11)\n                return Plural.One;\n            if (n === 2 || n === 12)\n                return Plural.Two;\n            if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                return Plural.Few;\n            return Plural.Other;\n        case 'gv':\n            if (v === 0 && i % 10 === 1)\n                return Plural.One;\n            if (v === 0 && i % 10 === 2)\n                return Plural.Two;\n            if (v === 0 &&\n                (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'he':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === 2 && v === 0)\n                return Plural.Two;\n            if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'is':\n            if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'ksh':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'kw':\n        case 'naq':\n        case 'se':\n        case 'smn':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            return Plural.Other;\n        case 'lag':\n            if (n === 0)\n                return Plural.Zero;\n            if ((i === 0 || i === 1) && !(n === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'lt':\n            if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.Few;\n            if (!(f === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'lv':\n        case 'prg':\n            if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                return Plural.Zero;\n            if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                !(v === 2) && f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mk':\n            if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mt':\n            if (n === 1)\n                return Plural.One;\n            if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pl':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pt':\n            if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                return Plural.One;\n            return Plural.Other;\n        case 'ro':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (!(v === 0) || n === 0 ||\n                !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ru':\n        case 'uk':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && i % 10 === 0 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'shi':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            if (n === Math.floor(n) && n >= 2 && n <= 10)\n                return Plural.Few;\n            return Plural.Other;\n        case 'si':\n            if (n === 0 || n === 1 || i === 0 && f === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'sl':\n            if (v === 0 && i % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                return Plural.Few;\n            return Plural.Other;\n        case 'tzm':\n            if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                return Plural.One;\n            return Plural.Other;\n        // When there is no specification, the default is always \"other\"\n        // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n        // > other (requiredâgeneral plural form â also used if the language only has a single form)\n        default:\n            return Plural.Other;\n    }\n}\n//# sourceMappingURL=localization.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Input, IterableDiffers, KeyValueDiffers, Renderer2, ÉµisListLikeIterable as isListLikeIterable, Éµstringify as stringify } from '@angular/core';\n/**\n * \\@ngModule CommonModule\n *\n * \\@usageNotes\n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n *\n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n *\n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n *\n * \\@description\n *\n * Adds and removes CSS classes on an HTML element.\n *\n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n *\n * \\@publicApi\n */\nvar NgClass = /** @class */ (function () {\n    function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n        this._iterableDiffers = _iterableDiffers;\n        this._keyValueDiffers = _keyValueDiffers;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n        this._initialClasses = [];\n    }\n    Object.defineProperty(NgClass.prototype, \"klass\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._removeClasses(this._initialClasses);\n            this._initialClasses = typeof value === 'string' ? value.split(/\\s+/) : [];\n            this._applyClasses(this._initialClasses);\n            this._applyClasses(this._rawClass);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgClass.prototype, \"ngClass\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._removeClasses(this._rawClass);\n            this._applyClasses(this._initialClasses);\n            this._iterableDiffer = null;\n            this._keyValueDiffer = null;\n            this._rawClass = typeof value === 'string' ? value.split(/\\s+/) : value;\n            if (this._rawClass) {\n                if (isListLikeIterable(this._rawClass)) {\n                    this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n                }\n                else {\n                    this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgClass.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._iterableDiffer) {\n            /** @type {?} */\n            var iterableChanges = this._iterableDiffer.diff(/** @type {?} */ (this._rawClass));\n            if (iterableChanges) {\n                this._applyIterableChanges(iterableChanges);\n            }\n        }\n        else if (this._keyValueDiffer) {\n            /** @type {?} */\n            var keyValueChanges = this._keyValueDiffer.diff(/** @type {?} */ (this._rawClass));\n            if (keyValueChanges) {\n                this._applyKeyValueChanges(keyValueChanges);\n            }\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgClass.prototype._applyKeyValueChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n        changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n        changes.forEachRemovedItem(function (record) {\n            if (record.previousValue) {\n                _this._toggleClass(record.key, false);\n            }\n        });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgClass.prototype._applyIterableChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        changes.forEachAddedItem(function (record) {\n            if (typeof record.item === 'string') {\n                _this._toggleClass(record.item, true);\n            }\n            else {\n                throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + stringify(record.item));\n            }\n        });\n        changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n    };\n    /**\n     * Applies a collection of CSS classes to the DOM element.\n     *\n     * For argument of type Set and Array CSS class names contained in those collections are always\n     * added.\n     * For argument of type Map CSS class name in the map's key is toggled based on the value (added\n     * for truthy and removed for falsy).\n     * @param {?} rawClassVal\n     * @return {?}\n     */\n    NgClass.prototype._applyClasses = /**\n     * Applies a collection of CSS classes to the DOM element.\n     *\n     * For argument of type Set and Array CSS class names contained in those collections are always\n     * added.\n     * For argument of type Map CSS class name in the map's key is toggled based on the value (added\n     * for truthy and removed for falsy).\n     * @param {?} rawClassVal\n     * @return {?}\n     */\n    function (rawClassVal) {\n        var _this = this;\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                (/** @type {?} */ (rawClassVal)).forEach(function (klass) { return _this._toggleClass(klass, true); });\n            }\n            else {\n                Object.keys(rawClassVal).forEach(function (klass) { return _this._toggleClass(klass, !!rawClassVal[klass]); });\n            }\n        }\n    };\n    /**\n     * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup\n     * purposes.\n     * @param {?} rawClassVal\n     * @return {?}\n     */\n    NgClass.prototype._removeClasses = /**\n     * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup\n     * purposes.\n     * @param {?} rawClassVal\n     * @return {?}\n     */\n    function (rawClassVal) {\n        var _this = this;\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                (/** @type {?} */ (rawClassVal)).forEach(function (klass) { return _this._toggleClass(klass, false); });\n            }\n            else {\n                Object.keys(rawClassVal).forEach(function (klass) { return _this._toggleClass(klass, false); });\n            }\n        }\n    };\n    /**\n     * @param {?} klass\n     * @param {?} enabled\n     * @return {?}\n     */\n    NgClass.prototype._toggleClass = /**\n     * @param {?} klass\n     * @param {?} enabled\n     * @return {?}\n     */\n    function (klass, enabled) {\n        var _this = this;\n        klass = klass.trim();\n        if (klass) {\n            klass.split(/\\s+/g).forEach(function (klass) {\n                if (enabled) {\n                    _this._renderer.addClass(_this._ngEl.nativeElement, klass);\n                }\n                else {\n                    _this._renderer.removeClass(_this._ngEl.nativeElement, klass);\n                }\n            });\n        }\n    };\n    NgClass.decorators = [\n        { type: Directive, args: [{ selector: '[ngClass]' },] },\n    ];\n    /** @nocollapse */\n    NgClass.ctorParameters = function () { return [\n        { type: IterableDiffers },\n        { type: KeyValueDiffers },\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    NgClass.propDecorators = {\n        klass: [{ type: Input, args: ['class',] }],\n        ngClass: [{ type: Input }]\n    };\n    return NgClass;\n}());\nexport { NgClass };\nif (false) {\n    /** @type {?} */\n    NgClass.prototype._iterableDiffer;\n    /** @type {?} */\n    NgClass.prototype._keyValueDiffer;\n    /** @type {?} */\n    NgClass.prototype._initialClasses;\n    /** @type {?} */\n    NgClass.prototype._rawClass;\n    /** @type {?} */\n    NgClass.prototype._iterableDiffers;\n    /** @type {?} */\n    NgClass.prototype._keyValueDiffers;\n    /** @type {?} */\n    NgClass.prototype._ngEl;\n    /** @type {?} */\n    NgClass.prototype._renderer;\n}\n//# sourceMappingURL=ng_class.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ComponentFactoryResolver, Directive, Injector, Input, NgModuleFactory, NgModuleRef, Type, ViewContainerRef } from '@angular/core';\n/**\n * Instantiates a single {\\@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n *\n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n *\n * \\@usageNotes\n *\n * ### Fine tune control\n *\n * You can control the component creation process by using the following optional attributes:\n *\n * * `ngComponentOutletInjector`: Optional custom {\\@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n *\n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n *\n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n *\n * ### Syntax\n *\n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n *\n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n *\n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n *\n * ### A simple example\n *\n * {\\@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n *\n * A more complete example with additional options:\n *\n * {\\@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n * A more complete example with ngModuleFactory:\n *\n * {\\@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}\n *\n * \\@publicApi\n * \\@ngModule CommonModule\n */\nvar NgComponentOutlet = /** @class */ (function () {\n    function NgComponentOutlet(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._componentRef = null;\n        this._moduleRef = null;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgComponentOutlet.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        this._viewContainerRef.clear();\n        this._componentRef = null;\n        if (this.ngComponentOutlet) {\n            /** @type {?} */\n            var elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n            if (changes['ngComponentOutletNgModuleFactory']) {\n                if (this._moduleRef)\n                    this._moduleRef.destroy();\n                if (this.ngComponentOutletNgModuleFactory) {\n                    /** @type {?} */\n                    var parentModule = elInjector.get(NgModuleRef);\n                    this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n                }\n                else {\n                    this._moduleRef = null;\n                }\n            }\n            /** @type {?} */\n            var componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                elInjector.get(ComponentFactoryResolver);\n            /** @type {?} */\n            var componentFactory = componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n            this._componentRef = this._viewContainerRef.createComponent(componentFactory, this._viewContainerRef.length, elInjector, this.ngComponentOutletContent);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgComponentOutlet.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._moduleRef)\n            this._moduleRef.destroy();\n    };\n    NgComponentOutlet.decorators = [\n        { type: Directive, args: [{ selector: '[ngComponentOutlet]' },] },\n    ];\n    /** @nocollapse */\n    NgComponentOutlet.ctorParameters = function () { return [\n        { type: ViewContainerRef }\n    ]; };\n    NgComponentOutlet.propDecorators = {\n        ngComponentOutlet: [{ type: Input }],\n        ngComponentOutletInjector: [{ type: Input }],\n        ngComponentOutletContent: [{ type: Input }],\n        ngComponentOutletNgModuleFactory: [{ type: Input }]\n    };\n    return NgComponentOutlet;\n}());\nexport { NgComponentOutlet };\nif (false) {\n    /** @type {?} */\n    NgComponentOutlet.prototype.ngComponentOutlet;\n    /** @type {?} */\n    NgComponentOutlet.prototype.ngComponentOutletInjector;\n    /** @type {?} */\n    NgComponentOutlet.prototype.ngComponentOutletContent;\n    /** @type {?} */\n    NgComponentOutlet.prototype.ngComponentOutletNgModuleFactory;\n    /** @type {?} */\n    NgComponentOutlet.prototype._componentRef;\n    /** @type {?} */\n    NgComponentOutlet.prototype._moduleRef;\n    /** @type {?} */\n    NgComponentOutlet.prototype._viewContainerRef;\n}\n//# sourceMappingURL=ng_component_outlet.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, IterableDiffers, TemplateRef, ViewContainerRef, isDevMode } from '@angular/core';\n/**\n * \\@publicApi\n * @template T\n */\nvar /**\n * \\@publicApi\n * @template T\n */\nNgForOfContext = /** @class */ (function () {\n    function NgForOfContext($implicit, ngForOf, index, count) {\n        this.$implicit = $implicit;\n        this.ngForOf = ngForOf;\n        this.index = index;\n        this.count = count;\n    }\n    Object.defineProperty(NgForOfContext.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.index === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.index === this.count - 1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"even\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.index % 2 === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"odd\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.even; },\n        enumerable: true,\n        configurable: true\n    });\n    return NgForOfContext;\n}());\n/**\n * \\@publicApi\n * @template T\n */\nexport { NgForOfContext };\nif (false) {\n    /** @type {?} */\n    NgForOfContext.prototype.$implicit;\n    /** @type {?} */\n    NgForOfContext.prototype.ngForOf;\n    /** @type {?} */\n    NgForOfContext.prototype.index;\n    /** @type {?} */\n    NgForOfContext.prototype.count;\n}\n/**\n * The `NgForOf` directive instantiates a template once per item from an iterable. The context\n * for each instantiated template inherits from the outer context with the given loop variable\n * set to the current item from the iterable.\n *\n * \\@usageNotes\n *\n * ### Local Variables\n *\n * `NgForOf` provides several exported values that can be aliased to local variables:\n *\n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n *\n * ```\n * <li *ngFor=\"let user of userObservable | async as users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n *\n * ### Change Propagation\n *\n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n * * Otherwise, the DOM element for that item will remain the same.\n *\n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n *\n * It is possible for the identities of elements in the iterator to change while the data does not.\n * This can happen, for example, if the iterator produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted). This is an expensive operation and should\n * be avoided if possible.\n *\n * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.\n * `trackBy` takes a function which has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n *\n * ### Syntax\n *\n * - `<li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>`\n *\n * With `<ng-template>` element:\n *\n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n *\n * ### Example\n *\n * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n * example.\n *\n * \\@ngModule CommonModule\n * \\@publicApi\n * @template T\n */\nvar NgForOf = /** @class */ (function () {\n    function NgForOf(_viewContainer, _template, _differs) {\n        this._viewContainer = _viewContainer;\n        this._template = _template;\n        this._differs = _differs;\n        this._ngForOfDirty = true;\n        this._differ = null;\n    }\n    Object.defineProperty(NgForOf.prototype, \"ngForOf\", {\n        set: /**\n         * @param {?} ngForOf\n         * @return {?}\n         */\n        function (ngForOf) {\n            this._ngForOf = ngForOf;\n            this._ngForOfDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOf.prototype, \"ngForTrackBy\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._trackByFn; },\n        set: /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            if (isDevMode() && fn != null && typeof fn !== 'function') {\n                // TODO(vicb): use a log service once there is a public one available\n                if (/** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                    console.warn(\"trackBy must be a function, but received \" + JSON.stringify(fn) + \". \" +\n                        \"See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.\");\n                }\n            }\n            this._trackByFn = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOf.prototype, \"ngForTemplate\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n            // The current type is too restrictive; a template that just uses index, for example,\n            // should be acceptable.\n            if (value) {\n                this._template = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgForOf.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._ngForOfDirty) {\n            this._ngForOfDirty = false;\n            /** @type {?} */\n            var value = this._ngForOf;\n            if (!this._differ && value) {\n                try {\n                    this._differ = this._differs.find(value).create(this.ngForTrackBy);\n                }\n                catch (e) {\n                    throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n                }\n            }\n        }\n        if (this._differ) {\n            /** @type {?} */\n            var changes = this._differ.diff(this._ngForOf);\n            if (changes)\n                this._applyChanges(changes);\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgForOf.prototype._applyChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        /** @type {?} */\n        var insertTuples = [];\n        changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n            if (item.previousIndex == null) {\n                /** @type {?} */\n                var view = _this._viewContainer.createEmbeddedView(_this._template, new NgForOfContext(/** @type {?} */ ((null)), _this._ngForOf, -1, -1), currentIndex);\n                /** @type {?} */\n                var tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n            else if (currentIndex == null) {\n                _this._viewContainer.remove(adjustedPreviousIndex);\n            }\n            else {\n                /** @type {?} */\n                var view = /** @type {?} */ ((_this._viewContainer.get(adjustedPreviousIndex)));\n                _this._viewContainer.move(view, currentIndex);\n                /** @type {?} */\n                var tuple = new RecordViewTuple(item, /** @type {?} */ (view));\n                insertTuples.push(tuple);\n            }\n        });\n        for (var i = 0; i < insertTuples.length; i++) {\n            this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n        }\n        for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n            /** @type {?} */\n            var viewRef = /** @type {?} */ (this._viewContainer.get(i));\n            viewRef.context.index = i;\n            viewRef.context.count = ilen;\n            viewRef.context.ngForOf = this._ngForOf;\n        }\n        changes.forEachIdentityChange(function (record) {\n            /** @type {?} */\n            var viewRef = /** @type {?} */ (_this._viewContainer.get(record.currentIndex));\n            viewRef.context.$implicit = record.item;\n        });\n    };\n    /**\n     * @param {?} view\n     * @param {?} record\n     * @return {?}\n     */\n    NgForOf.prototype._perViewChange = /**\n     * @param {?} view\n     * @param {?} record\n     * @return {?}\n     */\n    function (view, record) {\n        view.context.$implicit = record.item;\n    };\n    /**\n     * Assert the correct type of the context for the template that `NgForOf` will render.\n     *\n     * The presence of this method is a signal to the Ivy template type check compiler that the\n     * `NgForOf` structural directive renders its template with a specific context type.\n     */\n    /**\n     * Assert the correct type of the context for the template that `NgForOf` will render.\n     *\n     * The presence of this method is a signal to the Ivy template type check compiler that the\n     * `NgForOf` structural directive renders its template with a specific context type.\n     * @template T\n     * @param {?} dir\n     * @param {?} ctx\n     * @return {?}\n     */\n    NgForOf.ngTemplateContextGuard = /**\n     * Assert the correct type of the context for the template that `NgForOf` will render.\n     *\n     * The presence of this method is a signal to the Ivy template type check compiler that the\n     * `NgForOf` structural directive renders its template with a specific context type.\n     * @template T\n     * @param {?} dir\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (dir, ctx) {\n        return true;\n    };\n    NgForOf.decorators = [\n        { type: Directive, args: [{ selector: '[ngFor][ngForOf]' },] },\n    ];\n    /** @nocollapse */\n    NgForOf.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: TemplateRef },\n        { type: IterableDiffers }\n    ]; };\n    NgForOf.propDecorators = {\n        ngForOf: [{ type: Input }],\n        ngForTrackBy: [{ type: Input }],\n        ngForTemplate: [{ type: Input }]\n    };\n    return NgForOf;\n}());\nexport { NgForOf };\nif (false) {\n    /** @type {?} */\n    NgForOf.prototype._ngForOf;\n    /** @type {?} */\n    NgForOf.prototype._ngForOfDirty;\n    /** @type {?} */\n    NgForOf.prototype._differ;\n    /** @type {?} */\n    NgForOf.prototype._trackByFn;\n    /** @type {?} */\n    NgForOf.prototype._viewContainer;\n    /** @type {?} */\n    NgForOf.prototype._template;\n    /** @type {?} */\n    NgForOf.prototype._differs;\n}\n/**\n * @template T\n */\nvar /**\n * @template T\n */\nRecordViewTuple = /** @class */ (function () {\n    function RecordViewTuple(record, view) {\n        this.record = record;\n        this.view = view;\n    }\n    return RecordViewTuple;\n}());\nif (false) {\n    /** @type {?} */\n    RecordViewTuple.prototype.record;\n    /** @type {?} */\n    RecordViewTuple.prototype.view;\n}\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n//# sourceMappingURL=ng_for_of.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, TemplateRef, ViewContainerRef, Éµstringify as stringify } from '@angular/core';\n/**\n * Conditionally includes a template based on the value of an `expression`.\n *\n * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place\n * when expression is truthy or falsy respectively. Typically the:\n *  - `then` template is the inline template of `ngIf` unless bound to a different value.\n *  - `else` template is blank unless it is bound.\n *\n *\n * \\@usageNotes\n *\n * ### Most common usage\n *\n * The most common usage of the `ngIf` directive is to conditionally show the inline template as\n * seen in this example:\n * {\\@example common/ngIf/ts/module.ts region='NgIfSimple'}\n *\n * ### Showing an alternative template using `else`\n *\n * If it is necessary to display a template when the `expression` is falsy use the `else` template\n * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.\n * The template can be defined anywhere in the component view but is typically placed right after\n * `ngIf` for readability.\n *\n * {\\@example common/ngIf/ts/module.ts region='NgIfElse'}\n *\n * ### Using non-inlined `then` template\n *\n * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using\n * a binding (just like `else`). Because `then` and `else` are bindings, the template references can\n * change at runtime as shown in this example.\n *\n * {\\@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n *\n * ### Storing conditional result in a variable\n *\n * A common pattern is that we need to show a set of properties from the same object. If the\n * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against\n * dereferencing a `null` value. This is especially the case when waiting on async data such as\n * when using the `async` pipe as shown in following example:\n *\n * ```\n * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!\n * ```\n *\n * There are several inefficiencies in the above example:\n *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the\n *    example above.\n *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.\n *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.\n *  - We have to place the `async` pipe in parenthesis.\n *\n * A better way to do this is to use `ngIf` and store the result of the condition in a local\n * variable as shown in the the example below:\n *\n * {\\@example common/ngIf/ts/module.ts region='NgIfAs'}\n *\n * Notice that:\n *  - We use only one `async` pipe and hence only one subscription gets created.\n *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.\n *  - The local `user` can then be bound repeatedly in a more efficient way.\n *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only\n *    display the data if `userStream` returns a value.\n *  - We can display an alternative template while waiting for the data.\n *\n * ### Syntax\n *\n * Simple form:\n * - `<div *ngIf=\"condition\">...</div>`\n * - `<ng-template [ngIf]=\"condition\"><div>...</div></ng-template>`\n *\n * Form with an else block:\n * ```\n * <div *ngIf=\"condition; else elseBlock\">...</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * Form with a `then` and `else` block:\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>...</ng-template>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * Form with storing the value locally:\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * \\@ngModule CommonModule\n * \\@publicApi\n */\nvar NgIf = /** @class */ (function () {\n    function NgIf(_viewContainer, templateRef) {\n        this._viewContainer = _viewContainer;\n        this._context = new NgIfContext();\n        this._thenTemplateRef = null;\n        this._elseTemplateRef = null;\n        this._thenViewRef = null;\n        this._elseViewRef = null;\n        this._thenTemplateRef = templateRef;\n    }\n    Object.defineProperty(NgIf.prototype, \"ngIf\", {\n        set: /**\n         * @param {?} condition\n         * @return {?}\n         */\n        function (condition) {\n            this._context.$implicit = this._context.ngIf = condition;\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgIf.prototype, \"ngIfThen\", {\n        set: /**\n         * @param {?} templateRef\n         * @return {?}\n         */\n        function (templateRef) {\n            assertTemplate('ngIfThen', templateRef);\n            this._thenTemplateRef = templateRef;\n            this._thenViewRef = null; // clear previous view if any.\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgIf.prototype, \"ngIfElse\", {\n        set: /**\n         * @param {?} templateRef\n         * @return {?}\n         */\n        function (templateRef) {\n            assertTemplate('ngIfElse', templateRef);\n            this._elseTemplateRef = templateRef;\n            this._elseViewRef = null; // clear previous view if any.\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgIf.prototype._updateView = /**\n     * @return {?}\n     */\n    function () {\n        if (this._context.$implicit) {\n            if (!this._thenViewRef) {\n                this._viewContainer.clear();\n                this._elseViewRef = null;\n                if (this._thenTemplateRef) {\n                    this._thenViewRef =\n                        this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n                }\n            }\n        }\n        else {\n            if (!this._elseViewRef) {\n                this._viewContainer.clear();\n                this._thenViewRef = null;\n                if (this._elseTemplateRef) {\n                    this._elseViewRef =\n                        this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n                }\n            }\n        }\n    };\n    /**\n     * Assert the correct type of the expression bound to the `ngIf` input within the template.\n     *\n     * The presence of this method is a signal to the Ivy template type check compiler that when the\n     * `NgIf` structural directive renders its template, the type of the expression bound to `ngIf`\n     * should be narrowed in some way. For `NgIf`, it is narrowed to be non-null, which allows the\n     * strictNullChecks feature of TypeScript to work with `NgIf`.\n     */\n    /**\n     * Assert the correct type of the expression bound to the `ngIf` input within the template.\n     *\n     * The presence of this method is a signal to the Ivy template type check compiler that when the\n     * `NgIf` structural directive renders its template, the type of the expression bound to `ngIf`\n     * should be narrowed in some way. For `NgIf`, it is narrowed to be non-null, which allows the\n     * strictNullChecks feature of TypeScript to work with `NgIf`.\n     * @template E\n     * @param {?} dir\n     * @param {?} expr\n     * @return {?}\n     */\n    NgIf.ngTemplateGuard_ngIf = /**\n     * Assert the correct type of the expression bound to the `ngIf` input within the template.\n     *\n     * The presence of this method is a signal to the Ivy template type check compiler that when the\n     * `NgIf` structural directive renders its template, the type of the expression bound to `ngIf`\n     * should be narrowed in some way. For `NgIf`, it is narrowed to be non-null, which allows the\n     * strictNullChecks feature of TypeScript to work with `NgIf`.\n     * @template E\n     * @param {?} dir\n     * @param {?} expr\n     * @return {?}\n     */\n    function (dir, expr) { return true; };\n    NgIf.decorators = [\n        { type: Directive, args: [{ selector: '[ngIf]' },] },\n    ];\n    /** @nocollapse */\n    NgIf.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: TemplateRef }\n    ]; };\n    NgIf.propDecorators = {\n        ngIf: [{ type: Input }],\n        ngIfThen: [{ type: Input }],\n        ngIfElse: [{ type: Input }]\n    };\n    return NgIf;\n}());\nexport { NgIf };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    NgIf.ngIfUseIfTypeGuard;\n    /** @type {?} */\n    NgIf.prototype._context;\n    /** @type {?} */\n    NgIf.prototype._thenTemplateRef;\n    /** @type {?} */\n    NgIf.prototype._elseTemplateRef;\n    /** @type {?} */\n    NgIf.prototype._thenViewRef;\n    /** @type {?} */\n    NgIf.prototype._elseViewRef;\n    /** @type {?} */\n    NgIf.prototype._viewContainer;\n}\n/**\n * \\@publicApi\n */\nvar /**\n * \\@publicApi\n */\nNgIfContext = /** @class */ (function () {\n    function NgIfContext() {\n        this.$implicit = null;\n        this.ngIf = null;\n    }\n    return NgIfContext;\n}());\n/**\n * \\@publicApi\n */\nexport { NgIfContext };\nif (false) {\n    /** @type {?} */\n    NgIfContext.prototype.$implicit;\n    /** @type {?} */\n    NgIfContext.prototype.ngIf;\n}\n/**\n * @param {?} property\n * @param {?} templateRef\n * @return {?}\n */\nfunction assertTemplate(property, templateRef) {\n    /** @type {?} */\n    var isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\n    if (!isTemplateRefOrNull) {\n        throw new Error(property + \" must be a TemplateRef, but received '\" + stringify(templateRef) + \"'.\");\n    }\n}\n//# sourceMappingURL=ng_if.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Host, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nvar SwitchView = /** @class */ (function () {\n    function SwitchView(_viewContainerRef, _templateRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._templateRef = _templateRef;\n        this._created = false;\n    }\n    /**\n     * @return {?}\n     */\n    SwitchView.prototype.create = /**\n     * @return {?}\n     */\n    function () {\n        this._created = true;\n        this._viewContainerRef.createEmbeddedView(this._templateRef);\n    };\n    /**\n     * @return {?}\n     */\n    SwitchView.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        this._created = false;\n        this._viewContainerRef.clear();\n    };\n    /**\n     * @param {?} created\n     * @return {?}\n     */\n    SwitchView.prototype.enforceState = /**\n     * @param {?} created\n     * @return {?}\n     */\n    function (created) {\n        if (created && !this._created) {\n            this.create();\n        }\n        else if (!created && this._created) {\n            this.destroy();\n        }\n    };\n    return SwitchView;\n}());\nexport { SwitchView };\nif (false) {\n    /** @type {?} */\n    SwitchView.prototype._created;\n    /** @type {?} */\n    SwitchView.prototype._viewContainerRef;\n    /** @type {?} */\n    SwitchView.prototype._templateRef;\n}\n/**\n * \\@ngModule CommonModule\n *\n * \\@usageNotes\n * ```\n *     <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n * \\@description\n *\n * Adds / removes DOM sub-trees when the nest match expressions matches the switch expression.\n *\n * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n * switch expression.\n *\n * In other words:\n * - you define a container element (where you place the directive with a switch expression on the\n * `[ngSwitch]=\"...\"` attribute)\n * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n * root elements.\n *\n * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n * be preserved at the location.\n *\n * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n * expression is evaluated.\n * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n * stamped out.\n *\n * \\@publicApi\n */\nvar NgSwitch = /** @class */ (function () {\n    function NgSwitch() {\n        this._defaultUsed = false;\n        this._caseCount = 0;\n        this._lastCaseCheckIndex = 0;\n        this._lastCasesMatched = false;\n    }\n    Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n        set: /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        function (newValue) {\n            this._ngSwitch = newValue;\n            if (this._caseCount === 0) {\n                this._updateDefaultCases(true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    NgSwitch.prototype._addCase = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () { return this._caseCount++; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} view\n     * @return {?}\n     */\n    NgSwitch.prototype._addDefault = /**\n     * \\@internal\n     * @param {?} view\n     * @return {?}\n     */\n    function (view) {\n        if (!this._defaultViews) {\n            this._defaultViews = [];\n        }\n        this._defaultViews.push(view);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSwitch.prototype._matchCase = /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var matched = value == this._ngSwitch;\n        this._lastCasesMatched = this._lastCasesMatched || matched;\n        this._lastCaseCheckIndex++;\n        if (this._lastCaseCheckIndex === this._caseCount) {\n            this._updateDefaultCases(!this._lastCasesMatched);\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        return matched;\n    };\n    /**\n     * @param {?} useDefault\n     * @return {?}\n     */\n    NgSwitch.prototype._updateDefaultCases = /**\n     * @param {?} useDefault\n     * @return {?}\n     */\n    function (useDefault) {\n        if (this._defaultViews && useDefault !== this._defaultUsed) {\n            this._defaultUsed = useDefault;\n            for (var i = 0; i < this._defaultViews.length; i++) {\n                /** @type {?} */\n                var defaultView = this._defaultViews[i];\n                defaultView.enforceState(useDefault);\n            }\n        }\n    };\n    NgSwitch.decorators = [\n        { type: Directive, args: [{ selector: '[ngSwitch]' },] },\n    ];\n    NgSwitch.propDecorators = {\n        ngSwitch: [{ type: Input }]\n    };\n    return NgSwitch;\n}());\nexport { NgSwitch };\nif (false) {\n    /** @type {?} */\n    NgSwitch.prototype._defaultViews;\n    /** @type {?} */\n    NgSwitch.prototype._defaultUsed;\n    /** @type {?} */\n    NgSwitch.prototype._caseCount;\n    /** @type {?} */\n    NgSwitch.prototype._lastCaseCheckIndex;\n    /** @type {?} */\n    NgSwitch.prototype._lastCasesMatched;\n    /** @type {?} */\n    NgSwitch.prototype._ngSwitch;\n}\n/**\n * \\@ngModule CommonModule\n *\n * \\@usageNotes\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * </container-element>\n * ```\n * \\@description\n *\n * Creates a view that will be added/removed from the parent {\\@link NgSwitch} when the\n * given expression evaluate to respectively the same/different value as the switch\n * expression.\n *\n * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n * expression.\n *\n * If multiple match expressions match the switch expression value, all of them are displayed.\n *\n * See {\\@link NgSwitch} for more details and example.\n *\n * \\@publicApi\n */\nvar NgSwitchCase = /** @class */ (function () {\n    function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n        this.ngSwitch = ngSwitch;\n        ngSwitch._addCase();\n        this._view = new SwitchView(viewContainer, templateRef);\n    }\n    /**\n     * @return {?}\n     */\n    NgSwitchCase.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n    NgSwitchCase.decorators = [\n        { type: Directive, args: [{ selector: '[ngSwitchCase]' },] },\n    ];\n    /** @nocollapse */\n    NgSwitchCase.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: TemplateRef },\n        { type: NgSwitch, decorators: [{ type: Host }] }\n    ]; };\n    NgSwitchCase.propDecorators = {\n        ngSwitchCase: [{ type: Input }]\n    };\n    return NgSwitchCase;\n}());\nexport { NgSwitchCase };\nif (false) {\n    /** @type {?} */\n    NgSwitchCase.prototype._view;\n    /** @type {?} */\n    NgSwitchCase.prototype.ngSwitchCase;\n    /** @type {?} */\n    NgSwitchCase.prototype.ngSwitch;\n}\n/**\n * \\@ngModule CommonModule\n * \\@usageNotes\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-other-element *ngSwitchDefault>...</some-other-element>\n * </container-element>\n * ```\n *\n * \\@description\n *\n * Creates a view that is added to the parent {\\@link NgSwitch} when no case expressions\n * match the switch expression.\n *\n * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n * expression.\n *\n * See {\\@link NgSwitch} for more details and example.\n *\n * \\@publicApi\n */\nvar NgSwitchDefault = /** @class */ (function () {\n    function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n        ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n    }\n    NgSwitchDefault.decorators = [\n        { type: Directive, args: [{ selector: '[ngSwitchDefault]' },] },\n    ];\n    /** @nocollapse */\n    NgSwitchDefault.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: TemplateRef },\n        { type: NgSwitch, decorators: [{ type: Host }] }\n    ]; };\n    return NgSwitchDefault;\n}());\nexport { NgSwitchDefault };\n//# sourceMappingURL=ng_switch.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Attribute, Directive, Host, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { NgLocalization, getPluralCategory } from '../i18n/localization';\nimport { SwitchView } from './ng_switch';\n/**\n * \\@ngModule CommonModule\n *\n * \\@usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n *\n * \\@description\n *\n * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n *\n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n *\n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n *\n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n *\n * \\@publicApi\n */\nvar NgPlural = /** @class */ (function () {\n    function NgPlural(_localization) {\n        this._localization = _localization;\n        this._caseViews = {};\n    }\n    Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._switchValue = value;\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @param {?} switchView\n     * @return {?}\n     */\n    NgPlural.prototype.addCase = /**\n     * @param {?} value\n     * @param {?} switchView\n     * @return {?}\n     */\n    function (value, switchView) { this._caseViews[value] = switchView; };\n    /**\n     * @return {?}\n     */\n    NgPlural.prototype._updateView = /**\n     * @return {?}\n     */\n    function () {\n        this._clearViews();\n        /** @type {?} */\n        var cases = Object.keys(this._caseViews);\n        /** @type {?} */\n        var key = getPluralCategory(this._switchValue, cases, this._localization);\n        this._activateView(this._caseViews[key]);\n    };\n    /**\n     * @return {?}\n     */\n    NgPlural.prototype._clearViews = /**\n     * @return {?}\n     */\n    function () {\n        if (this._activeView)\n            this._activeView.destroy();\n    };\n    /**\n     * @param {?} view\n     * @return {?}\n     */\n    NgPlural.prototype._activateView = /**\n     * @param {?} view\n     * @return {?}\n     */\n    function (view) {\n        if (view) {\n            this._activeView = view;\n            this._activeView.create();\n        }\n    };\n    NgPlural.decorators = [\n        { type: Directive, args: [{ selector: '[ngPlural]' },] },\n    ];\n    /** @nocollapse */\n    NgPlural.ctorParameters = function () { return [\n        { type: NgLocalization }\n    ]; };\n    NgPlural.propDecorators = {\n        ngPlural: [{ type: Input }]\n    };\n    return NgPlural;\n}());\nexport { NgPlural };\nif (false) {\n    /** @type {?} */\n    NgPlural.prototype._switchValue;\n    /** @type {?} */\n    NgPlural.prototype._activeView;\n    /** @type {?} */\n    NgPlural.prototype._caseViews;\n    /** @type {?} */\n    NgPlural.prototype._localization;\n}\n/**\n * \\@ngModule CommonModule\n *\n * \\@description\n *\n * Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n * given expression matches the plural expression according to CLDR rules.\n *\n * \\@usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n * ```\n *\n * See {\\@link NgPlural} for more details and example.\n *\n * \\@publicApi\n */\nvar NgPluralCase = /** @class */ (function () {\n    function NgPluralCase(value, template, viewContainer, ngPlural) {\n        this.value = value;\n        /** @type {?} */\n        var isANumber = !isNaN(Number(value));\n        ngPlural.addCase(isANumber ? \"=\" + value : value, new SwitchView(viewContainer, template));\n    }\n    NgPluralCase.decorators = [\n        { type: Directive, args: [{ selector: '[ngPluralCase]' },] },\n    ];\n    /** @nocollapse */\n    NgPluralCase.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Attribute, args: ['ngPluralCase',] }] },\n        { type: TemplateRef },\n        { type: ViewContainerRef },\n        { type: NgPlural, decorators: [{ type: Host }] }\n    ]; };\n    return NgPluralCase;\n}());\nexport { NgPluralCase };\nif (false) {\n    /** @type {?} */\n    NgPluralCase.prototype.value;\n}\n//# sourceMappingURL=ng_plural.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Input, KeyValueDiffers, Renderer2 } from '@angular/core';\n/**\n * \\@ngModule CommonModule\n *\n * \\@usageNotes\n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n *\n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n *\n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n *\n * \\@description\n *\n * Update an HTML element styles.\n *\n * The styles are updated according to the value of the expression evaluation:\n * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n * - values are the values assigned to those properties (expressed in the given unit).\n *\n * \\@publicApi\n */\nvar NgStyle = /** @class */ (function () {\n    function NgStyle(_differs, _ngEl, _renderer) {\n        this._differs = _differs;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n    }\n    Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n        set: /**\n         * @param {?} values\n         * @return {?}\n         */\n        function (values) {\n            this._ngStyle = values;\n            if (!this._differ && values) {\n                this._differ = this._differs.find(values).create();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgStyle.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._differ) {\n            /** @type {?} */\n            var changes = this._differ.diff(this._ngStyle);\n            if (changes) {\n                this._applyChanges(changes);\n            }\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgStyle.prototype._applyChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n        changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n        changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n    };\n    /**\n     * @param {?} nameAndUnit\n     * @param {?} value\n     * @return {?}\n     */\n    NgStyle.prototype._setStyle = /**\n     * @param {?} nameAndUnit\n     * @param {?} value\n     * @return {?}\n     */\n    function (nameAndUnit, value) {\n        var _a = nameAndUnit.split('.'), name = _a[0], unit = _a[1];\n        value = value != null && unit ? \"\" + value + unit : value;\n        if (value != null) {\n            this._renderer.setStyle(this._ngEl.nativeElement, name, /** @type {?} */ (value));\n        }\n        else {\n            this._renderer.removeStyle(this._ngEl.nativeElement, name);\n        }\n    };\n    NgStyle.decorators = [\n        { type: Directive, args: [{ selector: '[ngStyle]' },] },\n    ];\n    /** @nocollapse */\n    NgStyle.ctorParameters = function () { return [\n        { type: KeyValueDiffers },\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    NgStyle.propDecorators = {\n        ngStyle: [{ type: Input }]\n    };\n    return NgStyle;\n}());\nexport { NgStyle };\nif (false) {\n    /** @type {?} */\n    NgStyle.prototype._ngStyle;\n    /** @type {?} */\n    NgStyle.prototype._differ;\n    /** @type {?} */\n    NgStyle.prototype._differs;\n    /** @type {?} */\n    NgStyle.prototype._ngEl;\n    /** @type {?} */\n    NgStyle.prototype._renderer;\n}\n//# sourceMappingURL=ng_style.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n/**\n * \\@ngModule CommonModule\n *\n * \\@description\n *\n * Inserts an embedded view from a prepared `TemplateRef`.\n *\n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n *\n * \\@usageNotes\n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n *\n * Using the key `$implicit` in the context object will set its value as default.\n *\n * ### Example\n *\n * {\\@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n *\n * \\@publicApi\n */\nvar NgTemplateOutlet = /** @class */ (function () {\n    function NgTemplateOutlet(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgTemplateOutlet.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        /** @type {?} */\n        var recreateView = this._shouldRecreateView(changes);\n        if (recreateView) {\n            if (this._viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            if (this.ngTemplateOutlet) {\n                this._viewRef = this._viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext);\n            }\n        }\n        else {\n            if (this._viewRef && this.ngTemplateOutletContext) {\n                this._updateExistingContext(this.ngTemplateOutletContext);\n            }\n        }\n    };\n    /**\n     * We need to re-create existing embedded view if:\n     * - templateRef has changed\n     * - context has changes\n     *\n     * We mark context object as changed when the corresponding object\n     * shape changes (new properties are added or existing properties are removed).\n     * In other words we consider context with the same properties as \"the same\" even\n     * if object reference changes (see https://github.com/angular/angular/issues/13407).\n     * @param {?} changes\n     * @return {?}\n     */\n    NgTemplateOutlet.prototype._shouldRecreateView = /**\n     * We need to re-create existing embedded view if:\n     * - templateRef has changed\n     * - context has changes\n     *\n     * We mark context object as changed when the corresponding object\n     * shape changes (new properties are added or existing properties are removed).\n     * In other words we consider context with the same properties as \"the same\" even\n     * if object reference changes (see https://github.com/angular/angular/issues/13407).\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        /** @type {?} */\n        var ctxChange = changes['ngTemplateOutletContext'];\n        return !!changes['ngTemplateOutlet'] || (ctxChange && this._hasContextShapeChanged(ctxChange));\n    };\n    /**\n     * @param {?} ctxChange\n     * @return {?}\n     */\n    NgTemplateOutlet.prototype._hasContextShapeChanged = /**\n     * @param {?} ctxChange\n     * @return {?}\n     */\n    function (ctxChange) {\n        /** @type {?} */\n        var prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n        /** @type {?} */\n        var currCtxKeys = Object.keys(ctxChange.currentValue || {});\n        if (prevCtxKeys.length === currCtxKeys.length) {\n            for (var _i = 0, currCtxKeys_1 = currCtxKeys; _i < currCtxKeys_1.length; _i++) {\n                var propName = currCtxKeys_1[_i];\n                if (prevCtxKeys.indexOf(propName) === -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    NgTemplateOutlet.prototype._updateExistingContext = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        for (var _i = 0, _a = Object.keys(ctx); _i < _a.length; _i++) {\n            var propName = _a[_i];\n            (/** @type {?} */ (this._viewRef.context))[propName] = (/** @type {?} */ (this.ngTemplateOutletContext))[propName];\n        }\n    };\n    NgTemplateOutlet.decorators = [\n        { type: Directive, args: [{ selector: '[ngTemplateOutlet]' },] },\n    ];\n    /** @nocollapse */\n    NgTemplateOutlet.ctorParameters = function () { return [\n        { type: ViewContainerRef }\n    ]; };\n    NgTemplateOutlet.propDecorators = {\n        ngTemplateOutletContext: [{ type: Input }],\n        ngTemplateOutlet: [{ type: Input }]\n    };\n    return NgTemplateOutlet;\n}());\nexport { NgTemplateOutlet };\nif (false) {\n    /** @type {?} */\n    NgTemplateOutlet.prototype._viewRef;\n    /** @type {?} */\n    NgTemplateOutlet.prototype.ngTemplateOutletContext;\n    /** @type {?} */\n    NgTemplateOutlet.prototype.ngTemplateOutlet;\n    /** @type {?} */\n    NgTemplateOutlet.prototype._viewContainerRef;\n}\n//# sourceMappingURL=ng_template_outlet.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgClass } from './ng_class';\nimport { NgComponentOutlet } from './ng_component_outlet';\nimport { NgForOf, NgForOfContext } from './ng_for_of';\nimport { NgIf, NgIfContext } from './ng_if';\nimport { NgPlural, NgPluralCase } from './ng_plural';\nimport { NgStyle } from './ng_style';\nimport { NgSwitch, NgSwitchCase, NgSwitchDefault } from './ng_switch';\nimport { NgTemplateOutlet } from './ng_template_outlet';\nexport { NgClass, NgComponentOutlet, NgForOf, NgForOfContext, NgIf, NgIfContext, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet };\n/** *\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n  @type {?} */\nexport var COMMON_DIRECTIVES = [\n    NgClass,\n    NgComponentOutlet,\n    NgForOf,\n    NgIf,\n    NgTemplateOutlet,\n    NgStyle,\n    NgSwitch,\n    NgSwitchCase,\n    NgSwitchDefault,\n    NgPlural,\n    NgPluralCase,\n];\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nimport * as tslib_1 from \"tslib\";\nimport { NumberFormatStyle } from '../../i18n/locale_data_api';\nvar NumberFormatter = /** @class */ (function () {\n    function NumberFormatter() {\n    }\n    /**\n     * @param {?} num\n     * @param {?} locale\n     * @param {?} style\n     * @param {?=} opts\n     * @return {?}\n     */\n    NumberFormatter.format = /**\n     * @param {?} num\n     * @param {?} locale\n     * @param {?} style\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (num, locale, style, opts) {\n        if (opts === void 0) { opts = {}; }\n        var minimumIntegerDigits = opts.minimumIntegerDigits, minimumFractionDigits = opts.minimumFractionDigits, maximumFractionDigits = opts.maximumFractionDigits, currency = opts.currency, _a = opts.currencyAsSymbol, currencyAsSymbol = _a === void 0 ? false : _a;\n        /** @type {?} */\n        var options = {\n            minimumIntegerDigits: minimumIntegerDigits,\n            minimumFractionDigits: minimumFractionDigits,\n            maximumFractionDigits: maximumFractionDigits,\n            style: NumberFormatStyle[style].toLowerCase()\n        };\n        if (style == NumberFormatStyle.Currency) {\n            options.currency = typeof currency == 'string' ? currency : undefined;\n            options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n        }\n        return new Intl.NumberFormat(locale, options).format(num);\n    };\n    return NumberFormatter;\n}());\nexport { NumberFormatter };\n/** @typedef {?} */\nvar DateFormatterFn;\n/** @type {?} */\nvar DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n/** @type {?} */\nvar PATTERN_ALIASES = {\n    // Keys are quoted so they do not get renamed during closure compilation.\n    'yMMMdjms': datePartGetterFactory(combine([\n        digitCondition('year', 1),\n        nameCondition('month', 3),\n        digitCondition('day', 1),\n        digitCondition('hour', 1),\n        digitCondition('minute', 1),\n        digitCondition('second', 1),\n    ])),\n    'yMdjm': datePartGetterFactory(combine([\n        digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n        digitCondition('hour', 1), digitCondition('minute', 1)\n    ])),\n    'yMMMMEEEEd': datePartGetterFactory(combine([\n        digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n        digitCondition('day', 1)\n    ])),\n    'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n    'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n    'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n    'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n    'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\n/** @type {?} */\nvar DATE_FORMATS = {\n    // Keys are quoted so they do not get renamed.\n    'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n    'yy': datePartGetterFactory(digitCondition('year', 2)),\n    'y': datePartGetterFactory(digitCondition('year', 1)),\n    'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n    'MMM': datePartGetterFactory(nameCondition('month', 3)),\n    'MM': datePartGetterFactory(digitCondition('month', 2)),\n    'M': datePartGetterFactory(digitCondition('month', 1)),\n    'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n    'L': datePartGetterFactory(nameCondition('month', 1)),\n    'dd': datePartGetterFactory(digitCondition('day', 2)),\n    'd': datePartGetterFactory(digitCondition('day', 1)),\n    'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n    'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n    'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n    'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'jj': datePartGetterFactory(digitCondition('hour', 2)),\n    'j': datePartGetterFactory(digitCondition('hour', 1)),\n    'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n    'm': datePartGetterFactory(digitCondition('minute', 1)),\n    'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n    's': datePartGetterFactory(digitCondition('second', 1)),\n    // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n    // we can be just safely rely on using `sss` since we currently don't support single or two digit\n    // fractions\n    'sss': datePartGetterFactory(digitCondition('second', 3)),\n    'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n    'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n    'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n    'E': datePartGetterFactory(nameCondition('weekday', 1)),\n    'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'Z': timeZoneGetter('short'),\n    'z': timeZoneGetter('long'),\n    'ww': datePartGetterFactory({}),\n    // Week of year, padded (00-53). Week 01 is the week with the\n    // first Thursday of the year. not support ?\n    'w': datePartGetterFactory({}),\n    // Week of year (0-53). Week 1 is the week with the first Thursday\n    // of the year not support ?\n    'G': datePartGetterFactory(nameCondition('era', 1)),\n    'GG': datePartGetterFactory(nameCondition('era', 2)),\n    'GGG': datePartGetterFactory(nameCondition('era', 3)),\n    'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction digitModifier(inner) {\n    return function (date, locale) {\n        /** @type {?} */\n        var result = inner(date, locale);\n        return result.length == 1 ? '0' + result : result;\n    };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourClockExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n}\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} options\n * @return {?}\n */\nfunction intlDateFormat(date, locale, options) {\n    return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\n/**\n * @param {?} timezone\n * @return {?}\n */\nfunction timeZoneGetter(timezone) {\n    /** @type {?} */\n    var options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n    return function (date, locale) {\n        /** @type {?} */\n        var result = intlDateFormat(date, locale, options);\n        // Then extract first 3 letters that related to hours\n        return result ? result.substring(3) : '';\n    };\n}\n/**\n * @param {?} options\n * @param {?} value\n * @return {?}\n */\nfunction hour12Modify(options, value) {\n    options.hour12 = value;\n    return options;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction digitCondition(prop, len) {\n    /** @type {?} */\n    var result = {};\n    result[prop] = len === 2 ? '2-digit' : 'numeric';\n    return result;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction nameCondition(prop, len) {\n    /** @type {?} */\n    var result = {};\n    if (len < 4) {\n        result[prop] = len > 1 ? 'short' : 'narrow';\n    }\n    else {\n        result[prop] = 'long';\n    }\n    return result;\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction combine(options) {\n    return options.reduce(function (merged, opt) { return (tslib_1.__assign({}, merged, opt)); }, {});\n}\n/**\n * @param {?} ret\n * @return {?}\n */\nfunction datePartGetterFactory(ret) {\n    return function (date, locale) { return intlDateFormat(date, locale, ret); };\n}\n/** @type {?} */\nvar DATE_FORMATTER_CACHE = new Map();\n/**\n * @param {?} format\n * @param {?} date\n * @param {?} locale\n * @return {?}\n */\nfunction dateFormatter(format, date, locale) {\n    /** @type {?} */\n    var fn = PATTERN_ALIASES[format];\n    if (fn)\n        return fn(date, locale);\n    /** @type {?} */\n    var cacheKey = format;\n    /** @type {?} */\n    var parts = DATE_FORMATTER_CACHE.get(cacheKey);\n    if (!parts) {\n        parts = [];\n        /** @type {?} */\n        var match = void 0;\n        DATE_FORMATS_SPLIT.exec(format);\n        /** @type {?} */\n        var _format = format;\n        while (_format) {\n            match = DATE_FORMATS_SPLIT.exec(_format);\n            if (match) {\n                parts = parts.concat(match.slice(1));\n                _format = /** @type {?} */ ((parts.pop()));\n            }\n            else {\n                parts.push(_format);\n                _format = null;\n            }\n        }\n        DATE_FORMATTER_CACHE.set(cacheKey, parts);\n    }\n    return parts.reduce(function (text, part) {\n        /** @type {?} */\n        var fn = DATE_FORMATS[part];\n        return text + (fn ? fn(date, locale) : partToTime(part));\n    }, '');\n}\n/**\n * @param {?} part\n * @return {?}\n */\nfunction partToTime(part) {\n    return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\nvar DateFormatter = /** @class */ (function () {\n    function DateFormatter() {\n    }\n    /**\n     * @param {?} date\n     * @param {?} locale\n     * @param {?} pattern\n     * @return {?}\n     */\n    DateFormatter.format = /**\n     * @param {?} date\n     * @param {?} locale\n     * @param {?} pattern\n     * @return {?}\n     */\n    function (date, locale, pattern) {\n        return dateFormatter(pattern, date, locale);\n    };\n    return DateFormatter;\n}());\nexport { DateFormatter };\n//# sourceMappingURL=intl.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n  */\nimport { Inject, LOCALE_ID, Pipe } from '@angular/core';\nimport { ISO8601_DATE_REGEX, isoStringToDate } from '../../i18n/format_date';\nimport { invalidPipeArgumentError } from '../invalid_pipe_argument_error';\nimport { DateFormatter } from './intl';\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a date according to locale rules.\n *\n * Where:\n * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n * (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. The format can be predefined as\n *   shown below or custom as shown in the table.\n *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n *\n *\n *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n *\n * In javascript, only the components specified will be respected (not the ordering,\n * punctuations, ...) and details of the formatting will be dependent on the locale.\n *\n * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n *\n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n *\n * WARNINGS:\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n *   browsers.\n *\n * \\@usageNotes\n *\n * ### Examples\n *\n * Assuming `dateObj` is (year: 2010, month: 9, day: 3, hour: 12 PM, minute: 05, second: 08)\n * in the _local_ time and locale is 'en-US':\n *\n * {\\@example common/pipes/ts/date_pipe.ts region='DeprecatedDatePipe'}\n *\n * \\@publicApi\n */\nvar DeprecatedDatePipe = /** @class */ (function () {\n    function DeprecatedDatePipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} pattern\n     * @return {?}\n     */\n    DeprecatedDatePipe.prototype.transform = /**\n     * @param {?} value\n     * @param {?=} pattern\n     * @return {?}\n     */\n    function (value, pattern) {\n        if (pattern === void 0) { pattern = 'mediumDate'; }\n        if (value == null || value === '' || value !== value)\n            return null;\n        /** @type {?} */\n        var date;\n        if (typeof value === 'string') {\n            value = value.trim();\n        }\n        if (isDate(value)) {\n            date = value;\n        }\n        else if (!isNaN(value - parseFloat(value))) {\n            date = new Date(parseFloat(value));\n        }\n        else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            var _a = value.split('-').map(function (val) { return parseInt(val, 10); }), y = _a[0], m = _a[1], d = _a[2];\n            date = new Date(y, m - 1, d);\n        }\n        else {\n            date = new Date(value);\n        }\n        if (!isDate(date)) {\n            /** @type {?} */\n            var match = void 0;\n            if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n                date = isoStringToDate(match);\n            }\n            else {\n                throw invalidPipeArgumentError(DeprecatedDatePipe, value);\n            }\n        }\n        return DateFormatter.format(date, this._locale, DeprecatedDatePipe._ALIASES[pattern] || pattern);\n    };\n    /**\n     * \\@internal\n     */\n    DeprecatedDatePipe._ALIASES = {\n        'medium': 'yMMMdjms',\n        'short': 'yMdjm',\n        'fullDate': 'yMMMMEEEEd',\n        'longDate': 'yMMMMd',\n        'mediumDate': 'yMMMd',\n        'shortDate': 'yMd',\n        'mediumTime': 'jms',\n        'shortTime': 'jm'\n    };\n    DeprecatedDatePipe.decorators = [\n        { type: Pipe, args: [{ name: 'date', pure: true },] },\n    ];\n    /** @nocollapse */\n    DeprecatedDatePipe.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n    ]; };\n    return DeprecatedDatePipe;\n}());\nexport { DeprecatedDatePipe };\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    DeprecatedDatePipe._ALIASES;\n    /** @type {?} */\n    DeprecatedDatePipe.prototype._locale;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n//# sourceMappingURL=date_pipe.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, LOCALE_ID, Pipe } from '@angular/core';\nimport { NUMBER_FORMAT_REGEXP, parseIntAutoRadix } from '../../i18n/format_number';\nimport { NumberFormatStyle } from '../../i18n/locale_data_api';\nimport { invalidPipeArgumentError } from '../invalid_pipe_argument_error';\nimport { NumberFormatter } from './intl';\n/**\n * @param {?} pipe\n * @param {?} locale\n * @param {?} value\n * @param {?} style\n * @param {?=} digits\n * @param {?=} currency\n * @param {?=} currencyAsSymbol\n * @return {?}\n */\nfunction formatNumber(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n    if (currency === void 0) { currency = null; }\n    if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n    if (value == null)\n        return null;\n    // Convert strings to numbers\n    value = typeof value === 'string' && !isNaN(+value - parseFloat(value)) ? +value : value;\n    if (typeof value !== 'number') {\n        throw invalidPipeArgumentError(pipe, value);\n    }\n    /** @type {?} */\n    var minInt;\n    /** @type {?} */\n    var minFraction;\n    /** @type {?} */\n    var maxFraction;\n    if (style !== NumberFormatStyle.Currency) {\n        // rely on Intl default for currency\n        minInt = 1;\n        minFraction = 0;\n        maxFraction = 3;\n    }\n    if (digits) {\n        /** @type {?} */\n        var parts = digits.match(NUMBER_FORMAT_REGEXP);\n        if (parts === null) {\n            throw new Error(digits + \" is not a valid digit info for number pipes\");\n        }\n        if (parts[1] != null) { // min integer digits\n            // min integer digits\n            minInt = parseIntAutoRadix(parts[1]);\n        }\n        if (parts[3] != null) { // min fraction digits\n            // min fraction digits\n            minFraction = parseIntAutoRadix(parts[3]);\n        }\n        if (parts[5] != null) { // max fraction digits\n            // max fraction digits\n            maxFraction = parseIntAutoRadix(parts[5]);\n        }\n    }\n    return NumberFormatter.format(/** @type {?} */ (value), locale, style, {\n        minimumIntegerDigits: minInt,\n        minimumFractionDigits: minFraction,\n        maximumFractionDigits: maxFraction,\n        currency: currency,\n        currencyAsSymbol: currencyAsSymbol,\n    });\n}\n/**\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n *\n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n *\n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/number_pipe.ts region='DeprecatedNumberPipe'}\n *\n * \\@ngModule CommonModule\n * \\@publicApi\n */\nvar DeprecatedDecimalPipe = /** @class */ (function () {\n    function DeprecatedDecimalPipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} digits\n     * @return {?}\n     */\n    DeprecatedDecimalPipe.prototype.transform = /**\n     * @param {?} value\n     * @param {?=} digits\n     * @return {?}\n     */\n    function (value, digits) {\n        return formatNumber(DeprecatedDecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n    };\n    DeprecatedDecimalPipe.decorators = [\n        { type: Pipe, args: [{ name: 'number' },] },\n    ];\n    /** @nocollapse */\n    DeprecatedDecimalPipe.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n    ]; };\n    return DeprecatedDecimalPipe;\n}());\nexport { DeprecatedDecimalPipe };\nif (false) {\n    /** @type {?} */\n    DeprecatedDecimalPipe.prototype._locale;\n}\n/**\n * \\@ngModule CommonModule\n *\n * \\@description\n *\n * Formats a number as percentage according to locale rules.\n *\n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/percent_pipe.ts region='DeprecatedPercentPipe'}\n *\n * \\@publicApi\n */\nvar DeprecatedPercentPipe = /** @class */ (function () {\n    function DeprecatedPercentPipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} digits\n     * @return {?}\n     */\n    DeprecatedPercentPipe.prototype.transform = /**\n     * @param {?} value\n     * @param {?=} digits\n     * @return {?}\n     */\n    function (value, digits) {\n        return formatNumber(DeprecatedPercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n    };\n    DeprecatedPercentPipe.decorators = [\n        { type: Pipe, args: [{ name: 'percent' },] },\n    ];\n    /** @nocollapse */\n    DeprecatedPercentPipe.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n    ]; };\n    return DeprecatedPercentPipe;\n}());\nexport { DeprecatedPercentPipe };\nif (false) {\n    /** @type {?} */\n    DeprecatedPercentPipe.prototype._locale;\n}\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a number as currency using locale rules.\n *\n * Use `currency` to format a number as currency.\n *\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n *   - `true`: use symbol (e.g. `$`).\n *   - `false`(default): use code (e.g. `USD`).\n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/currency_pipe.ts region='DeprecatedCurrencyPipe'}\n *\n * \\@publicApi\n */\nvar DeprecatedCurrencyPipe = /** @class */ (function () {\n    function DeprecatedCurrencyPipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} currencyCode\n     * @param {?=} symbolDisplay\n     * @param {?=} digits\n     * @return {?}\n     */\n    DeprecatedCurrencyPipe.prototype.transform = /**\n     * @param {?} value\n     * @param {?=} currencyCode\n     * @param {?=} symbolDisplay\n     * @param {?=} digits\n     * @return {?}\n     */\n    function (value, currencyCode, symbolDisplay, digits) {\n        if (currencyCode === void 0) { currencyCode = 'USD'; }\n        if (symbolDisplay === void 0) { symbolDisplay = false; }\n        return formatNumber(DeprecatedCurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n    };\n    DeprecatedCurrencyPipe.decorators = [\n        { type: Pipe, args: [{ name: 'currency' },] },\n    ];\n    /** @nocollapse */\n    DeprecatedCurrencyPipe.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n    ]; };\n    return DeprecatedCurrencyPipe;\n}());\nexport { DeprecatedCurrencyPipe };\nif (false) {\n    /** @type {?} */\n    DeprecatedCurrencyPipe.prototype._locale;\n}\n//# sourceMappingURL=number_pipe.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectorRef, Pipe, WrappedValue, ÉµisObservable, ÉµisPromise } from '@angular/core';\nimport { invalidPipeArgumentError } from './invalid_pipe_argument_error';\n/**\n * @record\n */\nfunction SubscriptionStrategy() { }\n/** @type {?} */\nSubscriptionStrategy.prototype.createSubscription;\n/** @type {?} */\nSubscriptionStrategy.prototype.dispose;\n/** @type {?} */\nSubscriptionStrategy.prototype.onDestroy;\nvar ObservableStrategy = /** @class */ (function () {\n    function ObservableStrategy() {\n    }\n    /**\n     * @param {?} async\n     * @param {?} updateLatestValue\n     * @return {?}\n     */\n    ObservableStrategy.prototype.createSubscription = /**\n     * @param {?} async\n     * @param {?} updateLatestValue\n     * @return {?}\n     */\n    function (async, updateLatestValue) {\n        return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n    };\n    /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    ObservableStrategy.prototype.dispose = /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    function (subscription) { subscription.unsubscribe(); };\n    /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    ObservableStrategy.prototype.onDestroy = /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    function (subscription) { subscription.unsubscribe(); };\n    return ObservableStrategy;\n}());\nvar PromiseStrategy = /** @class */ (function () {\n    function PromiseStrategy() {\n    }\n    /**\n     * @param {?} async\n     * @param {?} updateLatestValue\n     * @return {?}\n     */\n    PromiseStrategy.prototype.createSubscription = /**\n     * @param {?} async\n     * @param {?} updateLatestValue\n     * @return {?}\n     */\n    function (async, updateLatestValue) {\n        return async.then(updateLatestValue, function (e) { throw e; });\n    };\n    /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    PromiseStrategy.prototype.dispose = /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    function (subscription) { };\n    /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    PromiseStrategy.prototype.onDestroy = /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    function (subscription) { };\n    return PromiseStrategy;\n}());\n/** @type {?} */\nvar _promiseStrategy = new PromiseStrategy();\n/** @type {?} */\nvar _observableStrategy = new ObservableStrategy();\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Unwraps a value from an asynchronous primitive.\n *\n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n *\n * \\@usageNotes\n *\n * ### Examples\n *\n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n *\n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n *\n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n *\n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n *\n * \\@publicApi\n */\nvar AsyncPipe = /** @class */ (function () {\n    function AsyncPipe(_ref) {\n        this._ref = _ref;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n        this._strategy = /** @type {?} */ ((null));\n    }\n    /**\n     * @return {?}\n     */\n    AsyncPipe.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._subscription) {\n            this._dispose();\n        }\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    AsyncPipe.prototype.transform = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.transform(/** @type {?} */ (obj));\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    AsyncPipe.prototype._subscribe = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var _this = this;\n        this._obj = obj;\n        this._strategy = this._selectStrategy(obj);\n        this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    AsyncPipe.prototype._selectStrategy = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        if (ÉµisPromise(obj)) {\n            return _promiseStrategy;\n        }\n        if (ÉµisObservable(obj)) {\n            return _observableStrategy;\n        }\n        throw invalidPipeArgumentError(AsyncPipe, obj);\n    };\n    /**\n     * @return {?}\n     */\n    AsyncPipe.prototype._dispose = /**\n     * @return {?}\n     */\n    function () {\n        this._strategy.dispose(/** @type {?} */ ((this._subscription)));\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    };\n    /**\n     * @param {?} async\n     * @param {?} value\n     * @return {?}\n     */\n    AsyncPipe.prototype._updateLatestValue = /**\n     * @param {?} async\n     * @param {?} value\n     * @return {?}\n     */\n    function (async, value) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    };\n    AsyncPipe.decorators = [\n        { type: Pipe, args: [{ name: 'async', pure: false },] },\n    ];\n    /** @nocollapse */\n    AsyncPipe.ctorParameters = function () { return [\n        { type: ChangeDetectorRef }\n    ]; };\n    return AsyncPipe;\n}());\nexport { AsyncPipe };\nif (false) {\n    /** @type {?} */\n    AsyncPipe.prototype._latestValue;\n    /** @type {?} */\n    AsyncPipe.prototype._latestReturnedValue;\n    /** @type {?} */\n    AsyncPipe.prototype._subscription;\n    /** @type {?} */\n    AsyncPipe.prototype._obj;\n    /** @type {?} */\n    AsyncPipe.prototype._strategy;\n    /** @type {?} */\n    AsyncPipe.prototype._ref;\n}\n//# sourceMappingURL=async_pipe.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Pipe } from '@angular/core';\nimport { invalidPipeArgumentError } from './invalid_pipe_argument_error';\n/**\n * Transforms text to all lower case.\n *\n * @see `UpperCasePipe`\n * @see `TitleCasePipe`\n * \\@usageNotes\n *\n * The following example defines a view that allows the user to enter\n * text, and then uses the pipe to convert the input text to all lower case.\n *\n * <code-example path=\"common/pipes/ts/lowerupper_pipe.ts\" region='LowerUpperPipe'></code-example>\n *\n * \\@ngModule CommonModule\n * \\@publicApi\n */\nvar LowerCasePipe = /** @class */ (function () {\n    function LowerCasePipe() {\n    }\n    /**\n     * @param value The string to transform to lower case.\n     */\n    /**\n     * @param {?} value The string to transform to lower case.\n     * @return {?}\n     */\n    LowerCasePipe.prototype.transform = /**\n     * @param {?} value The string to transform to lower case.\n     * @return {?}\n     */\n    function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(LowerCasePipe, value);\n        }\n        return value.toLowerCase();\n    };\n    LowerCasePipe.decorators = [\n        { type: Pipe, args: [{ name: 'lowercase' },] },\n    ];\n    return LowerCasePipe;\n}());\nexport { LowerCasePipe };\n/** @type {?} */\nvar unicodeWordMatch = /(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])\\S*/g;\n/**\n * Transforms text to title case.\n * Capitalizes the first letter of each word, and transforms the\n * rest of the word to lower case.\n * Words are delimited by any whitespace character, such as a space, tab, or line-feed character.\n *\n * @see `LowerCasePipe`\n * @see `UpperCasePipe`\n *\n * \\@usageNotes\n * The following example shows the result of transforming various strings into title case.\n *\n * <code-example path=\"common/pipes/ts/titlecase_pipe.ts\" region='TitleCasePipe'></code-example>\n *\n * \\@ngModule CommonModule\n * \\@publicApi\n */\nvar TitleCasePipe = /** @class */ (function () {\n    function TitleCasePipe() {\n    }\n    /**\n     * @param value The string to transform to title case.\n     */\n    /**\n     * @param {?} value The string to transform to title case.\n     * @return {?}\n     */\n    TitleCasePipe.prototype.transform = /**\n     * @param {?} value The string to transform to title case.\n     * @return {?}\n     */\n    function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(TitleCasePipe, value);\n        }\n        return value.replace(unicodeWordMatch, (function (txt) { return txt[0].toUpperCase() + txt.substr(1).toLowerCase(); }));\n    };\n    TitleCasePipe.decorators = [\n        { type: Pipe, args: [{ name: 'titlecase' },] },\n    ];\n    return TitleCasePipe;\n}());\nexport { TitleCasePipe };\n/**\n * Transforms text to all upper case.\n * @see `LowerCasePipe`\n * @see `TitleCasePipe`\n *\n * \\@ngModule CommonModule\n * \\@publicApi\n */\nvar UpperCasePipe = /** @class */ (function () {\n    function UpperCasePipe() {\n    }\n    /**\n     * @param value The string to transform to upper case.\n     */\n    /**\n     * @param {?} value The string to transform to upper case.\n     * @return {?}\n     */\n    UpperCasePipe.prototype.transform = /**\n     * @param {?} value The string to transform to upper case.\n     * @return {?}\n     */\n    function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(UpperCasePipe, value);\n        }\n        return value.toUpperCase();\n    };\n    UpperCasePipe.decorators = [\n        { type: Pipe, args: [{ name: 'uppercase' },] },\n    ];\n    return UpperCasePipe;\n}());\nexport { UpperCasePipe };\n//# sourceMappingURL=case_conversion_pipes.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, LOCALE_ID, Pipe } from '@angular/core';\nimport { formatDate } from '../i18n/format_date';\nimport { invalidPipeArgumentError } from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a date value according to locale rules.\n *\n * Only the `en-US` locale data comes with Angular. To localize dates\n * in another language, you must import the corresponding locale data.\n * See the [I18n guide](guide/i18n#i18n-pipes) for more information.\n *\n * @see `formatDate()`\n *\n *\n * \\@usageNotes\n *\n * The result of this pipe is not reevaluated when the input is mutated. To avoid the need to\n * reformat the date on every change-detection cycle, treat the date as an immutable object\n * and change the reference when the pipe needs to run again.\n *\n * ### Pre-defined format options\n *\n * Examples are given in `en-US` locale.\n *\n * - `'short'`: equivalent to `'M/d/yy, h:mm a'` (`6/15/15, 9:03 AM`).\n * - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (`Jun 15, 2015, 9:03:01 AM`).\n * - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (`June 15, 2015 at 9:03:01 AM\n * GMT+1`).\n * - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (`Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`).\n * - `'shortDate'`: equivalent to `'M/d/yy'` (`6/15/15`).\n * - `'mediumDate'`: equivalent to `'MMM d, y'` (`Jun 15, 2015`).\n * - `'longDate'`: equivalent to `'MMMM d, y'` (`June 15, 2015`).\n * - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (`Monday, June 15, 2015`).\n * - `'shortTime'`: equivalent to `'h:mm a'` (`9:03 AM`).\n * - `'mediumTime'`: equivalent to `'h:mm:ss a'` (`9:03:01 AM`).\n * - `'longTime'`: equivalent to `'h:mm:ss a z'` (`9:03:01 AM GMT+1`).\n * - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (`9:03:01 AM GMT+01:00`).\n *\n * ### Custom format options\n *\n * You can construct a format string using symbols to specify the components\n * of a date-time value, as described in the following table.\n * Format details depend on the locale.\n * Fields marked with (*) are only available in the extra data set for the given locale.\n *\n *  | Field type         | Format      | Description                                                   | Example Value                                              |\n *  |--------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|\n *  | Era                | G, GG & GGG | Abbreviated                                                   | AD                                                         |\n *  |                    | GGGG        | Wide                                                          | Anno Domini                                                |\n *  |                    | GGGGG       | Narrow                                                        | A                                                          |\n *  | Year               | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\n *  |                    | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\n *  |                    | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\n *  |                    | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\n *  | Month              | M           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | MMM         | Abbreviated                                                   | Sep                                                        |\n *  |                    | MMMM        | Wide                                                          | September                                                  |\n *  |                    | MMMMM       | Narrow                                                        | S                                                          |\n *  | Month standalone   | L           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | LLL         | Abbreviated                                                   | Sep                                                        |\n *  |                    | LLLL        | Wide                                                          | September                                                  |\n *  |                    | LLLLL       | Narrow                                                        | S                                                          |\n *  | Week of year       | w           | Numeric: minimum digits                                       | 1... 53                                                    |\n *  |                    | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |\n *  | Week of month      | W           | Numeric: 1 digit                                              | 1... 5                                                     |\n *  | Day of month       | d           | Numeric: minimum digits                                       | 1                                                          |\n *  |                    | dd          | Numeric: 2 digits + zero padded                               | 01                                                          |\n *  | Week day           | E, EE & EEE | Abbreviated                                                   | Tue                                                        |\n *  |                    | EEEE        | Wide                                                          | Tuesday                                                    |\n *  |                    | EEEEE       | Narrow                                                        | T                                                          |\n *  |                    | EEEEEE      | Short                                                         | Tu                                                         |\n *  | Period             | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |\n *  |                    | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |\n *  |                    | aaaaa       | Narrow                                                        | a/p                                                        |\n *  | Period*            | B, BB & BBB | Abbreviated                                                   | mid.                                                       |\n *  |                    | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | BBBBB       | Narrow                                                        | md                                                         |\n *  | Period standalone* | b, bb & bbb | Abbreviated                                                   | mid.                                                       |\n *  |                    | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | bbbbb       | Narrow                                                        | md                                                         |\n *  | Hour 1-12          | h           | Numeric: minimum digits                                       | 1, 12                                                      |\n *  |                    | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |\n *  | Hour 0-23          | H           | Numeric: minimum digits                                       | 0, 23                                                      |\n *  |                    | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |\n *  | Minute             | m           | Numeric: minimum digits                                       | 8, 59                                                      |\n *  |                    | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |\n *  | Second             | s           | Numeric: minimum digits                                       | 0... 59                                                    |\n *  |                    | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |\n *  | Fractional seconds | S           | Numeric: 1 digit                                              | 0... 9                                                     |\n *  |                    | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |\n *  |                    | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |\n *  | Zone               | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |\n *  |                    | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |\n *  |                    | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |\n *  |                    | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |\n *  |                    | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |\n *  |                    | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |\n *  |                    | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |\n *\n * Note that timezone correction is not applied to an ISO string that has no time component, such as \"2016-09-19\"\n *\n * ### Format examples\n *\n * These examples transform a date into various formats,\n * assuming that `dateObj` is a JavaScript `Date` object for\n * year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11,\n * given in the local time for the `en-US` locale.\n *\n * ```\n * {{ dateObj | date }}               // output is 'Jun 15, 2015'\n * {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n * {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n * {{ dateObj | date:'mmss' }}        // output is '43:11'\n * ```\n *\n * ### Usage example\n *\n * The following component uses a date pipe to display the current date in different formats.\n *\n * ```\n * \\@Component({\n *  selector: 'date-pipe',\n *  template: `<div>\n *    <p>Today is {{today | date}}</p>\n *    <p>Or if you prefer, {{today | date:'fullDate'}}</p>\n *    <p>The time is {{today | date:'h:mm a z'}}</p>\n *  </div>`\n * })\n * // Get the current date and time as a date-time value.\n * export class DatePipeComponent {\n *   today: number = Date.now();\n * }\n * ```\n *\n * \\@publicApi\n */\nvar DatePipe = /** @class */ (function () {\n    function DatePipe(locale) {\n        this.locale = locale;\n    }\n    /**\n     * @param value The date expression: a `Date` object,  a number\n     * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n     * @param format The date/time components to include, using predefined options or a\n     * custom format string.\n     * @param timezone A timezone offset (such as `'+0430'`), or a standard\n     * UTC/GMT or continental US timezone abbreviation. Default is\n     * the local system timezone of the end-user's machine.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @returns A date string in the desired format.\n     */\n    /**\n     * @param {?} value The date expression: a `Date` object,  a number\n     * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n     * @param {?=} format The date/time components to include, using predefined options or a\n     * custom format string.\n     * @param {?=} timezone A timezone offset (such as `'+0430'`), or a standard\n     * UTC/GMT or continental US timezone abbreviation. Default is\n     * the local system timezone of the end-user's machine.\n     * @param {?=} locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @return {?} A date string in the desired format.\n     */\n    DatePipe.prototype.transform = /**\n     * @param {?} value The date expression: a `Date` object,  a number\n     * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n     * @param {?=} format The date/time components to include, using predefined options or a\n     * custom format string.\n     * @param {?=} timezone A timezone offset (such as `'+0430'`), or a standard\n     * UTC/GMT or continental US timezone abbreviation. Default is\n     * the local system timezone of the end-user's machine.\n     * @param {?=} locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @return {?} A date string in the desired format.\n     */\n    function (value, format, timezone, locale) {\n        if (format === void 0) { format = 'mediumDate'; }\n        if (value == null || value === '' || value !== value)\n            return null;\n        try {\n            return formatDate(value, format, locale || this.locale, timezone);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DatePipe, error.message);\n        }\n    };\n    DatePipe.decorators = [\n        { type: Pipe, args: [{ name: 'date', pure: true },] },\n    ];\n    /** @nocollapse */\n    DatePipe.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n    ]; };\n    return DatePipe;\n}());\nexport { DatePipe };\nif (false) {\n    /** @type {?} */\n    DatePipe.prototype.locale;\n}\n//# sourceMappingURL=date_pipe.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Pipe } from '@angular/core';\nimport { NgLocalization, getPluralCategory } from '../i18n/localization';\nimport { invalidPipeArgumentError } from './invalid_pipe_argument_error';\n/** @type {?} */\nvar _INTERPOLATION_REGEXP = /#/g;\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Maps a value to a string that pluralizes the value according to locale rules.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n *\n * \\@publicApi\n */\nvar I18nPluralPipe = /** @class */ (function () {\n    function I18nPluralPipe(_localization) {\n        this._localization = _localization;\n    }\n    /**\n     * @param value the number to be formatted\n     * @param pluralMap an object that mimics the ICU format, see\n     * http://userguide.icu-project.org/formatparse/messages.\n     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n     * default).\n     */\n    /**\n     * @param {?} value the number to be formatted\n     * @param {?} pluralMap an object that mimics the ICU format, see\n     * http://userguide.icu-project.org/formatparse/messages.\n     * @param {?=} locale a `string` defining the locale to use (uses the current {\\@link LOCALE_ID} by\n     * default).\n     * @return {?}\n     */\n    I18nPluralPipe.prototype.transform = /**\n     * @param {?} value the number to be formatted\n     * @param {?} pluralMap an object that mimics the ICU format, see\n     * http://userguide.icu-project.org/formatparse/messages.\n     * @param {?=} locale a `string` defining the locale to use (uses the current {\\@link LOCALE_ID} by\n     * default).\n     * @return {?}\n     */\n    function (value, pluralMap, locale) {\n        if (value == null)\n            return '';\n        if (typeof pluralMap !== 'object' || pluralMap === null) {\n            throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\n        }\n        /** @type {?} */\n        var key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);\n        return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n    };\n    I18nPluralPipe.decorators = [\n        { type: Pipe, args: [{ name: 'i18nPlural', pure: true },] },\n    ];\n    /** @nocollapse */\n    I18nPluralPipe.ctorParameters = function () { return [\n        { type: NgLocalization }\n    ]; };\n    return I18nPluralPipe;\n}());\nexport { I18nPluralPipe };\nif (false) {\n    /** @type {?} */\n    I18nPluralPipe.prototype._localization;\n}\n//# sourceMappingURL=i18n_plural_pipe.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Pipe } from '@angular/core';\nimport { invalidPipeArgumentError } from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Generic selector that displays the string that matches the current value.\n *\n * If none of the keys of the `mapping` match the `value`, then the content\n * of the `other` key is returned when present, otherwise an empty string is returned.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n * \\@publicApi\n */\nvar I18nSelectPipe = /** @class */ (function () {\n    function I18nSelectPipe() {\n    }\n    /**\n     * @param value a string to be internationalized.\n     * @param mapping an object that indicates the text that should be displayed\n     * for different values of the provided `value`.\n     */\n    /**\n     * @param {?} value a string to be internationalized.\n     * @param {?} mapping an object that indicates the text that should be displayed\n     * for different values of the provided `value`.\n     * @return {?}\n     */\n    I18nSelectPipe.prototype.transform = /**\n     * @param {?} value a string to be internationalized.\n     * @param {?} mapping an object that indicates the text that should be displayed\n     * for different values of the provided `value`.\n     * @return {?}\n     */\n    function (value, mapping) {\n        if (value == null)\n            return '';\n        if (typeof mapping !== 'object' || typeof value !== 'string') {\n            throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n        }\n        if (mapping.hasOwnProperty(value)) {\n            return mapping[value];\n        }\n        if (mapping.hasOwnProperty('other')) {\n            return mapping['other'];\n        }\n        return '';\n    };\n    I18nSelectPipe.decorators = [\n        { type: Pipe, args: [{ name: 'i18nSelect', pure: true },] },\n    ];\n    return I18nSelectPipe;\n}());\nexport { I18nSelectPipe };\n//# sourceMappingURL=i18n_select_pipe.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Pipe } from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Converts a value into its JSON-format representation.  Useful for debugging.\n *\n * \\@usageNotes\n *\n * The following component uses a JSON pipe to convert an object\n * to JSON format, and displays the string in both formats for comparison.\n *\n * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n * \\@publicApi\n */\nvar JsonPipe = /** @class */ (function () {\n    function JsonPipe() {\n    }\n    /**\n     * @param value A value of any type to convert into a JSON-format string.\n     */\n    /**\n     * @param {?} value A value of any type to convert into a JSON-format string.\n     * @return {?}\n     */\n    JsonPipe.prototype.transform = /**\n     * @param {?} value A value of any type to convert into a JSON-format string.\n     * @return {?}\n     */\n    function (value) { return JSON.stringify(value, null, 2); };\n    JsonPipe.decorators = [\n        { type: Pipe, args: [{ name: 'json', pure: false },] },\n    ];\n    return JsonPipe;\n}());\nexport { JsonPipe };\n//# sourceMappingURL=json_pipe.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { KeyValueDiffers, Pipe } from '@angular/core';\n/**\n * @template K, V\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction makeKeyValuePair(key, value) {\n    return { key: key, value: value };\n}\n/**\n * A key value pair.\n * Usually used to represent the key value pairs from a Map or Object.\n *\n * \\@publicApi\n * @record\n * @template K, V\n */\nexport function KeyValue() { }\n/** @type {?} */\nKeyValue.prototype.key;\n/** @type {?} */\nKeyValue.prototype.value;\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Transforms Object or Map into an array of key value pairs.\n *\n * The output array will be ordered by keys.\n * By default the comparator will be by Unicode point value.\n * You can optionally pass a compareFn if your keys are complex types.\n *\n * \\@usageNotes\n * ### Examples\n *\n * This examples show how an Object or a Map and be iterated by ngFor with the use of this keyvalue\n * pipe.\n *\n * {\\@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\n *\n * \\@publicApi\n */\nvar KeyValuePipe = /** @class */ (function () {\n    function KeyValuePipe(differs) {\n        this.differs = differs;\n    }\n    /**\n     * @template K, V\n     * @param {?} input\n     * @param {?=} compareFn\n     * @return {?}\n     */\n    KeyValuePipe.prototype.transform = /**\n     * @template K, V\n     * @param {?} input\n     * @param {?=} compareFn\n     * @return {?}\n     */\n    function (input, compareFn) {\n        var _this = this;\n        if (compareFn === void 0) { compareFn = defaultComparator; }\n        if (!input || (!(input instanceof Map) && typeof input !== 'object')) {\n            return null;\n        }\n        if (!this.differ) {\n            // make a differ for whatever type we've been passed in\n            this.differ = this.differs.find(input).create();\n        }\n        /** @type {?} */\n        var differChanges = this.differ.diff(/** @type {?} */ (input));\n        if (differChanges) {\n            this.keyValues = [];\n            differChanges.forEachItem(function (r) {\n                _this.keyValues.push(makeKeyValuePair(r.key, /** @type {?} */ ((r.currentValue))));\n            });\n            this.keyValues.sort(compareFn);\n        }\n        return this.keyValues;\n    };\n    KeyValuePipe.decorators = [\n        { type: Pipe, args: [{ name: 'keyvalue', pure: false },] },\n    ];\n    /** @nocollapse */\n    KeyValuePipe.ctorParameters = function () { return [\n        { type: KeyValueDiffers }\n    ]; };\n    return KeyValuePipe;\n}());\nexport { KeyValuePipe };\nif (false) {\n    /** @type {?} */\n    KeyValuePipe.prototype.differ;\n    /** @type {?} */\n    KeyValuePipe.prototype.keyValues;\n    /** @type {?} */\n    KeyValuePipe.prototype.differs;\n}\n/**\n * @template K, V\n * @param {?} keyValueA\n * @param {?} keyValueB\n * @return {?}\n */\nexport function defaultComparator(keyValueA, keyValueB) {\n    /** @type {?} */\n    var a = keyValueA.key;\n    /** @type {?} */\n    var b = keyValueB.key;\n    // if same exit with 0;\n    if (a === b)\n        return 0;\n    // make sure that undefined are at the end of the sort.\n    if (a === undefined)\n        return 1;\n    if (b === undefined)\n        return -1;\n    // make sure that nulls are at the end of the sort.\n    if (a === null)\n        return 1;\n    if (b === null)\n        return -1;\n    if (typeof a == 'string' && typeof b == 'string') {\n        return a < b ? -1 : 1;\n    }\n    if (typeof a == 'number' && typeof b == 'number') {\n        return a - b;\n    }\n    if (typeof a == 'boolean' && typeof b == 'boolean') {\n        return a < b ? -1 : 1;\n    }\n    /** @type {?} */\n    var aString = String(a);\n    /** @type {?} */\n    var bString = String(b);\n    return aString == bString ? 0 : aString < bString ? -1 : 1;\n}\n//# sourceMappingURL=keyvalue_pipe.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, LOCALE_ID, Pipe } from '@angular/core';\nimport { formatCurrency, formatNumber, formatPercent } from '../i18n/format_number';\nimport { getCurrencySymbol } from '../i18n/locale_data_api';\nimport { invalidPipeArgumentError } from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Transforms a number into a string,\n * formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * If no parameters are specified, the function rounds off to the nearest value using this\n * [rounding method](https://en.wikibooks.org/wiki/Arithmetic/Rounding).\n * The behavior differs from that of the JavaScript ```Math.round()``` function.\n * In the following case for example, the pipe rounds down where\n * ```Math.round()``` rounds up:\n *\n * ```html\n * -2.5 | number:'1.0-0'\n * > -3\n * Math.round(-2.5)\n * > -2\n * ```\n *\n * @see `formatNumber()`\n *\n * \\@usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * ### Example\n *\n * <code-example path=\"common/pipes/ts/number_pipe.ts\" region='NumberPipe'></code-example>\n *\n * \\@publicApi\n */\nvar DecimalPipe = /** @class */ (function () {\n    function DecimalPipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param value The number to be formatted.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    /**\n     * @param {?} value The number to be formatted.\n     * @param {?=} digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param {?=} locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @return {?}\n     */\n    DecimalPipe.prototype.transform = /**\n     * @param {?} value The number to be formatted.\n     * @param {?=} digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param {?=} locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @return {?}\n     */\n    function (value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            /** @type {?} */\n            var num = strToNumber(value);\n            return formatNumber(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DecimalPipe, error.message);\n        }\n    };\n    DecimalPipe.decorators = [\n        { type: Pipe, args: [{ name: 'number' },] },\n    ];\n    /** @nocollapse */\n    DecimalPipe.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n    ]; };\n    return DecimalPipe;\n}());\nexport { DecimalPipe };\nif (false) {\n    /** @type {?} */\n    DecimalPipe.prototype._locale;\n}\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Transforms a number to a percentage\n * string, formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * @see `formatPercent()`\n *\n * \\@usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/percent_pipe.ts\" region='PercentPipe'></code-example>\n *\n * \\@publicApi\n */\nvar PercentPipe = /** @class */ (function () {\n    function PercentPipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     *\n     * @param value The number to be formatted as a percentage.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    /**\n     *\n     * @param {?} value The number to be formatted as a percentage.\n     * @param {?=} digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param {?=} locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @return {?}\n     */\n    PercentPipe.prototype.transform = /**\n     *\n     * @param {?} value The number to be formatted as a percentage.\n     * @param {?=} digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param {?=} locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @return {?}\n     */\n    function (value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            /** @type {?} */\n            var num = strToNumber(value);\n            return formatPercent(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(PercentPipe, error.message);\n        }\n    };\n    PercentPipe.decorators = [\n        { type: Pipe, args: [{ name: 'percent' },] },\n    ];\n    /** @nocollapse */\n    PercentPipe.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n    ]; };\n    return PercentPipe;\n}());\nexport { PercentPipe };\nif (false) {\n    /** @type {?} */\n    PercentPipe.prototype._locale;\n}\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Transforms a number to a currency string, formatted according to locale rules\n * that determine group sizing and separator, decimal-point character,\n * and other locale-specific configurations.\n *\n * @see `getCurrencySymbol()`\n * @see `formatCurrency()`\n *\n * \\@usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/currency_pipe.ts\" region='CurrencyPipe'></code-example>\n *\n * \\@publicApi\n */\nvar CurrencyPipe = /** @class */ (function () {\n    function CurrencyPipe(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     *\n     * @param value The number to be formatted as currency.\n     * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\n     * such as `USD` for the US dollar and `EUR` for the euro.\n     * @param display The format for the currency indicator. One of the following:\n     *   - `code`: Show the code (such as `USD`).\n     *   - `symbol`(default): Show the symbol (such as `$`).\n     *   - `symbol-narrow`: Use the narrow symbol for locales that have two symbols for their\n     * currency.\n     * For example, the Canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`. If the\n     * locale has no narrow symbol, uses the standard symbol for the locale.\n     *   - String: Use the given string value instead of a code or a symbol.\n     * For example, an empty string will suppress the currency & symbol.\n     *   - Boolean (marked deprecated in v5): `true` for symbol and false for `code`.\n     *\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * If not provided, the number will be formatted with the proper amount of digits,\n     * depending on what the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) specifies.\n     * For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    /**\n     *\n     * @param {?} value The number to be formatted as currency.\n     * @param {?=} currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\n     * such as `USD` for the US dollar and `EUR` for the euro.\n     * @param {?=} display The format for the currency indicator. One of the following:\n     *   - `code`: Show the code (such as `USD`).\n     *   - `symbol`(default): Show the symbol (such as `$`).\n     *   - `symbol-narrow`: Use the narrow symbol for locales that have two symbols for their\n     * currency.\n     * For example, the Canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`. If the\n     * locale has no narrow symbol, uses the standard symbol for the locale.\n     *   - String: Use the given string value instead of a code or a symbol.\n     * For example, an empty string will suppress the currency & symbol.\n     *   - Boolean (marked deprecated in v5): `true` for symbol and false for `code`.\n     *\n     * @param {?=} digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * If not provided, the number will be formatted with the proper amount of digits,\n     * depending on what the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) specifies.\n     * For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.\n     * @param {?=} locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @return {?}\n     */\n    CurrencyPipe.prototype.transform = /**\n     *\n     * @param {?} value The number to be formatted as currency.\n     * @param {?=} currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\n     * such as `USD` for the US dollar and `EUR` for the euro.\n     * @param {?=} display The format for the currency indicator. One of the following:\n     *   - `code`: Show the code (such as `USD`).\n     *   - `symbol`(default): Show the symbol (such as `$`).\n     *   - `symbol-narrow`: Use the narrow symbol for locales that have two symbols for their\n     * currency.\n     * For example, the Canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`. If the\n     * locale has no narrow symbol, uses the standard symbol for the locale.\n     *   - String: Use the given string value instead of a code or a symbol.\n     * For example, an empty string will suppress the currency & symbol.\n     *   - Boolean (marked deprecated in v5): `true` for symbol and false for `code`.\n     *\n     * @param {?=} digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * If not provided, the number will be formatted with the proper amount of digits,\n     * depending on what the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) specifies.\n     * For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.\n     * @param {?=} locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @return {?}\n     */\n    function (value, currencyCode, display, digitsInfo, locale) {\n        if (display === void 0) { display = 'symbol'; }\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        if (typeof display === 'boolean') {\n            if (/** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                console.warn(\"Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \\\"code\\\", \\\"symbol\\\" or \\\"symbol-narrow\\\".\");\n            }\n            display = display ? 'symbol' : 'code';\n        }\n        /** @type {?} */\n        var currency = currencyCode || 'USD';\n        if (display !== 'code') {\n            if (display === 'symbol' || display === 'symbol-narrow') {\n                currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);\n            }\n            else {\n                currency = display;\n            }\n        }\n        try {\n            /** @type {?} */\n            var num = strToNumber(value);\n            return formatCurrency(num, locale, currency, currencyCode, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(CurrencyPipe, error.message);\n        }\n    };\n    CurrencyPipe.decorators = [\n        { type: Pipe, args: [{ name: 'currency' },] },\n    ];\n    /** @nocollapse */\n    CurrencyPipe.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n    ]; };\n    return CurrencyPipe;\n}());\nexport { CurrencyPipe };\nif (false) {\n    /** @type {?} */\n    CurrencyPipe.prototype._locale;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmpty(value) {\n    return value == null || value === '' || value !== value;\n}\n/**\n * Transforms a string into a number (if needed).\n * @param {?} value\n * @return {?}\n */\nfunction strToNumber(value) {\n    // Convert strings to numbers\n    if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n        return Number(value);\n    }\n    if (typeof value !== 'number') {\n        throw new Error(value + \" is not a number\");\n    }\n    return value;\n}\n//# sourceMappingURL=number_pipe.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Pipe } from '@angular/core';\nimport { invalidPipeArgumentError } from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Creates a new `Array` or `String` containing a subset (slice) of the elements.\n *\n * \\@usageNotes\n *\n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n *\n * When operating on an `Array`, the returned `Array` is always a copy even when all\n * the elements are being returned.\n *\n * When operating on a blank value, the pipe returns the blank value.\n *\n * ### List Example\n *\n * This `ngFor` example:\n *\n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n *\n * produces the following:\n *\n * ```html\n * <li>b</li>\n * <li>c</li>\n * ```\n *\n * ### String Examples\n *\n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n *\n * \\@publicApi\n */\nvar SlicePipe = /** @class */ (function () {\n    function SlicePipe() {\n    }\n    /**\n     * @param value a list or a string to be sliced.\n     * @param start the starting index of the subset to return:\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or\n     * string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * @param end the ending index of the subset to return:\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     */\n    /**\n     * @param {?} value a list or a string to be sliced.\n     * @param {?} start the starting index of the subset to return:\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or\n     * string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * @param {?=} end the ending index of the subset to return:\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     * @return {?}\n     */\n    SlicePipe.prototype.transform = /**\n     * @param {?} value a list or a string to be sliced.\n     * @param {?} start the starting index of the subset to return:\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or\n     * string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * @param {?=} end the ending index of the subset to return:\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     * @return {?}\n     */\n    function (value, start, end) {\n        if (value == null)\n            return value;\n        if (!this.supports(value)) {\n            throw invalidPipeArgumentError(SlicePipe, value);\n        }\n        return value.slice(start, end);\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    SlicePipe.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n    SlicePipe.decorators = [\n        { type: Pipe, args: [{ name: 'slice', pure: false },] },\n    ];\n    return SlicePipe;\n}());\nexport { SlicePipe };\n//# sourceMappingURL=slice_pipe.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AsyncPipe } from './async_pipe';\nimport { LowerCasePipe, TitleCasePipe, UpperCasePipe } from './case_conversion_pipes';\nimport { DatePipe } from './date_pipe';\nimport { I18nPluralPipe } from './i18n_plural_pipe';\nimport { I18nSelectPipe } from './i18n_select_pipe';\nimport { JsonPipe } from './json_pipe';\nimport { KeyValuePipe } from './keyvalue_pipe';\nimport { CurrencyPipe, DecimalPipe, PercentPipe } from './number_pipe';\nimport { SlicePipe } from './slice_pipe';\nexport { AsyncPipe, CurrencyPipe, DatePipe, DecimalPipe, KeyValuePipe, I18nPluralPipe, I18nSelectPipe, JsonPipe, LowerCasePipe, PercentPipe, SlicePipe, TitleCasePipe, UpperCasePipe, };\n/** *\n * A collection of Angular pipes that are likely to be used in each and every application.\n  @type {?} */\nexport var COMMON_PIPES = [\n    AsyncPipe,\n    UpperCasePipe,\n    LowerCasePipe,\n    JsonPipe,\n    SlicePipe,\n    DecimalPipe,\n    PercentPipe,\n    TitleCasePipe,\n    CurrencyPipe,\n    DatePipe,\n    I18nPluralPipe,\n    I18nSelectPipe,\n    KeyValuePipe,\n];\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from '@angular/core';\nimport { COMMON_DIRECTIVES } from './directives/index';\nimport { DEPRECATED_PLURAL_FN, NgLocaleLocalization, NgLocalization, getPluralCase } from './i18n/localization';\nimport { COMMON_DEPRECATED_I18N_PIPES } from './pipes/deprecated/index';\nimport { COMMON_PIPES } from './pipes/index';\n/**\n * Exports all the basic Angular directives and pipes,\n * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * * The `providers` options configure the NgModule's injector to provide\n * localization dependencies to members.\n * * The `exports` options make the declared directives and pipes available for import\n * by other NgModules.\n *\n * \\@publicApi\n */\nvar CommonModule = /** @class */ (function () {\n    function CommonModule() {\n    }\n    CommonModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n                    exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n                    providers: [\n                        { provide: NgLocalization, useClass: NgLocaleLocalization },\n                    ],\n                },] },\n    ];\n    return CommonModule;\n}());\nexport { CommonModule };\nvar Éµ0 = getPluralCase;\n/**\n * A module that contains the deprecated i18n pipes.\n *\n * @deprecated from v5\n * \\@publicApi\n */\nvar DeprecatedI18NPipesModule = /** @class */ (function () {\n    function DeprecatedI18NPipesModule() {\n    }\n    DeprecatedI18NPipesModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [COMMON_DEPRECATED_I18N_PIPES],\n                    exports: [COMMON_DEPRECATED_I18N_PIPES],\n                    providers: [{ provide: DEPRECATED_PLURAL_FN, useValue: Éµ0 }],\n                },] },\n    ];\n    return DeprecatedI18NPipesModule;\n}());\nexport { DeprecatedI18NPipesModule };\nexport { Éµ0 };\n//# sourceMappingURL=common_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { defineInjectable, inject } from '@angular/core';\nimport { DOCUMENT } from './dom_tokens';\n/**\n * Manages the scroll position.\n *\n * \\@publicApi\n * @abstract\n */\nvar ViewportScroller = /** @class */ (function () {\n    function ViewportScroller() {\n    }\n    /** @nocollapse */\n    /** @nocollapse */ ViewportScroller.ngInjectableDef = defineInjectable({ providedIn: 'root', factory: function () { return new BrowserViewportScroller(inject(DOCUMENT), window); } });\n    return ViewportScroller;\n}());\nexport { ViewportScroller };\nif (false) {\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ViewportScroller.ngInjectableDef;\n    /**\n     * Configures the top offset used when scrolling to an anchor.\n     *\n     * When given a tuple with two number, the service will always use the numbers.\n     * When given a function, the service will invoke the function every time it restores scroll\n     * position.\n     * @abstract\n     * @param {?} offset\n     * @return {?}\n     */\n    ViewportScroller.prototype.setOffset = function (offset) { };\n    /**\n     * Returns the current scroll position.\n     * @abstract\n     * @return {?}\n     */\n    ViewportScroller.prototype.getScrollPosition = function () { };\n    /**\n     * Sets the scroll position.\n     * @abstract\n     * @param {?} position\n     * @return {?}\n     */\n    ViewportScroller.prototype.scrollToPosition = function (position) { };\n    /**\n     * Scrolls to the provided anchor.\n     * @abstract\n     * @param {?} anchor\n     * @return {?}\n     */\n    ViewportScroller.prototype.scrollToAnchor = function (anchor) { };\n    /**\n     *\n     * Disables automatic scroll restoration provided by the browser.\n     *\n     * See also [window.history.scrollRestoration\n     * info](https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration)\n     * @abstract\n     * @param {?} scrollRestoration\n     * @return {?}\n     */\n    ViewportScroller.prototype.setHistoryScrollRestoration = function (scrollRestoration) { };\n}\n/**\n * Manages the scroll position.\n */\nvar /**\n * Manages the scroll position.\n */\nBrowserViewportScroller = /** @class */ (function () {\n    function BrowserViewportScroller(document, window) {\n        this.document = document;\n        this.window = window;\n        this.offset = function () { return [0, 0]; };\n    }\n    /**\n     * Configures the top offset used when scrolling to an anchor.\n     *\n     * * When given a number, the service will always use the number.\n     * * When given a function, the service will invoke the function every time it restores scroll\n     * position.\n     */\n    /**\n     * Configures the top offset used when scrolling to an anchor.\n     *\n     * * When given a number, the service will always use the number.\n     * * When given a function, the service will invoke the function every time it restores scroll\n     * position.\n     * @param {?} offset\n     * @return {?}\n     */\n    BrowserViewportScroller.prototype.setOffset = /**\n     * Configures the top offset used when scrolling to an anchor.\n     *\n     * * When given a number, the service will always use the number.\n     * * When given a function, the service will invoke the function every time it restores scroll\n     * position.\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        if (Array.isArray(offset)) {\n            this.offset = function () { return offset; };\n        }\n        else {\n            this.offset = offset;\n        }\n    };\n    /**\n     * Returns the current scroll position.\n     */\n    /**\n     * Returns the current scroll position.\n     * @return {?}\n     */\n    BrowserViewportScroller.prototype.getScrollPosition = /**\n     * Returns the current scroll position.\n     * @return {?}\n     */\n    function () {\n        if (this.supportScrollRestoration()) {\n            return [this.window.scrollX, this.window.scrollY];\n        }\n        else {\n            return [0, 0];\n        }\n    };\n    /**\n     * Sets the scroll position.\n     */\n    /**\n     * Sets the scroll position.\n     * @param {?} position\n     * @return {?}\n     */\n    BrowserViewportScroller.prototype.scrollToPosition = /**\n     * Sets the scroll position.\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        if (this.supportScrollRestoration()) {\n            this.window.scrollTo(position[0], position[1]);\n        }\n    };\n    /**\n     * Scrolls to the provided anchor.\n     */\n    /**\n     * Scrolls to the provided anchor.\n     * @param {?} anchor\n     * @return {?}\n     */\n    BrowserViewportScroller.prototype.scrollToAnchor = /**\n     * Scrolls to the provided anchor.\n     * @param {?} anchor\n     * @return {?}\n     */\n    function (anchor) {\n        if (this.supportScrollRestoration()) {\n            /** @type {?} */\n            var elSelectedById = this.document.querySelector(\"#\" + anchor);\n            if (elSelectedById) {\n                this.scrollToElement(elSelectedById);\n                return;\n            }\n            /** @type {?} */\n            var elSelectedByName = this.document.querySelector(\"[name='\" + anchor + \"']\");\n            if (elSelectedByName) {\n                this.scrollToElement(elSelectedByName);\n                return;\n            }\n        }\n    };\n    /**\n     * Disables automatic scroll restoration provided by the browser.\n     */\n    /**\n     * Disables automatic scroll restoration provided by the browser.\n     * @param {?} scrollRestoration\n     * @return {?}\n     */\n    BrowserViewportScroller.prototype.setHistoryScrollRestoration = /**\n     * Disables automatic scroll restoration provided by the browser.\n     * @param {?} scrollRestoration\n     * @return {?}\n     */\n    function (scrollRestoration) {\n        if (this.supportScrollRestoration()) {\n            /** @type {?} */\n            var history_1 = this.window.history;\n            if (history_1 && history_1.scrollRestoration) {\n                history_1.scrollRestoration = scrollRestoration;\n            }\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserViewportScroller.prototype.scrollToElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        /** @type {?} */\n        var rect = el.getBoundingClientRect();\n        /** @type {?} */\n        var left = rect.left + this.window.pageXOffset;\n        /** @type {?} */\n        var top = rect.top + this.window.pageYOffset;\n        /** @type {?} */\n        var offset = this.offset();\n        this.window.scrollTo(left - offset[0], top - offset[1]);\n    };\n    /**\n     * We only support scroll restoration when we can get a hold of window.\n     * This means that we do not support this behavior when running in a web worker.\n     *\n     * Lifting this restriction right now would require more changes in the dom adapter.\n     * Since webworkers aren't widely used, we will lift it once RouterScroller is\n     * battle-tested.\n     * @return {?}\n     */\n    BrowserViewportScroller.prototype.supportScrollRestoration = /**\n     * We only support scroll restoration when we can get a hold of window.\n     * This means that we do not support this behavior when running in a web worker.\n     *\n     * Lifting this restriction right now would require more changes in the dom adapter.\n     * Since webworkers aren't widely used, we will lift it once RouterScroller is\n     * battle-tested.\n     * @return {?}\n     */\n    function () {\n        try {\n            return !!this.window && !!this.window.scrollTo;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    return BrowserViewportScroller;\n}());\n/**\n * Manages the scroll position.\n */\nexport { BrowserViewportScroller };\nif (false) {\n    /** @type {?} */\n    BrowserViewportScroller.prototype.offset;\n    /** @type {?} */\n    BrowserViewportScroller.prototype.document;\n    /** @type {?} */\n    BrowserViewportScroller.prototype.window;\n}\n/**\n * Provides an empty implementation of the viewport scroller. This will\n * live in \\@angular/common as it will be used by both platform-server and platform-webworker.\n */\nvar /**\n * Provides an empty implementation of the viewport scroller. This will\n * live in \\@angular/common as it will be used by both platform-server and platform-webworker.\n */\nNullViewportScroller = /** @class */ (function () {\n    function NullViewportScroller() {\n    }\n    /**\n     * Empty implementation\n     */\n    /**\n     * Empty implementation\n     * @param {?} offset\n     * @return {?}\n     */\n    NullViewportScroller.prototype.setOffset = /**\n     * Empty implementation\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) { };\n    /**\n     * Empty implementation\n     */\n    /**\n     * Empty implementation\n     * @return {?}\n     */\n    NullViewportScroller.prototype.getScrollPosition = /**\n     * Empty implementation\n     * @return {?}\n     */\n    function () { return [0, 0]; };\n    /**\n     * Empty implementation\n     */\n    /**\n     * Empty implementation\n     * @param {?} position\n     * @return {?}\n     */\n    NullViewportScroller.prototype.scrollToPosition = /**\n     * Empty implementation\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) { };\n    /**\n     * Empty implementation\n     */\n    /**\n     * Empty implementation\n     * @param {?} anchor\n     * @return {?}\n     */\n    NullViewportScroller.prototype.scrollToAnchor = /**\n     * Empty implementation\n     * @param {?} anchor\n     * @return {?}\n     */\n    function (anchor) { };\n    /**\n     * Empty implementation\n     */\n    /**\n     * Empty implementation\n     * @param {?} scrollRestoration\n     * @return {?}\n     */\n    NullViewportScroller.prototype.setHistoryScrollRestoration = /**\n     * Empty implementation\n     * @param {?} scrollRestoration\n     * @return {?}\n     */\n    function (scrollRestoration) { };\n    return NullViewportScroller;\n}());\n/**\n * Provides an empty implementation of the viewport scroller. This will\n * live in \\@angular/common as it will be used by both platform-server and platform-webworker.\n */\nexport { NullViewportScroller };\n//# sourceMappingURL=viewport_scroller.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} cookieStr\n * @param {?} name\n * @return {?}\n */\nexport function parseCookieValue(cookieStr, name) {\n    name = encodeURIComponent(name);\n    for (var _i = 0, _a = cookieStr.split(';'); _i < _a.length; _i++) {\n        var cookie = _a[_i];\n        /** @type {?} */\n        var eqIndex = cookie.indexOf('=');\n        var _b = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], cookieName = _b[0], cookieValue = _b[1];\n        if (cookieName.trim() === name) {\n            return decodeURIComponent(cookieValue);\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=cookie.js.map"]}