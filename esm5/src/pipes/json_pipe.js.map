{"version":3,"file":"json_pipe.js","sourceRoot":"","sources":["../../../../../../packages/common/src/pipes/json_pipe.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,IAAI,EAAgB,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;;;IAmBhD;;OAEG;;;;;IACH,4BAAS;;;;IAAT,UAAU,KAAU,IAAY,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;;gBALzE,IAAI,SAAC,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAC;;mBAzBjC;;SA0Ba,QAAQ","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Converts a value into its JSON-format representation.  Useful for debugging.\n *\n * @usageNotes\n *\n * The following component uses a JSON pipe to convert an object\n * to JSON format, and displays the string in both formats for comparison.\n *\n * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n * @publicApi\n */\n@Pipe({name: 'json', pure: false})\nexport class JsonPipe implements PipeTransform {\n  /**\n   * @param value A value of any type to convert into a JSON-format string.\n   */\n  transform(value: any): string { return JSON.stringify(value, null, 2); }\n}\n"]}